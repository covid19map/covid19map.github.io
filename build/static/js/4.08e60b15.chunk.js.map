{"version":3,"sources":["components/survey/survery.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["binaryAnswers","value","label","handWashDurations","CoronaSurvey","setMetric","metric","setState","obj","key","Object","defineProperty","enumerable","configurable","writable","state","cough","fever","symptoms","proximity","washHands","washHandsDuration","washHandsSoap","riskyTravel","symptomaticContact","diagnosedContact","criticalContact","this","className","title","onChange","options","Math","random","style","color","role","aria-label","Component","CoronaSurveyHero","Question","children","Answer","name","option","SurveySlide","Survey","prevSlide","currentSlide","nextSlide","totalSlides","props","length","map","c","i","slideNumber","onClick","SurveyCaroussel","SurveySlideRender","cls"],"mappings":"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","file":"static/js/4.08e60b15.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport './survey.css';\r\n\r\nconst binaryAnswers = [\r\n  { value: true, label: 'Ja' },\r\n  { value: false, label: 'Nein' }\r\n];\r\n\r\nconst handWashDurations = [\r\n  { value: 1, label: '0-5 Sekunden' },\r\n  { value: 2, label: '5-10 Sekunden' },\r\n  { value: 3, label: '10-15 Sekunden' },\r\n  { value: 4, label: '15-20 Sekunden' },\r\n  { value: 5, label: '>20 Sekunden' }\r\n];\r\n\r\nexport default class CoronaSurvey extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cough: false,\r\n      fever: false,\r\n      symptoms: false,\r\n      proximity: false,\r\n      washHands: false,\r\n      washHandsDuration: 0,\r\n      washHandsSoap: false,\r\n      riskyTravel: false,\r\n      symptomaticContact: false,\r\n      diagnosedContact: false,\r\n      criticalContact: false,\r\n    }\r\n  }\r\n\r\n  setMetric = (metric, { value }) => {\r\n    this.setState({ [metric]: value });\r\n  }\r\n\r\n  render() {\r\n    const { setMetric } = this;\r\n    return(\r\n      <div className=\"corona-survey\">\r\n        <CoronaSurveyHero /> \r\n        <Survey title=\"COVID-19 infection probability assesement\">\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen trockenen Husten?\r\n              <Answer metric=\"cough\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Fieber (>37,9)?\r\n              <Answer metric=\"fever\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben oder hatten Sie in den vergangenen zwei Wochen zus√§tzlich dazu eine oder mehrere der folgenden Symptome?\r\n              (Halskratzen, Fr√∂steln, erh√∂hte Temperatur (>37,5), Atemprobleme, Durchfall, Abgeschlagenheit,\r\n              Glieder- oder Muskelschmerzen, Geruchs- oder Geschmacksverlust, Kopfschmerzen, Schnupfen.)\r\n              <Answer metric=\"symptoms\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie sich in den vergangenen zwei Wochen f√ºr mindestens 5 Minuten in der N√§he zu Personen aufgehalten,\r\n              die geniest oder gehustet haben (z.B. in der U-Bahn, im Bus oder in einem geschlossenen Raum)?\r\n              <Answer metric=\"proximity\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Waschen Sie sich h√§ufig die H√§nde (mind. 3x am Tag)?\r\n              <Answer metric=\"washHands\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              F√ºr wie lange waschen Sie sich die H√§nde?\r\n              <Answer metric=\"washHandsDuration\" options={handWashDurations} onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Verwenden Sie Seife?\r\n              <Answer metric=\"washHandsSoap\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Sind Sie in den vergangenen zwei Wochen in eines dieser Risikogebiete gereist?\r\n              (RKI, Stand 21.3.2020: √Ñgypten, China (Provinz Hubei), Iran, Italien,\r\n              √ñsterreich (Bundesland Tirol), Spanien (Madrid),\r\n              S√ºdkorea (Provinz Gyeongsangbuk-do (Nord-Gyeongsang),\r\n              USA (Bundesstaaten Kalifornien, Washington und New York))\r\n              <Answer metric=\"riskyTravel\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt*\r\n              zu einer Person, die gehustet hat?\r\n              <Answer metric=\"symptomaticContact\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt* zu einer Person,\r\n              die leicht an COVID-19 erkrankt ist\r\n              (labortechnisch festgestellt, ohne Fieber, mit Husten, Halskratzen und/oder ggf. Abgeschlagenheit)?\r\n              <Answer metric=\"diagnosedContact\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt*\r\n              zu einer Person, die schwer an COVID-19 erkrankt ist\r\n              (labortechnisch festgestellt, mit Husten, Fieber und/oder Lungenentz√ºndung)?\r\n              *H√§ndesch√ºtteln, Umarmen, von einem gemeinsamen Teller essen, Gegenst√§nde ber√ºhren,\r\n              die die Infizierte Person auch ber√ºhrt hat, weniger als 1,5 m Abstand.\r\n              <Answer metric=\"criticalContact\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <div className=\"corona-survey__conclusion\">\r\n              <p>\r\n                Vielen Dank f√ºr Ihre Teilnahme!\r\n              </p>\r\n              <p>\r\n                Die Wahrscheinlichkeit einer Infektion betr√§gt:\r\n                &nbsp;\r\n                {`${Math.random()*100}%`}\r\n              </p>\r\n              <p style={{color: 'red'}}>\r\n                ACHTUNG: Das ist (noch) ein zuf√§llig errechneter Wert dieses Prototyps!!!\r\n              </p>\r\n              <p>\r\n                Mit Hilfe der von Ihnen bereitgestellten Daten wird eine\r\n                weitaus differenziertere Betrachtung der Situation\r\n                m√∂glich sein als mit den gemeldeteten Labortests allein.\r\n              </p>\r\n              <p>\r\n                Halten Sie gut durch! <span role=\"img\" aria-label=\"strength\">üí™</span>\r\n              </p>\r\n            </div>\r\n          </SurveySlide>\r\n        </Survey>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst CoronaSurveyHero = () => <div className=\"corona-survey-hero\"></div>;\r\n\r\nconst Question = ({ children }) => (\r\n  <div className=\"corona-survey__question\">{children}</div>\r\n);\r\n\r\nconst Answer = ({ metric, onChange, options = binaryAnswers }) => (\r\n  <Select\r\n    className=\"corona-survey__answers\"\r\n    name={metric}\r\n    options={options}\r\n    onChange={(option) => { onChange(metric, option) }}\r\n  />\r\n);\r\n\r\n//------------\r\n\r\nconst SurveySlide = ({ children }) => (\r\n  <Fragment>{children}</Fragment>\r\n);\r\n\r\nclass Survey extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      totalSlides: 0,\r\n      currentSlide: 0,\r\n    }\r\n  }\r\n\r\n  prevSlide = () => {\r\n    const { currentSlide } = this.state;\r\n    if(currentSlide > 0) {\r\n      this.setState({ currentSlide: currentSlide - 1 });\r\n    }\r\n  }\r\n\r\n  nextSlide = () => {\r\n    const { totalSlides, currentSlide } = this.state;\r\n    if(currentSlide < totalSlides - 1) {\r\n      this.setState({ currentSlide: currentSlide + 1 });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      totalSlides: this.props.children.length,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { props, state, prevSlide, nextSlide } = this;\r\n    const { title, children } = props;\r\n    const { totalSlides, currentSlide } = state;\r\n    // console.log(totalSlides);\r\n    // TODO: Loading spinner while totalSLides <= 0\r\n    return(\r\n      <Fragment>\r\n        <h2>{title}</h2>\r\n        <div className=\"survey__step\">\r\n          {currentSlide + 1} / <span>{totalSlides}</span>\r\n        </div>\r\n        <SurveyCaroussel>\r\n          {children.map((c, i) => (\r\n            <SurveySlideRender key={i} slideNumber={i} currentSlide={currentSlide}>\r\n              {c.props.children}\r\n            </SurveySlideRender>\r\n          ))}\r\n          <div className=\"survery-caroussel__controls\">\r\n            <button onClick={prevSlide}>Zur√ºck</button>\r\n            <button onClick={nextSlide}>Weiter</button>\r\n          </div>\r\n        </SurveyCaroussel>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst SurveyCaroussel = ({ children }) => (\r\n  <div className=\"survey-caroussel\">{children}</div>\r\n);\r\n\r\nconst SurveySlideRender = ({ slideNumber, currentSlide, children }) => {\r\n  const isVisible = slideNumber === currentSlide;\r\n  const cls = `survey-slide-render ${isVisible ? 'visible': ''}`;\r\n  const clsInner = 'survey-slide-render__inner';\r\n  return <div className={cls}><div className={clsInner}>{children}</div></div>;\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}