{"version":3,"sources":["utilities/formatting.js","components/discrete-slider/discrete-slider.js","theme/theme.js","components/data-map/layers-setup.js","components/data-map/data-map.js","components/data-panel/data-chart.js","utilities/data-mutations.js","components/data-panel/data-panel.js","utilities/interfaces.js","Dashboard.js","components/navigation/navigation.js","data-mockup.js","App.js","serviceWorker.js","index.js","components/loader/loader.js"],"names":["pad","num","size","s","length","__bigIntegerDisplayFormater","Intl","NumberFormat","bigIntegerDisplay","number","format","__percentageDisplayFormater","maximumSignificantDigits","percentageDisplay","dateDisplay","date","getDate","getMonth","getFullYear","identity","x","findClosestPoint1d","x0","set","D","map","Math","abs","indexOf","min","evalSliderMarkerPos","DiscreteSlider","props","onMouseDown","setState","isDragging","onMouseUp","state","availableValues","value","onChange","isSnapped","target","snapRange","option","Number","array","max","formatValue","filter","filterRange","v","i","self","sort","unshift","push","this","console","log","startValue","paramsInput","type","onTouchStart","onTouchEnd","range","left","subclsDragging","subclsSnapped","cls","paramsThumb","className","style","paramsThumbAnimation","paramsDisplayValue","display","key","Component","theme","base","spacing","typography","font","sans","serif","text","title","breakpoint","xs","sm","md","lg","color","primary","secondary","tertiary","dark","light","infected","recovered","deaths","border","radius","boxShadow","lenghts","navigation","offset","height","isZoomed","trueVal","falseVal","circleRadius","metric","scale","confirmedLayer","id","source","paint","recoveredLayer","deathsLayer","countLayer","layout","areasLayer","surveyLayerClustered","surveyLayerUnclustered","surveyLayerCount","DataMap","container","pointsCondensed","pointsSurvey","areasCountries","mapStyle","onClick","live","useState","width","latitude","longitude","zoom","viewport","setViewport","mapStyleURI","onViewportChange","mapboxApiAccessToken","data","cluster","position","bottom","right","generateDataset","label","Object","values","borderColor","backgroundColor","borderWidth","chartSetup","elements","point","legend","scales","xAxes","yAxes","ticks","beginAtZero","padding","top","PingChart","procData","confirmed","labels","keys","t","Date","datasets","redraw","chart","update","node","Chart","options","prevProps","isEqual","ref","e","__sum","y","__or","__ensureArray","__condenseDataset","prop","dataset","p","reduce","condenseTimestampedData","r","forEach","condenseDataset","filterOrderedProps","threshhold","fromEntries","entries","filterDataset","possiblities","includes","DataPanelTiles","heading","DataPanelTile","children","DataPanelControls","onToggleFilters","onToggleCharts","chartsExpanded","clsToggleCharts","FilterIcon","viewBox","d","ArrowLeftIcon","GithubIcon","DataPanel","condensedDataCurrent","condensedDataConfined","currentTime","isDataNotEmpty","confirmedValues","recoveredValues","deathsValues","controlHandlers","clsCharts","href","rel","countryBorders","require","notEmpty","intfcGeoPointsCondensed","geoData","features","_geodataFeatures","latlng","lat","lng","properties","geometry","coordinates","intfcGeoPointsSurvey","infectionPropability","probability","intfcGeoAreasCountries","province","country","areaBorder","feat","Dashboard","handleSetTime","laboratory","timestamps","filtered","handleToggleCharts","handleCollapseCharts","handleToggleFilters","filtersExpanded","handleCollapseFilters","handleFilterCountries","filteredRegions","survey","filterTimestampedData","fetched","setTime","unixtime","registeredRegions","mapNode","__registeredCountries","Set","datapoint","region","__registeredProvinces","timeBegin","timeEnd","open","onClose","classNames","modal","overlay","center","isMulti","name","defaultValue","Navigation","handleToggle","isExpanded","handleCollapse","clsNav","clsToggle","to","__setActive","isCurrent","NavList","c","getProps","NavLink","MenuIcon","HomeIcon","TableIcon","SurveyIcon","ContactIcon","ImprintIcon","laboratoryDataMockup","1584820500000","active","1584820800000","1584820813832","surveyDataMockup","__PROXY","getLaboratoryData","a","fetch","res","json","getSurveyData","genLazyRoute","routeModule","timeMin","Promise","all","resolve","setTimeout","then","DataTable","lazy","Survey","DataLoadingIndicator","usePromiseTracker","delay","promiseInProgress","App","trackPromise","latestData","fallback","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","CircularLoader","MainLoader","Array"],"mappings":"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","file":"static/js/main.38f77e43.chunk.js","sourcesContent":["export const pad = (num, size) => {\r\n  let s = num + '';\r\n  while(s.length < size) s = '0' + s;\r\n  return s;\r\n}\r\n\r\nconst __bigIntegerDisplayFormater = new Intl.NumberFormat('en-US');\r\n\r\nexport const bigIntegerDisplay = (number) => (\r\n  __bigIntegerDisplayFormater.format(number)\r\n);\r\n\r\nconst __percentageDisplayFormater = new Intl.NumberFormat(\r\n  'en-IN', { maximumSignificantDigits: 3 }\r\n);\r\n\r\nexport const percentageDisplay = (number) => (\r\n  __percentageDisplayFormater.format(number)\r\n);\r\n\r\nexport const dateString = (date) => (\r\n  `${pad(date.getMonth() + 1, 2)}-${pad(date.getDate(), 2)}-${date.getFullYear()}`\r\n);\r\n\r\nexport const dateDisplay = (date) => (\r\n  `${pad(date.getDate(), 2)}.${pad(date.getMonth() + 1, 2)}.${date.getFullYear()}`\r\n);\r\n","import React, { Component } from 'react';\r\nimport './discrete-slider.css';\r\n\r\nconst identity = (x) => x;\r\n\r\nconst removeDuplicates = (array) => (\r\n  array.filter((v, i, self) => self.indexOf(v) === i)\r\n);\r\n\r\nconst filterRange = (array, min, max) => (\r\n  array.filter((x) => x < max).filter((x) => x > min)\r\n);\r\n\r\nconst findSmallestGap = (set) => (\r\n  // assumes an ordered array without duplicate entries\r\n  Math.min(...set.map((x, i) => (\r\n    i === 0 ? set[set.length - 1] : Math.abs(x - set[i - 1])\r\n  )))\r\n);\r\n\r\nconst findClosestPoint1d = (x0, set) => {\r\n  // assumes a number and an ordered array without duplicate entries\r\n  const D = set.map((x) => Math.abs(x - x0));\r\n  return set[D.indexOf(Math.min(...D))];\r\n}\r\n\r\nconst evalSliderMarkerPos = (x) => (\r\n  // x*100 - c\r\n  // where c = 5*(x - .5) is the correction term,\r\n  // the scaled distance from the mid point.\r\n  // =>\r\n  x*100 - 5*(x - .5)\r\n);\r\n\r\nexport default class DiscreteSlider extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    const {\r\n      max = 0,\r\n      min = 100,\r\n      availableValues = [],\r\n      formatValue = identity,\r\n    } = props;\r\n    this.formatValue = formatValue;\r\n    this.availableValues = filterRange(removeDuplicates(availableValues), min, max).sort();\r\n    this.availableValues.unshift(min);\r\n    this.availableValues.push(max);\r\n    this.snapRange = Math.min(\r\n      (max - min) / 25,\r\n      findSmallestGap(this.availableValues) / 2,\r\n    );\r\n    this.state = {\r\n      value: 0,\r\n      isDragging: false,\r\n      isSnapped: false,\r\n    }\r\n  }\r\n  \r\n  onMouseDown = () => {\r\n    this.setState({ isDragging: true });\r\n  }\r\n  \r\n  onMouseUp = () => {\r\n    const { props, state, availableValues } = this;\r\n    let { value } = state;\r\n    value = findClosestPoint1d(value, availableValues);\r\n    props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isDragging: false,\r\n      isSnapped: true,\r\n    });\r\n  }\r\n  \r\n  onChange = ({ target }) => {\r\n    const { props, availableValues, snapRange } = this;\r\n    let { value } = target,\r\n        isSnapped = false;\r\n    for(const option of availableValues) {\r\n      const D = Math.abs(value - option);\r\n      if(D < snapRange) {\r\n        value = option;\r\n        isSnapped = true;\r\n        value = Number(value);\r\n        props.onChange(value);\r\n        break;\r\n      }\r\n    }\r\n    //value = Number(value);\r\n    //props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isSnapped,\r\n    });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if(this.availableValues.length === 2) {\r\n      console.log('Warning: Select has no available values apart from the edges');\r\n    }\r\n    const { props } = this,\r\n          { min, startValue } = props,\r\n          value = findClosestPoint1d(startValue, this.availableValues) || min;\r\n    props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isSnapped: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      props,\r\n      state,\r\n      availableValues,\r\n      formatValue,\r\n      onChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n    } = this;\r\n    const { min, max } = props;\r\n    const { value, isDragging, isSnapped } = state;\r\n    const paramsInput = {\r\n      type: 'range',\r\n      min,\r\n      max,\r\n      value: value || min,\r\n      onChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n      onTouchStart: onMouseDown,\r\n      onTouchEnd: onMouseUp,\r\n    }\r\n    const range = Math.abs(max - min);\r\n    const left = `${evalSliderMarkerPos((value - min) / range)}%`;\r\n    const subclsDragging = isDragging ? 'dragging' : '';\r\n    const subclsSnapped = isSnapped ? 'snapped' : '';\r\n    const cls = `discrete-slider ${subclsDragging}`;\r\n    const paramsThumb = {\r\n      className: 'discrete-slider__thumb',\r\n      style: { left },\r\n    }\r\n    const paramsThumbAnimation = {\r\n      className: `discrete-slider__thumb-animation ${subclsDragging}`,\r\n      style: { left },\r\n    }\r\n    const paramsDisplayValue = {\r\n      className: `discrete-slider__display-value ${subclsSnapped}`,\r\n      style: {\r\n        display: value <= min + this.snapRange || value >= max - this.snapRange ? 'none' : 'block',\r\n        left,\r\n      }\r\n    }\r\n    return(\r\n      <div className={cls}>\r\n        <input {...paramsInput} />\r\n        <div {...paramsThumb}></div>\r\n        <div {...paramsThumbAnimation}></div>\r\n        <div {...paramsDisplayValue}>\r\n          {formatValue(value)}\r\n        </div>\r\n        <div className=\"discrete-slider__markers\">\r\n          {availableValues.map((v, i) => (\r\n            <div\r\n              key={i}\r\n              className=\"discrete-slider__markers__marker\"\r\n              style={{ left: `${evalSliderMarkerPos((v - min) / range)}%` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const theme = {\r\n  base: '16px',\r\n  spacing: '1rem',\r\n  typography: {\r\n    font: {\r\n      sans: 'Jura',\r\n      serif: 'Forum',\r\n    },\r\n    text: '1rem',\r\n    title: '2rem'\r\n  },\r\n  breakpoint: {\r\n    xs: '0em',  /* 0px */\r\n    sm: '30em', /* 480px */\r\n    md: '64em', /* 1024px */\r\n    lg: '75em', /* 1200px */\r\n  },\r\n  color: {\r\n    primary: '#6d9197',\r\n    secondary: '#c4cdc1',\r\n    tertiary: '#99aead',\r\n    dark: '#28364d',\r\n    light: '#dee1dd',\r\n    infected: '#2f575d',\r\n    recovered: '#658b6f',\r\n    deaths: '#f8b95f',\r\n  },\r\n  border: {\r\n    radius: '20px',\r\n    boxShadow: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)',\r\n  },\r\n  lenghts: {\r\n    navigation: {\r\n      offset: '35px',\r\n      height: '90vh',\r\n    },\r\n  }\r\n}\r\n\r\nexport default theme;\r\n","import theme from '../../theme/theme';\r\n\r\nconst isZoomed = (trueVal, falseVal) => (\r\n  ['step', ['zoom'], falseVal, 4.75, trueVal, 6.25, falseVal]\r\n);\r\n\r\n/*\r\nconst circleColor = ['step',\r\n  ['get', 'confirmed'],\r\n  '#03befc',\r\n  20, '#f1f075',\r\n  800, '#f28cb1',\r\n  5000, '#ba1818'\r\n];\r\n*/\r\n\r\nconst circleRadius = (metric, scale = 1) => {\r\n  return isZoomed(['interpolate',\r\n    ['linear'],\r\n    ['get', metric],\r\n    100, scale*8,\r\n    10000, scale*16,\r\n    100000, scale*24,\r\n    200000, scale*32\r\n  ], 0);\r\n}\r\n\r\nexport const confirmedLayer = {\r\n  id: 'confirmed',\r\n  type: 'circle',\r\n  source: 'points-condensed',\r\n  paint: {\r\n    'circle-color': theme.color.infected,\r\n    'circle-opacity': .8,\r\n    'circle-radius': circleRadius('confirmed', 1),\r\n  }\r\n}\r\n\r\nexport const recoveredLayer = {\r\n  id: 'recovered',\r\n  type: 'circle',\r\n  source: 'points-condensed',\r\n  paint: {\r\n    'circle-color': theme.color.recovered,\r\n    'circle-opacity': .7,\r\n    'circle-radius': circleRadius('recovered', .8),\r\n  }\r\n}\r\n\r\nexport const deathsLayer = {\r\n  id: 'deaths',\r\n  type: 'circle',\r\n  source: 'points-condensed',\r\n  paint: {\r\n    'circle-color': theme.color.deaths,\r\n    'circle-opacity': .6,\r\n    'circle-radius': circleRadius('deaths', .67),\r\n  }\r\n}\r\n\r\nexport const countLayer = {\r\n  id: 'cluster-count',\r\n  type: 'symbol',\r\n  source: 'points-condensed',\r\n  layout: {\r\n    'text-field': ['get', 'confirmed'],\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': isZoomed(8, 0),\r\n  }\r\n}\r\n\r\nexport const areasLayer = {\r\n  id: 'tile-paint',\r\n  type: 'fill',\r\n  source: 'areas-countries',\r\n  layout: {},\r\n  paint: {\r\n    'fill-color': ['interpolate-hcl',\r\n      ['linear'],\r\n      ['get', 'confirmed'],\r\n      0,\r\n      '#52ff00',\r\n      400000,\r\n      '#c70039',\r\n    ],\r\n    'fill-opacity': ['interpolate',\r\n      ['linear'],\r\n      ['get', 'deaths'],\r\n      0,\r\n      .1,\r\n      400000,\r\n      1,\r\n    ],\r\n  }\r\n}\r\n\r\nexport const surveyLayerClustered = {\r\n  id: 'survey-clustered',\r\n  type: 'circle',\r\n  source: 'points-survey',\r\n  filter: ['has', 'point_count'],\r\n  paint: {\r\n    'circle-color': ['step',\r\n      ['get', 'point_count'],\r\n      '#490C90',\r\n      100, '#840C90',\r\n      750, '#900C36',\r\n    ],\r\n    'circle-radius': ['step',\r\n      ['get', 'point_count'],\r\n      10,\r\n      100, 14,\r\n      750, 18,\r\n    ]\r\n  }\r\n}\r\n   \r\nexport const surveyLayerUnclustered = {\r\n  id: 'survey-unclustered',\r\n  type: 'circle',\r\n  source: 'points-survey',\r\n  filter: ['!', ['has', 'point_count']],\r\n  paint: {\r\n    'circle-color': ['interpolate-hcl',\r\n    ['linear'],\r\n    ['*', ['get', 'probability'], 100],\r\n    0, '#ffd333',\r\n    100, '#ff5733',\r\n  ],\r\n    'circle-radius': 5,\r\n    'circle-stroke-width': 1,\r\n    'circle-stroke-color': 'transparent',\r\n  }\r\n}\r\n\r\nexport const surveyLayerCount = {\r\n  id: 'survey-count',\r\n  type: 'symbol',\r\n  source: 'points-survey',\r\n  filter: ['has', 'point_count'],\r\n  layout: {\r\n    'text-field': '{point_count_abbreviated}',\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': 12,\r\n  },\r\n  paint: {\r\n    'text-color': theme.color.light,\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport ReactMapGL, { Source, Layer, NavigationControl } from 'react-map-gl';\r\nimport {\r\n  confirmedLayer,\r\n  recoveredLayer,\r\n  deathsLayer,\r\n  countLayer,\r\n  areasLayer,\r\n  surveyLayerClustered,\r\n  surveyLayerUnclustered,\r\n  surveyLayerCount,\r\n} from './layers-setup';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2lhbm5vdHIiLCJhIjoiY2s3aHFkcDkwMGMzYjNlbzNvMWl4bGFxbyJ9.2p2O5m7aiA6Bn9vjPe7HrQ';\r\n\r\nconst DataMap = props => {\r\n  const {\r\n    container,\r\n    pointsCondensed,\r\n    pointsSurvey,\r\n    areasCountries,\r\n    mapStyle,\r\n    onClick,\r\n    live,\r\n  } = props;\r\n\r\n  const [viewport, setViewport] = useState({\r\n    width: '100vw',\r\n    height: '100vh',\r\n    latitude: 45,\r\n    longitude: 10,\r\n    zoom: 4,\r\n  });\r\n\r\n  const mapStyleURI = `mapbox://styles/mapbox/${mapStyle}`;\r\n\r\n  /*\r\n  const clusterParams = {\r\n    cluster: true,\r\n    clusterMaxZoom: 14,\r\n    clusterRadius: 50,\r\n    clusterProperties: { 'cluster_count': ['+', ['case', ['get', 'confirmed'], 1, 0]] },\r\n  }\r\n  */\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      container={container}\r\n      onViewportChange={setViewport}\r\n      mapboxApiAccessToken={MAPBOX_TOKEN}\r\n      mapStyle={mapStyleURI}\r\n      onClick={onClick}\r\n    >\r\n      {true && <Source id=\"points-condensed\" type=\"geojson\" data={pointsCondensed}>\r\n        <Layer {...confirmedLayer} />\r\n        <Layer {...deathsLayer} />\r\n        <Layer {...recoveredLayer} />\r\n        <Layer {...countLayer} />\r\n      </Source>}\r\n      <Source id=\"areas-countries\" type=\"geojson\" data={areasCountries}>\r\n        <Layer {...areasLayer} />\r\n      </Source>\r\n      {/*Show only when data is live*/}\r\n      {live && <Source id=\"points-survey\" type=\"geojson\" data={pointsSurvey} cluster={true}>\r\n        <Layer {...surveyLayerClustered} />\r\n        <Layer {...surveyLayerUnclustered} />\r\n        <Layer {...surveyLayerCount} />\r\n      </Source>}\r\n      <div style={{position: 'absolute', bottom: '45px', right: '20px'}}>\r\n        <NavigationControl />\r\n      </div>\r\n    </ReactMapGL>\r\n  );\r\n}\r\n\r\nexport default DataMap;\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { isEqual } from 'lodash';\r\nimport { dateDisplay } from '../../utilities/formatting';\r\nimport theme from '../../theme/theme';\r\n\r\nconst generateDataset = (label, data, color) => {\r\n  return({\r\n    label,\r\n    data: Object.values(data),\r\n    borderColor: color,\r\n    backgroundColor: 'transparent',\r\n    borderWidth: 2,\r\n  })\r\n}\r\n\r\nconst chartSetup = {\r\n  elements: {\r\n    point: { radius: 0 },\r\n  },\r\n  legend: { display: false },\r\n  scales: {\r\n    xAxes: [{ display: false }],\r\n    yAxes: [{\r\n      display: false,\r\n      ticks: {\r\n        beginAtZero: true,\r\n      }\r\n    }]\r\n  },\r\n  layout: {\r\n    padding: {\r\n      left: 25,\r\n      right: 25,\r\n      top: 40,\r\n      bottom: 40,\r\n    },\r\n  },\r\n}\r\n\r\nexport default class PingChart extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n    }\r\n    this.node = null;\r\n    this.chart = null;\r\n  }\r\n\r\n  procData = () => {\r\n    const { data } = this.props,\r\n          { confirmed, recovered, deaths } = data,\r\n          labels = Object.keys(confirmed).map(t => dateDisplay(new Date(t))),\r\n          datasets = [\r\n            generateDataset('Confirmed', confirmed, theme.color.infected),\r\n            generateDataset('Recovered', recovered, theme.color.recovered),\r\n            generateDataset('Deaths', deaths, theme.color.deaths),\r\n          ];\r\n    return { labels, datasets }\r\n  }\r\n\r\n  redraw = () => {\r\n    const { chart, procData } = this;\r\n    chart.data = procData();\r\n    chart.update();\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const { node, procData } = this;\r\n    this.chart = new Chart(node, {\r\n      type: 'line',\r\n      data: procData(),\r\n      options: chartSetup,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { props, state, redraw } = this;\r\n    if(prevProps !== props && !isEqual(state.data, props.data)) {\r\n      redraw();\r\n      this.setState({\r\n        data: props.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return <canvas ref={e => this.node = e} />;\r\n  }\r\n}\r\n","const __sum = (x, y) => x + y;\r\nconst __or = (x, y) => x || y;\r\nconst __ensureArray = (x) => {\r\n  if(typeof x !== 'object') {\r\n    x = [x];\r\n  }\r\n  return x;\r\n}\r\nconst __includesArray = (array, possiblities) => (\r\n  !!array ? possiblities.map(p => array.includes(p)).reduce(__or, false) : true\r\n)\r\n\r\n// B.F. TODO: Add tests!\r\n\r\nconst __condenseDataset = (prop, dataset) => (\r\n  !!prop ? dataset.map(p => p[prop]).reduce(__sum, 0) : 0\r\n);\r\n\r\nexport const condenseDataset = (props, dataset) => {\r\n  if(typeof props === 'object') {\r\n    return props.map(p => __condenseDataset(p, dataset)).reduce(__sum, 0);\r\n  } else {\r\n    return __condenseDataset(props, dataset);\r\n  }\r\n}\r\n\r\nexport const condenseTimestampedData = (props, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = condenseDataset(props, data[t])\r\n  });\r\n  return r;\r\n}\r\n\r\nexport const filterKeys = (props, dataset) => {\r\n  props = __ensureArray(props);\r\n  return dataset.map(p => Object.keys(p)\r\n    .filter(key => props.includes(key))\r\n    .reduce((obj, key) => {\r\n      obj[key] = p[key];\r\n      return obj;\r\n    }, {}));\r\n}\r\n\r\nexport const filterTimestampedKeys = (props, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = filterKeys(props, data[t])\r\n  });\r\n  return r;\r\n}\r\n\r\nexport const filterOrderedProps = (threshhold, data) => (\r\n  Object.fromEntries(Object.entries(data).filter(x => x[0] <= threshhold))\r\n);\r\n\r\nexport const filterDataset = (props, values, dataset) => (\r\n  dataset.filter(\r\n    p => __includesArray(values, __ensureArray(props).map(x => p[x]))\r\n  )\r\n);\r\n\r\nexport const filterTimestampedData = (props, values, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = filterDataset(props, values, data[t])\r\n  });\r\n  return r;\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport DataChart from './data-chart';\r\nimport { CircularLoader } from '../loader/loader';\r\nimport { condenseTimestampedData, filterOrderedProps } from '../../utilities/data-mutations';\r\nimport { bigIntegerDisplay, percentageDisplay } from '../../utilities/formatting';\r\nimport './data-panel.css';\r\n\r\nconst DataPanel = (props) => {\r\n  const {\r\n    data,\r\n    currentTime,\r\n    chartsExpanded,\r\n    onToggleFilters,\r\n    onToggleCharts,\r\n  } = props;\r\n\r\n  const isDataNotEmpty = !!Object.keys(data).length;\r\n  let condensedDataCurrent, condensedDataConfined;\r\n\r\n  if(isDataNotEmpty) {\r\n    const confirmedValues = condenseTimestampedData('confirmed', data),\r\n          recoveredValues = condenseTimestampedData('recovered', data),\r\n          deathsValues = condenseTimestampedData('deaths', data);\r\n\r\n    condensedDataCurrent = {\r\n      confirmed: confirmedValues[currentTime],\r\n      recovered: recoveredValues[currentTime],\r\n      deaths: deathsValues[currentTime],\r\n    }\r\n\r\n    condensedDataConfined = {\r\n      confirmed: filterOrderedProps(currentTime, confirmedValues),\r\n      recovered: filterOrderedProps(currentTime, recoveredValues),\r\n      deaths: filterOrderedProps(currentTime, deathsValues),\r\n    };\r\n  }\r\n\r\n  const controlHandlers = { onToggleFilters, onToggleCharts, chartsExpanded }\r\n  const clsCharts = `charts-container ${chartsExpanded ? 'expanded' : ''}`\r\n\r\n  return(\r\n    <Fragment>\r\n      <div className=\"data-panel\">\r\n        {isDataNotEmpty ?\r\n          <Fragment>\r\n            <DataPanelTiles {...condensedDataCurrent} />\r\n            <DataPanelControls {...controlHandlers} />\r\n          </Fragment>\r\n          :\r\n          <CircularLoader />\r\n        }\r\n      </div>\r\n      <div className={clsCharts}>\r\n        <div className=\"charts-container__heading\">\r\n          <h2>Data chart</h2>\r\n          <h3>(Cases over time)</h3>\r\n        </div>\r\n        {isDataNotEmpty && <DataChart data={condensedDataConfined} />}\r\n        <div className=\"charts-container__source\">\r\n          Data sources: Johns Hopkins University CSSE\r\n          <a href=\"https://github.com/CSSEGISandData/COVID-19\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <GithubIcon />\r\n            repository\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst DataPanelTiles = ({ confirmed, deaths, recovered }) => {\r\n  return(\r\n    <Fragment>\r\n      <DataPanelTile cls=\"confirmed\" heading=\"Confirmed\">\r\n        {bigIntegerDisplay(confirmed)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"recovered\" heading=\"Recovered\">\r\n        {bigIntegerDisplay(recovered)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"deaths\" heading=\"Deaths\">\r\n        {bigIntegerDisplay(deaths)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"computations\" heading=\"Computations\">\r\n        <div>\r\n          Active cases: {bigIntegerDisplay(confirmed - deaths - recovered)}\r\n        </div>\r\n        <div>\r\n          Recovery rate: {`${percentageDisplay(confirmed ? recovered / confirmed * 100 : 0)}%`}\r\n        </div>\r\n        <div>\r\n          Mortality rate: {`${percentageDisplay(confirmed ? deaths / confirmed * 100 : 0)}%`}\r\n        </div>\r\n      </DataPanelTile>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst DataPanelTile = ({ cls, heading, children }) => {\r\n  cls = `data-panel__tile ${cls}`;\r\n  return(\r\n    <div className={cls}>\r\n      <div className=\"data-panel__tile__heading\">{heading}</div>\r\n      <div className=\"data-panel__tile__content\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DataPanelControls = (props) => {\r\n  const {\r\n    onToggleFilters,\r\n    onToggleCharts,\r\n    chartsExpanded,\r\n  } = props;\r\n  const clsToggleCharts = `data-panel__controls__toggle-charts\r\n    ${chartsExpanded ? 'expanded' : ''}`;\r\n  return(\r\n    <div className=\"data-panel__controls\">\r\n      <span onClick={onToggleFilters}>\r\n        <FilterIcon />\r\n      </span>\r\n      <span className={clsToggleCharts} onClick={onToggleCharts}>\r\n        <ArrowLeftIcon />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\nconst LiveDataComputations = ({\r\n  confirmed, deaths, recovered, children\r\n}) => {\r\n  return(\r\n    <div className=\"data-panel-computations__block\">\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"data-panel-computations__metric-key\">\r\n          Active cases:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          {bigIntegerDisplay(confirmed - deaths - recovered)}\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"live-data-panel-computations__metric-key\">\r\n          Recover rate:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          {`${percentageDisplay(recovered / confirmed * 100)}%`}\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"data-panel-computations__metric-key\">\r\n          Mortality rate:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          <span className=\"data-panel-computations__fatal\">\r\n            {`${percentageDisplay(deaths / confirmed * 100)}%`}\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__block-description\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nconst FilterIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M1 0l9 15.094v5.906l4 3v-8.906l9-15.094h-22zm18.479 2l-2.981 5h-8.996l-2.981-5h14.958z\" />\r\n  </svg>\r\n);\r\n\r\nconst ArrowLeftIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M24 11.871l-5-4.871v3h-19v4h19v3z\" />\r\n  </svg>\r\n);\r\n\r\nconst GithubIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n  </svg>\r\n)\r\n\r\nexport default DataPanel;\r\n","const countryBorders = require('./countries-mock.geo.json');\r\n\r\nconst notEmpty = dataset => !!dataset ? Object.keys(dataset).length > 0 : false;\r\n\r\nexport const intfcGeoPointsCondensed = dataset => {\r\n  let geoData = {\r\n    type: 'FeatureCollection',\r\n    features: [],\r\n  }\r\n\r\n  if(notEmpty(dataset)) {\r\n    let _geodataFeatures = [];\r\n    for(const point of dataset){\r\n      const {\r\n        confirmed,\r\n        recovered,\r\n        deaths,\r\n        latlng,\r\n      } = point;\r\n\r\n      const [ lat, lng ] = latlng;\r\n\r\n      _geodataFeatures.push({\r\n        type: 'Feature',\r\n        properties: {\r\n          confirmed: Number(confirmed),\r\n          recovered: Number(recovered),\r\n          deaths: Number(deaths),\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [Number(lng), Number(lat)],\r\n        }\r\n      });\r\n    }\r\n\r\n    geoData.features = _geodataFeatures;\r\n  }\r\n  return geoData;\r\n}\r\n\r\nexport const intfcGeoPointsSurvey = dataset => {\r\n  let geoData = {\r\n    type: 'FeatureCollection',\r\n    features: [],\r\n  }\r\n\r\n  if(notEmpty(dataset)) {\r\n    let _geodataFeatures = [];\r\n    for(const point of dataset){\r\n      const {\r\n        infectionPropability,\r\n        latlng,\r\n      } = point;\r\n\r\n      //console.log(point.id, infectionPropability);\r\n\r\n      const [lat, lng] = latlng;\r\n\r\n      _geodataFeatures.push({\r\n        type: 'Feature',\r\n        properties: {\r\n          probability: Number(infectionPropability),\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [Number(lng), Number(lat)],\r\n        }\r\n      });\r\n    }\r\n\r\n    geoData.features = _geodataFeatures;\r\n  }\r\n  return geoData;\r\n}\r\n\r\nexport const intfcGeoAreasCountries = dataset => {\r\n  let geoData = {\r\n    type: 'FeatureCollection',\r\n    features: [],\r\n  }\r\n\r\n  if(notEmpty(dataset)) {\r\n    let _geodataFeatures = [];\r\n    for(const point of dataset){\r\n      const {\r\n        province,\r\n        country,\r\n        confirmed,\r\n        deaths,\r\n      } = point;\r\n\r\n      const areaBorder = Object.values(countryBorders.features).filter(feat => (\r\n        feat.properties['ADMIN'] === country || feat.properties['ADMIN'] === province\r\n      ));\r\n\r\n      if(areaBorder.length === 1) {\r\n        _geodataFeatures.push({\r\n          type: 'Feature',\r\n          properties: {\r\n            confirmed: Number(confirmed),\r\n            deaths: Number(deaths),\r\n          },\r\n          geometry: areaBorder[0].geometry,\r\n        });\r\n      }\r\n    }\r\n\r\n    geoData.features = _geodataFeatures;\r\n  }\r\n  return geoData;\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport Select from 'react-select';\r\nimport DiscreteSlider from './components/discrete-slider/discrete-slider';\r\nimport DataMap from './components/data-map/data-map';\r\nimport DataPanel from './components/data-panel/data-panel';\r\nimport { filterDataset, filterTimestampedData } from './utilities/data-mutations';\r\nimport { dateDisplay } from './utilities/formatting';\r\nimport {\r\n  intfcGeoPointsCondensed,\r\n  intfcGeoPointsSurvey,\r\n  intfcGeoAreasCountries,\r\n} from './utilities/interfaces';\r\nimport './dashboard.css';\r\n\r\n//import __DATA__MOCKUP from './data-mockup';\r\n\r\n//const __SATELLITE = 'satellite-v9';\r\n//const __LIGHTMODE = 'light-v10';\r\nconst __DARKMODE = 'dark-v10';\r\n//const __STREETS = 'streets-v11';\r\n\r\n// Not in use yet\r\n/*\r\nconst permuteMapStyles = (currentValue) => {\r\n  switch(currentValue) {\r\n    case __SATELLITE:\r\n      return __LIGHTMODE;\r\n    case __LIGHTMODE:\r\n      return __DARKMODE;\r\n    case __DARKMODE:\r\n      return __STREETS;\r\n    case __STREETS:\r\n      return __SATELLITE;\r\n    default:\r\n      console.log(`Sorry, the style '${currentValue}' doesn't exist.`);\r\n  }\r\n}\r\n*/\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      mapStyle: __DARKMODE,\r\n      data: {\r\n        laboratory: {\r\n          fetched: {},\r\n          filtered: {},\r\n        },\r\n        survey: {\r\n          fetched: {},\r\n          filtered: {},\r\n        },\r\n      },\r\n      currentTime: 0,\r\n      filteredRegions: [],\r\n      chartsExpanded: false,\r\n      filtersExpanded: false,\r\n    }\r\n    this.registeredRegions = [];\r\n    this.mapNode = null;\r\n  }\r\n\r\n  // Not in use yet\r\n  /*\r\n  handleReload = () => {\r\n    document.location.reload();\r\n  }\r\n\r\n  handleSwitchTheme = () => {\r\n    const { mapStyle } = this.state;\r\n    this.setState({ mapStyle: permuteMapStyles(mapStyle) });\r\n  }\r\n  */\r\n\r\n  handleSetTime = (value) => {\r\n    const { data } = this.state,\r\n          { laboratory } = data;\r\n    const timestamps = Object.keys(laboratory.filtered);\r\n    this.setState({\r\n      currentTime: Number(value) + Number(timestamps[0]),\r\n    });\r\n  }\r\n\r\n  // Not in use yet\r\n  /*\r\n  handleSetLive = () => {\r\n    const { data } = this.state,\r\n          { laboratory } = data;\r\n    const timestamps = Object.keys(laboratory.filtered);\r\n    // evaluate the closest timestamp to current time\r\n    //const now = Date.now();\r\n    //const D = timestamps.map(timestamp => Math.abs(timestamp - now));\r\n    //const i = D.indexOf(Math.min(...D));\r\n    // or just grab the last recorded timestamp...\r\n    this.setState({\r\n      currentTime: timestamps[timestamps.length - 1],\r\n    });\r\n  }\r\n  */\r\n\r\n  handleToggleCharts = () => {\r\n    this.setState({\r\n      chartsExpanded: !this.state.chartsExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapseCharts = () => {\r\n    this.setState({ chartsExpanded: false });\r\n  }\r\n\r\n  handleToggleFilters = () => {\r\n    this.setState({\r\n      filtersExpanded: !this.state.filtersExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapseFilters = () => {\r\n    this.setState({ filtersExpanded: false });\r\n  }\r\n\r\n  handleFilterCountries = (filteredRegions) => {\r\n    this.setState({ filteredRegions });\r\n\r\n    const { data } = this.state,\r\n          { laboratory, survey } = data;\r\n\r\n    if(!!filteredRegions && filteredRegions.length > 0) {\r\n      // filtered regions come as an object { value: ..., label: ... }\r\n      filteredRegions = filteredRegions.map(r => r.value);\r\n      data.laboratory.filtered = filterTimestampedData(\r\n        ['province', 'country'],\r\n        filteredRegions,\r\n        laboratory.fetched,\r\n      );\r\n      data.survey.filtered = filterDataset(\r\n        ['province', 'country'],\r\n        filteredRegions,\r\n        survey.fetched,\r\n      );\r\n    } else {\r\n      data.laboratory.filtered = data.laboratory.fetched;\r\n      data.survey.filtered = data.survey.fetched;\r\n    }\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  setTime = (unixtime) => {\r\n    this.setState({\r\n      currentTime: unixtime,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Load data into state\r\n    // and set the current time to the latest possible date\r\n    const { laboratory, survey } = this.props;\r\n    const timestamps = Object.keys(laboratory);\r\n    const currentTime = Number(timestamps[timestamps.length - 1]);\r\n\r\n    this.setState({\r\n      data: {\r\n        laboratory: {\r\n          fetched: laboratory,\r\n          filtered: laboratory,\r\n        },\r\n        survey: {\r\n          fetched: survey,\r\n          filtered: survey,\r\n        },\r\n      },\r\n      currentTime,\r\n    });\r\n    // Register all possible countries and regions\r\n    // Eliminate double entries from countries\r\n    const __registeredCountries = [\r\n      ...new Set(laboratory[currentTime].map(datapoint => datapoint.country).sort())\r\n    ].map(\r\n      region => ({ value: region, label: region })\r\n    );\r\n    // Eliminate empty entries from provinces\r\n    const __registeredProvinces = laboratory[currentTime].map(\r\n      datapoint => datapoint.province\r\n    ).filter(\r\n      province => !!province\r\n    ).sort().map(\r\n      region => ({ value: region, label: region })\r\n    );\r\n    // Summarize into class object\r\n    this.registeredRegions = [\r\n      {\r\n        label: \"Countries\",\r\n        options: __registeredCountries,\r\n      },\r\n      {\r\n        label: \"Provinces / States\",\r\n        options: __registeredProvinces,\r\n      },\r\n    ];\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      state,\r\n      mapNode,\r\n      registeredRegions,\r\n      handleFilterCountries,\r\n      handleSetTime,\r\n      handleToggleCharts,\r\n      handleCollapseCharts,\r\n      handleToggleFilters,\r\n      handleCollapseFilters,\r\n    } = this;\r\n    const {\r\n      mapStyle,\r\n      data,\r\n      currentTime,\r\n      filteredRegions,\r\n      chartsExpanded,\r\n      filtersExpanded,\r\n    } = state;\r\n    const { laboratory, survey } = data;\r\n  \r\n    const timestamps = Object.keys(laboratory.filtered);\r\n    const timeBegin = Number(timestamps[0]);\r\n    const timeEnd = Number(timestamps[timestamps.length - 1]);\r\n    \r\n    return(\r\n      <Fragment>\r\n        {!!laboratory.filtered && <DataPanel\r\n          data={laboratory.filtered}\r\n          currentTime={currentTime}\r\n          chartsExpanded={chartsExpanded}\r\n          onToggleFilters={handleToggleFilters}\r\n          onToggleCharts={handleToggleCharts}\r\n        />}\r\n        <div className=\"data-map-container\" ref={e => this.mapNode = e}>\r\n          <DataMap\r\n            pointsSurvey={intfcGeoPointsSurvey(survey.filtered)}\r\n            pointsCondensed={intfcGeoPointsCondensed(laboratory.filtered[currentTime])}\r\n            areasCountries={intfcGeoAreasCountries(laboratory.filtered[currentTime])}\r\n            container={mapNode}\r\n            mapStyle={mapStyle}\r\n            onClick={handleCollapseCharts}\r\n            live={currentTime === timeEnd}\r\n          />\r\n        </div>\r\n        <Modal\r\n          open={filtersExpanded}\r\n          onClose={handleCollapseFilters}\r\n          classNames={{\r\n            modal: 'modal-filters',\r\n            overlay: 'modal-filters-overlay'\r\n          }}\r\n          center\r\n        >\r\n          <h2>Data filters</h2>\r\n          <div className=\"filter-label\">Region</div>\r\n          <Select\r\n            isMulti\r\n            name=\"countries\"\r\n            options={registeredRegions}\r\n            defaultValue={filteredRegions}\r\n            onChange={handleFilterCountries}\r\n          />\r\n          <div className=\"filter-label\">Time</div>\r\n          <DiscreteSlider\r\n            min={0}\r\n            max={timeEnd - timeBegin}\r\n            availableValues={timestamps.map(t => t - timeBegin)}\r\n            startValue={currentTime - timeBegin}\r\n            onChange={handleSetTime}\r\n            formatValue={(v) => dateDisplay(new Date(v + Number(timeBegin)))}\r\n          />\r\n        </Modal>\r\n        {!(currentTime === 0 || currentTime === timeEnd || filtersExpanded) &&\r\n          <div className=\"dashboard-display-time\">\r\n            Current time: {dateDisplay(new Date(currentTime))}\r\n          </div>\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"@reach/router\"\r\nimport './navigation.css';\r\n\r\nexport default class Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isExpanded: false,\r\n    }\r\n  }\r\n\r\n  handleToggle = () => {\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapse = () => {\r\n    this.setState({\r\n      isExpanded: false,\r\n    });\r\n  }\r\n\r\n  /*\r\n  componentWillUnmount() {\r\n    const { props, handleCollapse } = this,\r\n          { rootNode } = props;\r\n    rootNode.removeEventListener('click', handleCollapse);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { props, handleCollapse } = this,\r\n          { rootNode } = props;\r\n    rootNode.addEventListener('click', handleCollapse);\r\n  }\r\n  */\r\n\r\n  render() {\r\n    const { state, handleToggle, handleCollapse } = this,\r\n          { isExpanded } = state,\r\n          clsNav = `navigation ${isExpanded ? 'expanded' : ''}`,\r\n          clsToggle = `navigation-toggle ${isExpanded ? 'expanded' : ''}`;\r\n    return(\r\n      <Fragment>\r\n        <div className={clsToggle} onClick={handleToggle}>\r\n          <MenuIcon />\r\n        </div>\r\n        <nav className={clsNav}>\r\n          <div className=\"navigation__brand\">Corona<span>hub</span></div>\r\n          <NavList onClose={handleCollapse}>\r\n            <NavLink to=\"/\"><HomeIcon /> Home</NavLink>\r\n            <NavLink to=\"/table\"><TableIcon /> Table</NavLink>\r\n            <NavLink to=\"/survey\"><SurveyIcon /> Survey</NavLink>\r\n            <NavLink to=\"/contact\"><ContactIcon /> Contact</NavLink>\r\n            <NavLink to=\"/imprint\"><ImprintIcon /> Imprint</NavLink>\r\n          </NavList>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst __setActive = ({ isCurrent }) => {\r\n  return isCurrent ? { className: \"active\" } : {}\r\n}\r\n\r\nconst NavList = ({ onClose, children }) => {\r\n  return(\r\n    <ul>\r\n      {children.map((c, i) => (\r\n        <Link key={i} to={c.props.to} getProps={__setActive}>\r\n          <li onClick={onClose}>{c.props.children}</li>\r\n        </Link>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst NavLink = ({ children }) => <Fragment>{children}</Fragment>;\r\n\r\nconst MenuIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\" />\r\n  </svg>\r\n);\r\n\r\nconst HomeIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M21 13v10h-6v-6h-6v6h-6v-10h-3l12-12 12 12h-3zm-1-5.907v-5.093h-3v2.093l3 3z\" />\r\n  </svg>\r\n);\r\n\r\nconst TableIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M20 19h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm16-14v22h-24v-22h24zm-2 6h-20v14h20v-14zm-8 8h-4v4h4v-4zm-6-6h-4v4h4v-4z\" />\r\n  </svg>\r\n);\r\n\r\nconst SurveyIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7 16h10v1h-10v-1zm0-1h10v-1h-10v1zm15-13v22h-20v-22h3c1.229 0 2.18-1.084 3-2h8c.82.916 1.771 2 3 2h3zm-11 1c0 .552.448 1 1 1s1-.448 1-1-.448-1-1-1-1 .448-1 1zm9 1h-4l-2 2h-3.898l-2.102-2h-4v18h16v-18zm-13 9h10v-1h-10v1zm0-2h10v-1h-10v1z\" />\r\n  </svg>\r\n);\r\n\r\nconst ContactIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M0 3v18h24v-18h-24zm21.518 2l-9.518 7.713-9.518-7.713h19.036zm-19.518 14v-11.817l10 8.104 10-8.104v11.817h-20z\" />\r\n  </svg>\r\n);\r\n\r\nconst ImprintIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M20 12.875v5.068c0 2.754-5.789 4.057-9 4.057-3.052 0-9-1.392-9-4.057v-6.294l9 4.863 9-3.637zm-8.083-10.875l-12.917 5.75 12 6.5 11-4.417v7.167h2v-8.25l-12.083-6.75zm13.083 20h-4c.578-1 1-2.5 1-4h2c0 1.516.391 2.859 1 4z\" />\r\n  </svg>\r\n);\r\n","export const laboratoryDataMockup = {\r\n  1584820500000: [\r\n    {\r\n      province: 'Auenland',\r\n      country: 'Eriador',\r\n      latlng: [46.8131873, 8.22421],\r\n      confirmed: 10000,\r\n      recovered: 1,\r\n      deaths: 5000,\r\n      active: 4999,\r\n    },\r\n    {\r\n      province: 'Hyarrostar',\r\n      country: 'Númenor',\r\n      latlng: [51.1642292, 10.4541194],\r\n      confirmed: 100000,\r\n      recovered: 1000,\r\n      deaths: 60000,\r\n      active: 39000,\r\n    },\r\n    {\r\n      province: 'Gorgoroth',\r\n      country: 'Mordor',\r\n      latlng: [47.6964719, 13.3457347],\r\n      confirmed: 20,\r\n      recovered: 0,\r\n      deaths: 0,\r\n      active: 20,\r\n    }\r\n  ],\r\n  1584820800000: [\r\n    {\r\n      province: 'Auenland',\r\n      country: 'Eriador',\r\n      latlng: [46.8131873, 8.22421],\r\n      confirmed: 20000,\r\n      recovered: 10,\r\n      deaths: 15000,\r\n      active: 9990,\r\n    },\r\n    {\r\n      province: 'Hyarrostar',\r\n      country: 'Númenor',\r\n      latlng: [51.1642292, 10.4541194],\r\n      confirmed: 100000,\r\n      recovered: 40000,\r\n      deaths: 60000,\r\n      active: 0,\r\n    },\r\n    {\r\n      province: 'Gorgoroth',\r\n      country: 'Mordor',\r\n      latlng: [47.6964719, 13.3457347],\r\n      confirmed: 50,\r\n      recovered: 10,\r\n      deaths: 20,\r\n      active: 20,\r\n    }\r\n  ],\r\n  1584820813832: [\r\n    {\r\n      province: 'Auenland',\r\n      country: 'Eriador',\r\n      latlng: [46.8131873, 8.22421],\r\n      confirmed: 100000,\r\n      recovered: 20,\r\n      deaths: 50000,\r\n      active: 49980,\r\n    },\r\n    {\r\n      province: 'Hyarrostar',\r\n      country: 'Númenor',\r\n      latlng: [51.1642292, 10.4541194],\r\n      confirmed: 160000,\r\n      recovered: 80000,\r\n      deaths: 65000,\r\n      active: 15000,\r\n    },\r\n    {\r\n      province: 'Gorgoroth',\r\n      country: 'Mordor',\r\n      latlng: [47.6964719, 13.3457347],\r\n      confirmed: 200,\r\n      recovered: 40,\r\n      deaths: 80,\r\n      active: 80,\r\n    }\r\n  ]\r\n}\r\n\r\nexport const surveyDataMockup = [\r\n  {\r\n    \"id\": \"5e813d16588ed15b90c9098f\",\r\n    \"infectionPropability\": \"0.0401\",\r\n    \"latlng\": [\r\n      \"47.4901\",\r\n      \"7.5813\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c0a42fccc2458de3\",\r\n    \"infectionPropability\": \"0.8445\",\r\n    \"latlng\": [\r\n      \"47.2853\",\r\n      \"9.8721\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16cfb6d3648e47078c\",\r\n    \"infectionPropability\": \"0.9423\",\r\n    \"latlng\": [\r\n      \"45.3637\",\r\n      \"7.0287\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16bf43c25cc21c1f85\",\r\n    \"infectionPropability\": \"0.456\",\r\n    \"latlng\": [\r\n      \"44.3054\",\r\n      \"7.9841\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d165b3b31c68894cd96\",\r\n    \"infectionPropability\": \"0.3728\",\r\n    \"latlng\": [\r\n      \"44.6069\",\r\n      \"7.8438\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c54a7cc3c30be488\",\r\n    \"infectionPropability\": \"0.9292\",\r\n    \"latlng\": [\r\n      \"46.8478\",\r\n      \"6.2512\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16d3d50ebacbed2dfc\",\r\n    \"infectionPropability\": \"0.4621\",\r\n    \"latlng\": [\r\n      \"47.5729\",\r\n      \"7.6801\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d168961fa3a0b1795fd\",\r\n    \"infectionPropability\": \"0.3776\",\r\n    \"latlng\": [\r\n      \"45.4116\",\r\n      \"8.5106\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d162b0d075f613f2549\",\r\n    \"infectionPropability\": \"0.9922\",\r\n    \"latlng\": [\r\n      \"44.0719\",\r\n      \"7.5792\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16512722b296b6cef9\",\r\n    \"infectionPropability\": \"0.0458\",\r\n    \"latlng\": [\r\n      \"44.3933\",\r\n      \"6.3467\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1619d736ec85baabad\",\r\n    \"infectionPropability\": \"0.8495\",\r\n    \"latlng\": [\r\n      \"44.6817\",\r\n      \"6.8214\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1648919ee9eb62f369\",\r\n    \"infectionPropability\": \"0.9434\",\r\n    \"latlng\": [\r\n      \"45.767\",\r\n      \"8.4278\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1656be5ea204e8eac9\",\r\n    \"infectionPropability\": \"0.2526\",\r\n    \"latlng\": [\r\n      \"45.2926\",\r\n      \"6.2086\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16f5c295cf375850b8\",\r\n    \"infectionPropability\": \"0.9614\",\r\n    \"latlng\": [\r\n      \"46.589\",\r\n      \"6.5793\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16f84ce84c232077c0\",\r\n    \"infectionPropability\": \"0.8203\",\r\n    \"latlng\": [\r\n      \"44.2434\",\r\n      \"7.1189\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d168a70a64b5ca7c24d\",\r\n    \"infectionPropability\": \"0.7293\",\r\n    \"latlng\": [\r\n      \"44.217\",\r\n      \"7.5052\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d169162555ebd7302c8\",\r\n    \"infectionPropability\": \"0.7648\",\r\n    \"latlng\": [\r\n      \"44.81\",\r\n      \"9.7648\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d163650234c01b200ec\",\r\n    \"infectionPropability\": \"0.9855\",\r\n    \"latlng\": [\r\n      \"45.3264\",\r\n      \"6.1604\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d160bca4029f4aeacf4\",\r\n    \"infectionPropability\": \"0.0826\",\r\n    \"latlng\": [\r\n      \"45.7308\",\r\n      \"7.7823\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16f2ea99b5ec893414\",\r\n    \"infectionPropability\": \"0.2097\",\r\n    \"latlng\": [\r\n      \"45.2897\",\r\n      \"8.8763\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1691bf07a48414e919\",\r\n    \"infectionPropability\": \"0.1682\",\r\n    \"latlng\": [\r\n      \"47.3797\",\r\n      \"6.5406\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d162f95620e076fd31c\",\r\n    \"infectionPropability\": \"0.0766\",\r\n    \"latlng\": [\r\n      \"44.5476\",\r\n      \"9.346\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d166bcc718917e0cba2\",\r\n    \"infectionPropability\": \"0.6588\",\r\n    \"latlng\": [\r\n      \"47.0101\",\r\n      \"7.5345\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16601bf8d212a721bb\",\r\n    \"infectionPropability\": \"0.6934\",\r\n    \"latlng\": [\r\n      \"46.7073\",\r\n      \"6.2466\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d161bddcc95cba6d4ae\",\r\n    \"infectionPropability\": \"0.9162\",\r\n    \"latlng\": [\r\n      \"46.2574\",\r\n      \"6.9983\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16300df1360a73a403\",\r\n    \"infectionPropability\": \"0.0371\",\r\n    \"latlng\": [\r\n      \"47.4227\",\r\n      \"9.4073\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16ebeeded8f216113d\",\r\n    \"infectionPropability\": \"0.2315\",\r\n    \"latlng\": [\r\n      \"46.5053\",\r\n      \"8.3678\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c467112a96118c16\",\r\n    \"infectionPropability\": \"0.0091\",\r\n    \"latlng\": [\r\n      \"46.4748\",\r\n      \"7.667\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1616bec0d7e0f2eaf6\",\r\n    \"infectionPropability\": \"0.535\",\r\n    \"latlng\": [\r\n      \"45.9141\",\r\n      \"7.9555\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d165858ccbc27a67341\",\r\n    \"infectionPropability\": \"0.1356\",\r\n    \"latlng\": [\r\n      \"45.1493\",\r\n      \"6.7968\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1688fae5a49d3d7f4e\",\r\n    \"infectionPropability\": \"0.3913\",\r\n    \"latlng\": [\r\n      \"46.1247\",\r\n      \"7.599\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16304b79ca296c2627\",\r\n    \"infectionPropability\": \"0.6754\",\r\n    \"latlng\": [\r\n      \"45.7002\",\r\n      \"8.6701\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16ae5fe1cfbe72e8ba\",\r\n    \"infectionPropability\": \"0.5566\",\r\n    \"latlng\": [\r\n      \"47.1832\",\r\n      \"6.1474\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d162e476e228e9aa960\",\r\n    \"infectionPropability\": \"0.3225\",\r\n    \"latlng\": [\r\n      \"46.1516\",\r\n      \"9.9004\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1694083e1080e8ebda\",\r\n    \"infectionPropability\": \"0.3985\",\r\n    \"latlng\": [\r\n      \"45.5829\",\r\n      \"9.4435\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d168d97c8de8fb9a8ca\",\r\n    \"infectionPropability\": \"0.7374\",\r\n    \"latlng\": [\r\n      \"46.5656\",\r\n      \"8.8668\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d169cb26f09082fedd2\",\r\n    \"infectionPropability\": \"0.9125\",\r\n    \"latlng\": [\r\n      \"47.9909\",\r\n      \"8.1083\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d167f93530d17a2f9c9\",\r\n    \"infectionPropability\": \"0.166\",\r\n    \"latlng\": [\r\n      \"46.1013\",\r\n      \"7.4352\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d161ebca7283b46156c\",\r\n    \"infectionPropability\": \"0.7104\",\r\n    \"latlng\": [\r\n      \"45.3049\",\r\n      \"9.5713\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d169b4360045d426f9a\",\r\n    \"infectionPropability\": \"0.5953\",\r\n    \"latlng\": [\r\n      \"46.3112\",\r\n      \"9.5731\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16e2a980267279f5c3\",\r\n    \"infectionPropability\": \"0.925\",\r\n    \"latlng\": [\r\n      \"44.6937\",\r\n      \"8.5396\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c3c4e0605ba62cea\",\r\n    \"infectionPropability\": \"0.0035\",\r\n    \"latlng\": [\r\n      \"44.4639\",\r\n      \"7.9442\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d162a5b67254effbef0\",\r\n    \"infectionPropability\": \"0.9377\",\r\n    \"latlng\": [\r\n      \"45.1596\",\r\n      \"8.6642\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d167e72d86e01ce6eb9\",\r\n    \"infectionPropability\": \"0.3368\",\r\n    \"latlng\": [\r\n      \"47.603\",\r\n      \"7.7403\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c026b9d0fbc71393\",\r\n    \"infectionPropability\": \"0.8896\",\r\n    \"latlng\": [\r\n      \"44.5952\",\r\n      \"9.4995\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16a295f69c3e3760fa\",\r\n    \"infectionPropability\": \"0.7733\",\r\n    \"latlng\": [\r\n      \"45.6417\",\r\n      \"7.9648\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16bab1e2b42441da2c\",\r\n    \"infectionPropability\": \"0.5312\",\r\n    \"latlng\": [\r\n      \"45.244\",\r\n      \"9.9635\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16cb11dee9bd98bd4f\",\r\n    \"infectionPropability\": \"0.3828\",\r\n    \"latlng\": [\r\n      \"45.9093\",\r\n      \"9.5607\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c88735946b660f65\",\r\n    \"infectionPropability\": \"0.4637\",\r\n    \"latlng\": [\r\n      \"45.2147\",\r\n      \"8.1741\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16de497f51e3a60ee8\",\r\n    \"infectionPropability\": \"0.8825\",\r\n    \"latlng\": [\r\n      \"46.805\",\r\n      \"6.4235\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1698ca028beccad1ee\",\r\n    \"infectionPropability\": \"0.554\",\r\n    \"latlng\": [\r\n      \"45.1445\",\r\n      \"7.7119\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1632d8fca0a20558fa\",\r\n    \"infectionPropability\": \"0.4213\",\r\n    \"latlng\": [\r\n      \"44.8174\",\r\n      \"9.6129\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16516e491365fe5685\",\r\n    \"infectionPropability\": \"0.5514\",\r\n    \"latlng\": [\r\n      \"44.3221\",\r\n      \"9.1454\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d165d1bdec1c940dc02\",\r\n    \"infectionPropability\": \"0.6025\",\r\n    \"latlng\": [\r\n      \"46.2982\",\r\n      \"9.1293\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c635ee2d3494e2de\",\r\n    \"infectionPropability\": \"0.1373\",\r\n    \"latlng\": [\r\n      \"47.8136\",\r\n      \"6.9054\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1602e8e71e1d0ad0ab\",\r\n    \"infectionPropability\": \"0.6025\",\r\n    \"latlng\": [\r\n      \"47.561\",\r\n      \"9.053\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16e8540b2742d90801\",\r\n    \"infectionPropability\": \"0.7248\",\r\n    \"latlng\": [\r\n      \"46.4208\",\r\n      \"6.4264\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d163d7844a68fa9e73b\",\r\n    \"infectionPropability\": \"0.2245\",\r\n    \"latlng\": [\r\n      \"44.9032\",\r\n      \"7.9576\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16422174701fe71fb8\",\r\n    \"infectionPropability\": \"0.8713\",\r\n    \"latlng\": [\r\n      \"47.3489\",\r\n      \"8.4667\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16f185ab85cb0490d1\",\r\n    \"infectionPropability\": \"0.7281\",\r\n    \"latlng\": [\r\n      \"44.0929\",\r\n      \"9.4595\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16a7cb7f4a97f506f5\",\r\n    \"infectionPropability\": \"0.737\",\r\n    \"latlng\": [\r\n      \"47.2827\",\r\n      \"7.2187\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16b7f0865ecd1ed5af\",\r\n    \"infectionPropability\": \"0.0016\",\r\n    \"latlng\": [\r\n      \"46.1668\",\r\n      \"7.5941\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1671661188617dd883\",\r\n    \"infectionPropability\": \"0.8614\",\r\n    \"latlng\": [\r\n      \"47.5822\",\r\n      \"8.2162\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16d66f8b3161809d03\",\r\n    \"infectionPropability\": \"0.0475\",\r\n    \"latlng\": [\r\n      \"46.8916\",\r\n      \"8.6507\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d161b15288eccd3cce3\",\r\n    \"infectionPropability\": \"0.5802\",\r\n    \"latlng\": [\r\n      \"47.7354\",\r\n      \"9.4381\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1610e73b0bedbe2482\",\r\n    \"infectionPropability\": \"0.1127\",\r\n    \"latlng\": [\r\n      \"47.4142\",\r\n      \"9.8337\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16d9c1edec8fc1cdad\",\r\n    \"infectionPropability\": \"0.0855\",\r\n    \"latlng\": [\r\n      \"44.7475\",\r\n      \"6.6174\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d162f133addb84616b1\",\r\n    \"infectionPropability\": \"0.3777\",\r\n    \"latlng\": [\r\n      \"45.0959\",\r\n      \"6.2783\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16f53914073dd8c771\",\r\n    \"infectionPropability\": \"0.5922\",\r\n    \"latlng\": [\r\n      \"47.9193\",\r\n      \"6.049\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1639cca1f53952043a\",\r\n    \"infectionPropability\": \"0.2316\",\r\n    \"latlng\": [\r\n      \"46.8021\",\r\n      \"7.4013\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1646dccc42bbedb70e\",\r\n    \"infectionPropability\": \"0.1398\",\r\n    \"latlng\": [\r\n      \"44.0257\",\r\n      \"8.2493\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16f536959b3db01bb6\",\r\n    \"infectionPropability\": \"0.1667\",\r\n    \"latlng\": [\r\n      \"47.4348\",\r\n      \"6.5124\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d167617abdc0a1d552d\",\r\n    \"infectionPropability\": \"0.472\",\r\n    \"latlng\": [\r\n      \"44.6122\",\r\n      \"8.9984\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16de6febdd183d90e8\",\r\n    \"infectionPropability\": \"0.0545\",\r\n    \"latlng\": [\r\n      \"47.6495\",\r\n      \"8.6759\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d169c3b3782d90d20bf\",\r\n    \"infectionPropability\": \"0.8032\",\r\n    \"latlng\": [\r\n      \"46.5576\",\r\n      \"7.6598\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16a4d4c913cdb3a86e\",\r\n    \"infectionPropability\": \"0.7526\",\r\n    \"latlng\": [\r\n      \"47.5182\",\r\n      \"9.965\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d168dd86fcbbcb8f595\",\r\n    \"infectionPropability\": \"0.3715\",\r\n    \"latlng\": [\r\n      \"47.165\",\r\n      \"6.9434\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1655a22b9fd2be9fca\",\r\n    \"infectionPropability\": \"0.0816\",\r\n    \"latlng\": [\r\n      \"45.1688\",\r\n      \"8.8549\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d166b33f1f2120a229a\",\r\n    \"infectionPropability\": \"0.8109\",\r\n    \"latlng\": [\r\n      \"47.4878\",\r\n      \"8.8682\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16cad0fa986cef1e38\",\r\n    \"infectionPropability\": \"0.2229\",\r\n    \"latlng\": [\r\n      \"47.0463\",\r\n      \"6.1804\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1614e30f286d26f3f5\",\r\n    \"infectionPropability\": \"0.0461\",\r\n    \"latlng\": [\r\n      \"47.0449\",\r\n      \"7.0147\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d169545618282e8869f\",\r\n    \"infectionPropability\": \"0.6779\",\r\n    \"latlng\": [\r\n      \"47.2074\",\r\n      \"7.0614\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16a06dbee2d67569a9\",\r\n    \"infectionPropability\": \"0.2278\",\r\n    \"latlng\": [\r\n      \"47.2813\",\r\n      \"9.3681\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16d995a6b422913df5\",\r\n    \"infectionPropability\": \"0.5711\",\r\n    \"latlng\": [\r\n      \"44.1387\",\r\n      \"8.6383\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1677640dac5e710d97\",\r\n    \"infectionPropability\": \"0.7347\",\r\n    \"latlng\": [\r\n      \"44.0079\",\r\n      \"6.8328\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d160f0ef70fa97b79de\",\r\n    \"infectionPropability\": \"0.5281\",\r\n    \"latlng\": [\r\n      \"46.2816\",\r\n      \"6.8083\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d168fd99bb1b3b3ab64\",\r\n    \"infectionPropability\": \"0.8763\",\r\n    \"latlng\": [\r\n      \"47.1408\",\r\n      \"9.8868\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16e423ada784ae2ae6\",\r\n    \"infectionPropability\": \"0.8406\",\r\n    \"latlng\": [\r\n      \"44.5257\",\r\n      \"9.5815\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16dac6b75827c98734\",\r\n    \"infectionPropability\": \"0.0132\",\r\n    \"latlng\": [\r\n      \"46.0531\",\r\n      \"9.0852\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c6548aab9d0806b2\",\r\n    \"infectionPropability\": \"0.1003\",\r\n    \"latlng\": [\r\n      \"47.8711\",\r\n      \"9.5681\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d166e208b132d7162bc\",\r\n    \"infectionPropability\": \"0.4962\",\r\n    \"latlng\": [\r\n      \"47.5943\",\r\n      \"9.3756\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d162b2f091c30ea1117\",\r\n    \"infectionPropability\": \"0.074\",\r\n    \"latlng\": [\r\n      \"46.5437\",\r\n      \"9.2565\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16640b51bbb0d39399\",\r\n    \"infectionPropability\": \"0.838\",\r\n    \"latlng\": [\r\n      \"47.1051\",\r\n      \"6.9838\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16bd42c9aa4d0554c1\",\r\n    \"infectionPropability\": \"0.4876\",\r\n    \"latlng\": [\r\n      \"47.1673\",\r\n      \"6.4521\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16b371dcc12bd93354\",\r\n    \"infectionPropability\": \"0.7804\",\r\n    \"latlng\": [\r\n      \"44.4957\",\r\n      \"6.2912\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d168385cd38dfc1d824\",\r\n    \"infectionPropability\": \"0.2819\",\r\n    \"latlng\": [\r\n      \"45.3729\",\r\n      \"9.7885\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c3f56bb07e898ca6\",\r\n    \"infectionPropability\": \"0.2997\",\r\n    \"latlng\": [\r\n      \"45.1413\",\r\n      \"7.7613\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16e258f2a77d941eee\",\r\n    \"infectionPropability\": \"0.9699\",\r\n    \"latlng\": [\r\n      \"46.8786\",\r\n      \"9.2822\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d1698c23596aa24f5cd\",\r\n    \"infectionPropability\": \"0.4094\",\r\n    \"latlng\": [\r\n      \"45.0458\",\r\n      \"9.7717\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813d16c25caa2cc83ed570\",\r\n    \"infectionPropability\": \"0.3573\",\r\n    \"latlng\": [\r\n      \"45.1673\",\r\n      \"9.2818\"\r\n    ],\r\n    \"country\": \"Eriador\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd92af6a3c894964065\",\r\n    \"infectionPropability\": \"0.829\",\r\n    \"latlng\": [\r\n      \"52.1826\",\r\n      \"9.726\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd928edc8a48d36724f\",\r\n    \"infectionPropability\": \"0.3946\",\r\n    \"latlng\": [\r\n      \"52.8111\",\r\n      \"9.6219\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd91fe4822a7f0bd4bf\",\r\n    \"infectionPropability\": \"0.4746\",\r\n    \"latlng\": [\r\n      \"52.6034\",\r\n      \"9.7512\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9ce32831544d6b200\",\r\n    \"infectionPropability\": \"0.3194\",\r\n    \"latlng\": [\r\n      \"49.249\",\r\n      \"10.1787\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd97c823d129d4d4fe1\",\r\n    \"infectionPropability\": \"0.315\",\r\n    \"latlng\": [\r\n      \"50.3105\",\r\n      \"10.6021\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9a77e7c2081720562\",\r\n    \"infectionPropability\": \"0.332\",\r\n    \"latlng\": [\r\n      \"52.4787\",\r\n      \"9.8046\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9c2b95c55cf78a57a\",\r\n    \"infectionPropability\": \"0.8372\",\r\n    \"latlng\": [\r\n      \"52.9735\",\r\n      \"9.9828\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9caa502b24d2e7170\",\r\n    \"infectionPropability\": \"0.812\",\r\n    \"latlng\": [\r\n      \"52.4679\",\r\n      \"10.9212\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd98ed04085790262d1\",\r\n    \"infectionPropability\": \"0.6646\",\r\n    \"latlng\": [\r\n      \"50.6468\",\r\n      \"9.6906\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9be5756b6a87ba97f\",\r\n    \"infectionPropability\": \"0.1258\",\r\n    \"latlng\": [\r\n      \"50.3694\",\r\n      \"10.5699\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9d39b0ada9b51dd3e\",\r\n    \"infectionPropability\": \"0.6984\",\r\n    \"latlng\": [\r\n      \"51.3118\",\r\n      \"9.4444\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9fdf29fbb3ed7a97d\",\r\n    \"infectionPropability\": \"0.2884\",\r\n    \"latlng\": [\r\n      \"52.4865\",\r\n      \"9.2274\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9a939ef5db10c3fa3\",\r\n    \"infectionPropability\": \"0.1866\",\r\n    \"latlng\": [\r\n      \"49.6802\",\r\n      \"10.8943\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd95ff47228fd450a4b\",\r\n    \"infectionPropability\": \"0.2723\",\r\n    \"latlng\": [\r\n      \"52.1252\",\r\n      \"9.04\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9715e8b5b79da2b5c\",\r\n    \"infectionPropability\": \"0.8845\",\r\n    \"latlng\": [\r\n      \"50.3496\",\r\n      \"9.3706\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9b15696b125a52813\",\r\n    \"infectionPropability\": \"0.8662\",\r\n    \"latlng\": [\r\n      \"50.6295\",\r\n      \"9.3602\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9a390362dfd57aeff\",\r\n    \"infectionPropability\": \"0.5213\",\r\n    \"latlng\": [\r\n      \"52.8959\",\r\n      \"10.2419\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9bf92cffbc0edbfc4\",\r\n    \"infectionPropability\": \"0.9369\",\r\n    \"latlng\": [\r\n      \"51.1541\",\r\n      \"10.2835\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd98b1097daaa3a5fa5\",\r\n    \"infectionPropability\": \"0.5103\",\r\n    \"latlng\": [\r\n      \"52.5047\",\r\n      \"10.2788\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9d6c3d87cae7e254f\",\r\n    \"infectionPropability\": \"0.706\",\r\n    \"latlng\": [\r\n      \"51.6172\",\r\n      \"9.6858\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd91240cd999a690b32\",\r\n    \"infectionPropability\": \"0.384\",\r\n    \"latlng\": [\r\n      \"49.5594\",\r\n      \"9.0881\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd92599b3e6cb6f6911\",\r\n    \"infectionPropability\": \"0.4706\",\r\n    \"latlng\": [\r\n      \"51.147\",\r\n      \"10.2383\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9732cc4720c6f2e2f\",\r\n    \"infectionPropability\": \"0.4724\",\r\n    \"latlng\": [\r\n      \"50.8634\",\r\n      \"9.7004\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd923c2dd48e5b2e757\",\r\n    \"infectionPropability\": \"0.6512\",\r\n    \"latlng\": [\r\n      \"49.6136\",\r\n      \"10.1746\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd91bffc510e2b091f4\",\r\n    \"infectionPropability\": \"0.84\",\r\n    \"latlng\": [\r\n      \"50.7403\",\r\n      \"9.5323\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd92b1b3ebc64c6eef3\",\r\n    \"infectionPropability\": \"0.5748\",\r\n    \"latlng\": [\r\n      \"49.6027\",\r\n      \"9.4323\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9abe5646f09988a1f\",\r\n    \"infectionPropability\": \"0.7521\",\r\n    \"latlng\": [\r\n      \"50.1988\",\r\n      \"10.757\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd96edc9519b386ca19\",\r\n    \"infectionPropability\": \"0.1995\",\r\n    \"latlng\": [\r\n      \"51.8687\",\r\n      \"9.7403\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd991f9a884b7154fbd\",\r\n    \"infectionPropability\": \"0.2669\",\r\n    \"latlng\": [\r\n      \"50.5372\",\r\n      \"9.7524\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd96a371875364cc5a2\",\r\n    \"infectionPropability\": \"0.0714\",\r\n    \"latlng\": [\r\n      \"51.0513\",\r\n      \"10.3867\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd929aec8243d0c41c9\",\r\n    \"infectionPropability\": \"0.5044\",\r\n    \"latlng\": [\r\n      \"50.3812\",\r\n      \"9.4637\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9bbd25c6dddfe0d46\",\r\n    \"infectionPropability\": \"0.9936\",\r\n    \"latlng\": [\r\n      \"51.7715\",\r\n      \"9.4013\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd991fbc4e96b9854e2\",\r\n    \"infectionPropability\": \"0.9187\",\r\n    \"latlng\": [\r\n      \"51.3023\",\r\n      \"9.7286\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd99fcae8e18c68d4b6\",\r\n    \"infectionPropability\": \"0.4878\",\r\n    \"latlng\": [\r\n      \"50.3699\",\r\n      \"10.6998\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9e2253fcd16ebdd4d\",\r\n    \"infectionPropability\": \"0.4567\",\r\n    \"latlng\": [\r\n      \"51.98\",\r\n      \"10.5217\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd91f8f73ae017587c8\",\r\n    \"infectionPropability\": \"0.2135\",\r\n    \"latlng\": [\r\n      \"51.0917\",\r\n      \"10.4685\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd92579bea431e96470\",\r\n    \"infectionPropability\": \"0.3837\",\r\n    \"latlng\": [\r\n      \"49.4232\",\r\n      \"9.8845\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9e2d4a8a973f89699\",\r\n    \"infectionPropability\": \"0.5244\",\r\n    \"latlng\": [\r\n      \"52.6029\",\r\n      \"10.0286\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9f54083a9704d4a35\",\r\n    \"infectionPropability\": \"0.8371\",\r\n    \"latlng\": [\r\n      \"51.6477\",\r\n      \"9.0967\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd92f2deb7dbe5fe88b\",\r\n    \"infectionPropability\": \"0.7038\",\r\n    \"latlng\": [\r\n      \"52.9051\",\r\n      \"10.0176\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd95dd364fd7f1f873f\",\r\n    \"infectionPropability\": \"0.4966\",\r\n    \"latlng\": [\r\n      \"51.0464\",\r\n      \"9.7731\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd979909aa80c524d0e\",\r\n    \"infectionPropability\": \"0.7138\",\r\n    \"latlng\": [\r\n      \"52.347\",\r\n      \"10.2701\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9768070314022da19\",\r\n    \"infectionPropability\": \"0.7274\",\r\n    \"latlng\": [\r\n      \"50.2828\",\r\n      \"9.7322\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd90bf5734446f18c30\",\r\n    \"infectionPropability\": \"0.8867\",\r\n    \"latlng\": [\r\n      \"49.255\",\r\n      \"10.6623\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9dfbd62434dacb083\",\r\n    \"infectionPropability\": \"0.64\",\r\n    \"latlng\": [\r\n      \"51.9053\",\r\n      \"10.1039\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9caf85bd438d035bd\",\r\n    \"infectionPropability\": \"0.2517\",\r\n    \"latlng\": [\r\n      \"51.1126\",\r\n      \"9.4093\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd990bf6b233ab430fd\",\r\n    \"infectionPropability\": \"0.7276\",\r\n    \"latlng\": [\r\n      \"50.9335\",\r\n      \"10.3906\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd96fc849eefa2d2e52\",\r\n    \"infectionPropability\": \"0.0014\",\r\n    \"latlng\": [\r\n      \"50.898\",\r\n      \"10.5242\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd970d967c6b3994d06\",\r\n    \"infectionPropability\": \"0.6535\",\r\n    \"latlng\": [\r\n      \"52.8963\",\r\n      \"10.1647\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9a6a6a055d649ffac\",\r\n    \"infectionPropability\": \"0.0756\",\r\n    \"latlng\": [\r\n      \"49.832\",\r\n      \"10.0352\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9a404160a46540de3\",\r\n    \"infectionPropability\": \"0.8296\",\r\n    \"latlng\": [\r\n      \"51.2507\",\r\n      \"9.1833\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9fbad81a38cfd0df9\",\r\n    \"infectionPropability\": \"0.895\",\r\n    \"latlng\": [\r\n      \"49.3785\",\r\n      \"9.7644\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd947e4912b774c1f27\",\r\n    \"infectionPropability\": \"0.1095\",\r\n    \"latlng\": [\r\n      \"51.2509\",\r\n      \"10.038\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd92a08da1116f9fcac\",\r\n    \"infectionPropability\": \"0.3697\",\r\n    \"latlng\": [\r\n      \"49.4691\",\r\n      \"9.2928\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9ffb21b0b620c2761\",\r\n    \"infectionPropability\": \"0.1227\",\r\n    \"latlng\": [\r\n      \"50.9355\",\r\n      \"9.2802\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9f33685744ecfd127\",\r\n    \"infectionPropability\": \"0.7106\",\r\n    \"latlng\": [\r\n      \"52.6618\",\r\n      \"10.152\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd901599d8865c9e14a\",\r\n    \"infectionPropability\": \"0.6865\",\r\n    \"latlng\": [\r\n      \"51.4507\",\r\n      \"9.4741\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9b95ebb3f5baceba8\",\r\n    \"infectionPropability\": \"0.2823\",\r\n    \"latlng\": [\r\n      \"50.3607\",\r\n      \"10.5619\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd93feac2e3de8c5648\",\r\n    \"infectionPropability\": \"0.9771\",\r\n    \"latlng\": [\r\n      \"51.1251\",\r\n      \"10.6722\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd935af3e451c35ef74\",\r\n    \"infectionPropability\": \"0.5433\",\r\n    \"latlng\": [\r\n      \"50.2733\",\r\n      \"9.576\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd97385856f80d868b7\",\r\n    \"infectionPropability\": \"0.2951\",\r\n    \"latlng\": [\r\n      \"52.0397\",\r\n      \"10.9156\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9ca13f2dbc85b99e1\",\r\n    \"infectionPropability\": \"0.968\",\r\n    \"latlng\": [\r\n      \"50.1063\",\r\n      \"9.8462\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9c5b8f6bfa55aeb50\",\r\n    \"infectionPropability\": \"0.4862\",\r\n    \"latlng\": [\r\n      \"49.8553\",\r\n      \"9.3894\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd98b95bca9ff751195\",\r\n    \"infectionPropability\": \"0.6636\",\r\n    \"latlng\": [\r\n      \"49.9289\",\r\n      \"9.1298\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd997dc10bcfde5c06d\",\r\n    \"infectionPropability\": \"0.0585\",\r\n    \"latlng\": [\r\n      \"50.08\",\r\n      \"9.5685\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9f42a048bf6b7c8b4\",\r\n    \"infectionPropability\": \"0.1035\",\r\n    \"latlng\": [\r\n      \"50.6809\",\r\n      \"10.2627\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9506529a49b3e923b\",\r\n    \"infectionPropability\": \"0.419\",\r\n    \"latlng\": [\r\n      \"50.2877\",\r\n      \"10.8129\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd992cb92e1366da520\",\r\n    \"infectionPropability\": \"0.4657\",\r\n    \"latlng\": [\r\n      \"51.7637\",\r\n      \"10.74\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd903e54af1c8d08093\",\r\n    \"infectionPropability\": \"0.6747\",\r\n    \"latlng\": [\r\n      \"52.6863\",\r\n      \"9.0834\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9a3a0dc6364932329\",\r\n    \"infectionPropability\": \"0.7469\",\r\n    \"latlng\": [\r\n      \"49.3569\",\r\n      \"9.6892\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd91da2a591786f969f\",\r\n    \"infectionPropability\": \"0.1708\",\r\n    \"latlng\": [\r\n      \"49.2442\",\r\n      \"10.3134\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9571bedbc657b3fbd\",\r\n    \"infectionPropability\": \"0.6994\",\r\n    \"latlng\": [\r\n      \"51.3263\",\r\n      \"9.775\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd995df0aecf9b3b3a8\",\r\n    \"infectionPropability\": \"0.6893\",\r\n    \"latlng\": [\r\n      \"51.1342\",\r\n      \"9.1597\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9113b32dad95db6ca\",\r\n    \"infectionPropability\": \"0.2452\",\r\n    \"latlng\": [\r\n      \"51.5903\",\r\n      \"9.0141\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd949b5b70687604f2a\",\r\n    \"infectionPropability\": \"0.4168\",\r\n    \"latlng\": [\r\n      \"50.1563\",\r\n      \"10.6615\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9366dae51e717bb1d\",\r\n    \"infectionPropability\": \"0.892\",\r\n    \"latlng\": [\r\n      \"50.1422\",\r\n      \"10.7092\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd98409354168943ffb\",\r\n    \"infectionPropability\": \"0.9449\",\r\n    \"latlng\": [\r\n      \"51.4165\",\r\n      \"9.7447\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd95c55419ddb5eba57\",\r\n    \"infectionPropability\": \"0.5345\",\r\n    \"latlng\": [\r\n      \"50.3851\",\r\n      \"9.1002\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9cd4411a65363ab19\",\r\n    \"infectionPropability\": \"0.7434\",\r\n    \"latlng\": [\r\n      \"51.7739\",\r\n      \"10.2824\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd94a97a73b770b6802\",\r\n    \"infectionPropability\": \"0.6438\",\r\n    \"latlng\": [\r\n      \"50.2152\",\r\n      \"10.1981\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd94f2c571dcbd79117\",\r\n    \"infectionPropability\": \"0.6006\",\r\n    \"latlng\": [\r\n      \"52.1796\",\r\n      \"9.3682\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9ed94f2308a7838c1\",\r\n    \"infectionPropability\": \"0.6292\",\r\n    \"latlng\": [\r\n      \"49.3237\",\r\n      \"10.135\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd91817e190667e78ff\",\r\n    \"infectionPropability\": \"0.9218\",\r\n    \"latlng\": [\r\n      \"50.6271\",\r\n      \"9.273\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9e56899d02a7c445b\",\r\n    \"infectionPropability\": \"0.7591\",\r\n    \"latlng\": [\r\n      \"51.9028\",\r\n      \"10.8398\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd97eec3da16398598a\",\r\n    \"infectionPropability\": \"0.2466\",\r\n    \"latlng\": [\r\n      \"49.4711\",\r\n      \"9.1299\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9dbbc91d54fa7f6ac\",\r\n    \"infectionPropability\": \"0.2984\",\r\n    \"latlng\": [\r\n      \"50.9959\",\r\n      \"9.5597\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd96d0e1f3ffecc97c8\",\r\n    \"infectionPropability\": \"0.0683\",\r\n    \"latlng\": [\r\n      \"49.1675\",\r\n      \"9.7982\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9a9b52a7b8dfe9643\",\r\n    \"infectionPropability\": \"0.1852\",\r\n    \"latlng\": [\r\n      \"49.2251\",\r\n      \"9.7729\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd95ed33c2f0688097c\",\r\n    \"infectionPropability\": \"0.0693\",\r\n    \"latlng\": [\r\n      \"50.1954\",\r\n      \"10.6552\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9a1269c02bdf64547\",\r\n    \"infectionPropability\": \"0.7225\",\r\n    \"latlng\": [\r\n      \"52.7741\",\r\n      \"9.4504\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9c8773e8632fb177e\",\r\n    \"infectionPropability\": \"0.9251\",\r\n    \"latlng\": [\r\n      \"49.3707\",\r\n      \"10.0948\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9f23a07f5c704421e\",\r\n    \"infectionPropability\": \"0.2122\",\r\n    \"latlng\": [\r\n      \"49.8812\",\r\n      \"10.8206\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd964aa3cf4fe2e6a62\",\r\n    \"infectionPropability\": \"0.2845\",\r\n    \"latlng\": [\r\n      \"50.9562\",\r\n      \"10.2956\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9d9dbb5f1834b3a0c\",\r\n    \"infectionPropability\": \"0.6781\",\r\n    \"latlng\": [\r\n      \"49.0939\",\r\n      \"9.8768\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9cc3bf5627c7edfe5\",\r\n    \"infectionPropability\": \"0.0256\",\r\n    \"latlng\": [\r\n      \"49.4335\",\r\n      \"9.1372\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd961331747877f49ba\",\r\n    \"infectionPropability\": \"0.4728\",\r\n    \"latlng\": [\r\n      \"52.5513\",\r\n      \"9.8977\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd97e9f05247e50a9c0\",\r\n    \"infectionPropability\": \"0.0766\",\r\n    \"latlng\": [\r\n      \"50.3724\",\r\n      \"10.1626\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd983e8e67e08b1636f\",\r\n    \"infectionPropability\": \"0.8403\",\r\n    \"latlng\": [\r\n      \"49.8745\",\r\n      \"10.9941\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd99f68d6f941bb3fc6\",\r\n    \"infectionPropability\": \"0.4862\",\r\n    \"latlng\": [\r\n      \"49.3082\",\r\n      \"9.177\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e813fd9bc41ea4b95a4b771\",\r\n    \"infectionPropability\": \"0.2954\",\r\n    \"latlng\": [\r\n      \"52.3954\",\r\n      \"9.493\"\r\n    ],\r\n    \"country\": \"Númenor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082f191c511c13789ee\",\r\n    \"infectionPropability\": \"0.2995\",\r\n    \"latlng\": [\r\n      \"46.4331\",\r\n      \"14.99\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408254b18401dd30e55f\",\r\n    \"infectionPropability\": \"0.7059\",\r\n    \"latlng\": [\r\n      \"48.4969\",\r\n      \"12.2952\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140825bc230d6829fd456\",\r\n    \"infectionPropability\": \"0.5157\",\r\n    \"latlng\": [\r\n      \"46.4948\",\r\n      \"12.6171\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140824950d81aebc7bdcc\",\r\n    \"infectionPropability\": \"0.8636\",\r\n    \"latlng\": [\r\n      \"47.877\",\r\n      \"14.8308\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408273d77efa32eeb6eb\",\r\n    \"infectionPropability\": \"0.9311\",\r\n    \"latlng\": [\r\n      \"47.4938\",\r\n      \"11.7693\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140820c73013ff287a1e6\",\r\n    \"infectionPropability\": \"0.6335\",\r\n    \"latlng\": [\r\n      \"48.0754\",\r\n      \"11.5666\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140826d803882244c7155\",\r\n    \"infectionPropability\": \"0.808\",\r\n    \"latlng\": [\r\n      \"47.9036\",\r\n      \"13.8239\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082a3c9070001d8147a\",\r\n    \"infectionPropability\": \"0.6703\",\r\n    \"latlng\": [\r\n      \"46.6592\",\r\n      \"13.8724\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140822bd8f34335f6dc5f\",\r\n    \"infectionPropability\": \"0.0977\",\r\n    \"latlng\": [\r\n      \"46.4082\",\r\n      \"14.0151\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408251a79fd2faefa8c1\",\r\n    \"infectionPropability\": \"0.8655\",\r\n    \"latlng\": [\r\n      \"47.7988\",\r\n      \"14.339\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082074d367c9c524943\",\r\n    \"infectionPropability\": \"0.8778\",\r\n    \"latlng\": [\r\n      \"48.8663\",\r\n      \"14.1511\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140822300fdb5b31bd9e4\",\r\n    \"infectionPropability\": \"0.5963\",\r\n    \"latlng\": [\r\n      \"46.7204\",\r\n      \"14.0303\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140821689da73ec6d3ba3\",\r\n    \"infectionPropability\": \"0.0138\",\r\n    \"latlng\": [\r\n      \"46.1051\",\r\n      \"11.3774\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082f5e237dc831616b1\",\r\n    \"infectionPropability\": \"0.9996\",\r\n    \"latlng\": [\r\n      \"47.6091\",\r\n      \"11.2566\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140828251d77e6ab92a13\",\r\n    \"infectionPropability\": \"0.6163\",\r\n    \"latlng\": [\r\n      \"46.8777\",\r\n      \"12.5196\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408252b188a9873cc64a\",\r\n    \"infectionPropability\": \"0.8066\",\r\n    \"latlng\": [\r\n      \"48.4626\",\r\n      \"13.0547\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082842af40996ff11df\",\r\n    \"infectionPropability\": \"0.2\",\r\n    \"latlng\": [\r\n      \"47.5096\",\r\n      \"14.882\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140820c7e53605ca2a38b\",\r\n    \"infectionPropability\": \"0.7217\",\r\n    \"latlng\": [\r\n      \"47.2711\",\r\n      \"13.0633\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140822ba06d0afe78b147\",\r\n    \"infectionPropability\": \"0.2802\",\r\n    \"latlng\": [\r\n      \"48.8833\",\r\n      \"13.3719\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140822f042d69fee2e15a\",\r\n    \"infectionPropability\": \"0.6341\",\r\n    \"latlng\": [\r\n      \"48.729\",\r\n      \"11.3148\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082c4df034b7f8bd75e\",\r\n    \"infectionPropability\": \"0.3972\",\r\n    \"latlng\": [\r\n      \"47.6327\",\r\n      \"14.5706\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408263359e402d198186\",\r\n    \"infectionPropability\": \"0.7547\",\r\n    \"latlng\": [\r\n      \"46.4504\",\r\n      \"14.7628\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082f040aea11a01c508\",\r\n    \"infectionPropability\": \"0.7544\",\r\n    \"latlng\": [\r\n      \"48.0328\",\r\n      \"14.1222\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408287d6a8919f33180e\",\r\n    \"infectionPropability\": \"0.818\",\r\n    \"latlng\": [\r\n      \"47.4811\",\r\n      \"14.0947\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082a01669a9a184323b\",\r\n    \"infectionPropability\": \"0.0671\",\r\n    \"latlng\": [\r\n      \"46.9012\",\r\n      \"14.3347\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140820a8eca00c6584904\",\r\n    \"infectionPropability\": \"0.4253\",\r\n    \"latlng\": [\r\n      \"48.9181\",\r\n      \"12.893\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408201327e38515fc9fd\",\r\n    \"infectionPropability\": \"0.7818\",\r\n    \"latlng\": [\r\n      \"48.2913\",\r\n      \"14.6698\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082eba6929b57d7600c\",\r\n    \"infectionPropability\": \"0.9445\",\r\n    \"latlng\": [\r\n      \"47.5423\",\r\n      \"11.9983\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140827d3b7dda52f8b306\",\r\n    \"infectionPropability\": \"0.5528\",\r\n    \"latlng\": [\r\n      \"46.0675\",\r\n      \"12.4774\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140822d1f28b015a4aea1\",\r\n    \"infectionPropability\": \"0.4776\",\r\n    \"latlng\": [\r\n      \"48.052\",\r\n      \"14.625\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082d2022ba6225ce863\",\r\n    \"infectionPropability\": \"0.1234\",\r\n    \"latlng\": [\r\n      \"46.2314\",\r\n      \"14.5441\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140821f976738d260dea8\",\r\n    \"infectionPropability\": \"0.6343\",\r\n    \"latlng\": [\r\n      \"47.507\",\r\n      \"11.2614\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140823a7db4a3d51d3239\",\r\n    \"infectionPropability\": \"0.7196\",\r\n    \"latlng\": [\r\n      \"46.6803\",\r\n      \"12.2853\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140824de6ed1d39ce7db5\",\r\n    \"infectionPropability\": \"0.6697\",\r\n    \"latlng\": [\r\n      \"47.7731\",\r\n      \"12.849\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082a56a27d4cdc36cea\",\r\n    \"infectionPropability\": \"0.9709\",\r\n    \"latlng\": [\r\n      \"48.3607\",\r\n      \"11.0827\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082a0cf0c1f36c0f81c\",\r\n    \"infectionPropability\": \"0.2934\",\r\n    \"latlng\": [\r\n      \"46.3171\",\r\n      \"11.1992\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140829cbc0a3a60816e48\",\r\n    \"infectionPropability\": \"0.5911\",\r\n    \"latlng\": [\r\n      \"46.2286\",\r\n      \"14.6068\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082a00d884baeaa8309\",\r\n    \"infectionPropability\": \"0.6236\",\r\n    \"latlng\": [\r\n      \"48.0205\",\r\n      \"11.8989\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408244713ede0df37fe0\",\r\n    \"infectionPropability\": \"0.2844\",\r\n    \"latlng\": [\r\n      \"46.644\",\r\n      \"14.8389\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140826387bc58516d4bb7\",\r\n    \"infectionPropability\": \"0.2426\",\r\n    \"latlng\": [\r\n      \"48.2695\",\r\n      \"14.89\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082ccc6b099b1f7f76e\",\r\n    \"infectionPropability\": \"0.2553\",\r\n    \"latlng\": [\r\n      \"48.1687\",\r\n      \"14.1231\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140827bfe149cb22df611\",\r\n    \"infectionPropability\": \"0.2025\",\r\n    \"latlng\": [\r\n      \"46.7694\",\r\n      \"13.7325\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140824e56fc9b4b423e95\",\r\n    \"infectionPropability\": \"0.1125\",\r\n    \"latlng\": [\r\n      \"46.9564\",\r\n      \"13.9259\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140823ffb2119cb56fab6\",\r\n    \"infectionPropability\": \"0.1416\",\r\n    \"latlng\": [\r\n      \"48.8891\",\r\n      \"11.5176\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408206ea2ff002f4dd60\",\r\n    \"infectionPropability\": \"0.9825\",\r\n    \"latlng\": [\r\n      \"46.5474\",\r\n      \"11.5204\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082aaed86a9a642292e\",\r\n    \"infectionPropability\": \"0.039\",\r\n    \"latlng\": [\r\n      \"46.9808\",\r\n      \"14.9863\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140824073255e0afe326a\",\r\n    \"infectionPropability\": \"0.0296\",\r\n    \"latlng\": [\r\n      \"47.016\",\r\n      \"11.3756\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140821ab81a7d05a7f4f8\",\r\n    \"infectionPropability\": \"0.5326\",\r\n    \"latlng\": [\r\n      \"46.8115\",\r\n      \"14.2188\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082f485c5fcf4e5be10\",\r\n    \"infectionPropability\": \"0.0575\",\r\n    \"latlng\": [\r\n      \"46.2684\",\r\n      \"14.9156\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082c691371621dfcddc\",\r\n    \"infectionPropability\": \"0.8409\",\r\n    \"latlng\": [\r\n      \"47.8315\",\r\n      \"12.2977\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082af5c14e937442a71\",\r\n    \"infectionPropability\": \"0.1823\",\r\n    \"latlng\": [\r\n      \"48.3709\",\r\n      \"11.2028\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140821d11364605c3211e\",\r\n    \"infectionPropability\": \"0.9582\",\r\n    \"latlng\": [\r\n      \"48.2031\",\r\n      \"13.0292\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140821f09aa145848f5e2\",\r\n    \"infectionPropability\": \"0.7476\",\r\n    \"latlng\": [\r\n      \"46.6662\",\r\n      \"12.7603\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082adbe6ae43e409bca\",\r\n    \"infectionPropability\": \"0.3588\",\r\n    \"latlng\": [\r\n      \"48.6412\",\r\n      \"13.037\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140825c724d48f30960e9\",\r\n    \"infectionPropability\": \"0.8859\",\r\n    \"latlng\": [\r\n      \"48.1037\",\r\n      \"13.5865\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082d6851d8db0b46895\",\r\n    \"infectionPropability\": \"0.8517\",\r\n    \"latlng\": [\r\n      \"46.702\",\r\n      \"12.0825\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140820ae53a7308e646da\",\r\n    \"infectionPropability\": \"0.0414\",\r\n    \"latlng\": [\r\n      \"47.5664\",\r\n      \"12.7244\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082f8d2142f67f15a4a\",\r\n    \"infectionPropability\": \"0.2156\",\r\n    \"latlng\": [\r\n      \"46.1849\",\r\n      \"11.8789\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408220d8f9af5f860567\",\r\n    \"infectionPropability\": \"0.3062\",\r\n    \"latlng\": [\r\n      \"46.8853\",\r\n      \"14.8452\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082118754fadb2e5da0\",\r\n    \"infectionPropability\": \"0.4256\",\r\n    \"latlng\": [\r\n      \"47.1784\",\r\n      \"14.8805\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140821f7bdcd6e19e22e1\",\r\n    \"infectionPropability\": \"0.8115\",\r\n    \"latlng\": [\r\n      \"46.2154\",\r\n      \"13.0766\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082c52478a4db10fcd8\",\r\n    \"infectionPropability\": \"0.4535\",\r\n    \"latlng\": [\r\n      \"46.4232\",\r\n      \"13.7542\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082637742e00dd549ae\",\r\n    \"infectionPropability\": \"0.3283\",\r\n    \"latlng\": [\r\n      \"48.1076\",\r\n      \"14.3418\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140823123da9b376a53db\",\r\n    \"infectionPropability\": \"0.663\",\r\n    \"latlng\": [\r\n      \"47.7924\",\r\n      \"13.9882\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082fd4b0c80f763a163\",\r\n    \"infectionPropability\": \"0.2385\",\r\n    \"latlng\": [\r\n      \"46.5684\",\r\n      \"13.2045\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140824fb3d5da19f219ed\",\r\n    \"infectionPropability\": \"0.7205\",\r\n    \"latlng\": [\r\n      \"48.5202\",\r\n      \"11.1213\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140825f9f85acaa85eec4\",\r\n    \"infectionPropability\": \"0.5739\",\r\n    \"latlng\": [\r\n      \"47.5368\",\r\n      \"13.9864\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140827f92b4d0d8362621\",\r\n    \"infectionPropability\": \"0.0507\",\r\n    \"latlng\": [\r\n      \"47.7537\",\r\n      \"12.6652\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140829007be13faf96f27\",\r\n    \"infectionPropability\": \"0.6217\",\r\n    \"latlng\": [\r\n      \"48.5645\",\r\n      \"11.5606\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082bc0f61dfbfae8b3a\",\r\n    \"infectionPropability\": \"0.2178\",\r\n    \"latlng\": [\r\n      \"48.1426\",\r\n      \"11.2368\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082933ca9086ae9f249\",\r\n    \"infectionPropability\": \"0.7016\",\r\n    \"latlng\": [\r\n      \"48.8206\",\r\n      \"14.7659\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408219d9adc0b134a605\",\r\n    \"infectionPropability\": \"0.7007\",\r\n    \"latlng\": [\r\n      \"46.316\",\r\n      \"14.9732\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082edf923f3c776a2d2\",\r\n    \"infectionPropability\": \"0.7101\",\r\n    \"latlng\": [\r\n      \"47.8492\",\r\n      \"11.8568\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082624d82801109c473\",\r\n    \"infectionPropability\": \"0.1057\",\r\n    \"latlng\": [\r\n      \"46.2972\",\r\n      \"11.201\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140826fb0fddca1fd9592\",\r\n    \"infectionPropability\": \"0.6369\",\r\n    \"latlng\": [\r\n      \"47.8145\",\r\n      \"14.0709\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408221bff7f2b823998d\",\r\n    \"infectionPropability\": \"0.3913\",\r\n    \"latlng\": [\r\n      \"46.848\",\r\n      \"14.5931\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082a3d2c28569cd34fb\",\r\n    \"infectionPropability\": \"0.9466\",\r\n    \"latlng\": [\r\n      \"48.8357\",\r\n      \"12.9131\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140829e3ec874450beecb\",\r\n    \"infectionPropability\": \"0.8986\",\r\n    \"latlng\": [\r\n      \"47.5868\",\r\n      \"11.5418\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082822d702d07237e2b\",\r\n    \"infectionPropability\": \"0.8721\",\r\n    \"latlng\": [\r\n      \"46.3838\",\r\n      \"11.6024\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082ab22cd5cea48ef9c\",\r\n    \"infectionPropability\": \"0.1134\",\r\n    \"latlng\": [\r\n      \"46.3127\",\r\n      \"11.4002\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408202f877b702fa2012\",\r\n    \"infectionPropability\": \"0.3635\",\r\n    \"latlng\": [\r\n      \"46.4246\",\r\n      \"14.5838\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082f761481dbb8ef732\",\r\n    \"infectionPropability\": \"0.9911\",\r\n    \"latlng\": [\r\n      \"48.796\",\r\n      \"13.7707\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082286c50796d45130f\",\r\n    \"infectionPropability\": \"0.5805\",\r\n    \"latlng\": [\r\n      \"47.0962\",\r\n      \"11.7155\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082752173fa6dde3d15\",\r\n    \"infectionPropability\": \"0.7166\",\r\n    \"latlng\": [\r\n      \"48.0286\",\r\n      \"12.1453\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408210ef0d62ba2981b2\",\r\n    \"infectionPropability\": \"0.5059\",\r\n    \"latlng\": [\r\n      \"47.6332\",\r\n      \"14.5777\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082fd0386bce628e632\",\r\n    \"infectionPropability\": \"0.9547\",\r\n    \"latlng\": [\r\n      \"46.78\",\r\n      \"14.7701\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140827095d579f2078acf\",\r\n    \"infectionPropability\": \"0.2664\",\r\n    \"latlng\": [\r\n      \"47.7208\",\r\n      \"11.8275\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e81408270cbd24d2b3f8696\",\r\n    \"infectionPropability\": \"0.882\",\r\n    \"latlng\": [\r\n      \"46.8726\",\r\n      \"11.4799\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082d8130c128dd1228a\",\r\n    \"infectionPropability\": \"0.3665\",\r\n    \"latlng\": [\r\n      \"47.6972\",\r\n      \"14.4673\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082ccc7a89e84251993\",\r\n    \"infectionPropability\": \"0.9087\",\r\n    \"latlng\": [\r\n      \"47.9238\",\r\n      \"14.0578\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140822478c82bd1ca7b81\",\r\n    \"infectionPropability\": \"0.6483\",\r\n    \"latlng\": [\r\n      \"48.68\",\r\n      \"13.0084\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140820feef7898b59b447\",\r\n    \"infectionPropability\": \"0.4899\",\r\n    \"latlng\": [\r\n      \"46.9\",\r\n      \"12.0638\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082a67b6be054fd109f\",\r\n    \"infectionPropability\": \"0.3303\",\r\n    \"latlng\": [\r\n      \"46.5528\",\r\n      \"12.1423\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082231635b09e3efddb\",\r\n    \"infectionPropability\": \"0.0954\",\r\n    \"latlng\": [\r\n      \"46.2943\",\r\n      \"11.0139\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082ea270dffedb3222a\",\r\n    \"infectionPropability\": \"0.3261\",\r\n    \"latlng\": [\r\n      \"47.9851\",\r\n      \"13.6679\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082efdf2c0b80f87939\",\r\n    \"infectionPropability\": \"0.0713\",\r\n    \"latlng\": [\r\n      \"47.8083\",\r\n      \"13.6886\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082d964f3c3ffadfd58\",\r\n    \"infectionPropability\": \"0.2567\",\r\n    \"latlng\": [\r\n      \"48.4136\",\r\n      \"13.8551\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e814082cc6afd1f70679af0\",\r\n    \"infectionPropability\": \"0.7197\",\r\n    \"latlng\": [\r\n      \"46.909\",\r\n      \"13.0332\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140821ce25fa79ff19d91\",\r\n    \"infectionPropability\": \"0.1268\",\r\n    \"latlng\": [\r\n      \"47.315\",\r\n      \"13.68\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  },\r\n  {\r\n    \"id\": \"5e8140822277382ef74b230d\",\r\n    \"infectionPropability\": \"0.0986\",\r\n    \"latlng\": [\r\n      \"47.3686\",\r\n      \"14.9483\"\r\n    ],\r\n    \"country\": \"Mordor\"\r\n  }\r\n];\r\n","import React, { Suspense, lazy, Component } from 'react';\nimport { Router } from \"@reach/router\";\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport Dashboard from './Dashboard';\nimport Navigation from './components/navigation/navigation';\nimport Loader from './components/loader/loader';\n\nimport { laboratoryDataMockup, surveyDataMockup } from './data-mockup';\n\nconst __PROXY = 'https://cors-anywhere.herokuapp.com/';\n\n// TODO: refactor the two following function using a HOF\nconst getLaboratoryData = async () => {\n  // TODO: is there a better solution for the proxy / CORS situation?\n  const res = await fetch(\n    `${__PROXY}http://nodejs-express-app-yadii.eu-gb.mybluemix.net/getOfficialData`\n  );\n  let data;\n  try {\n    data = await res.json();\n  } catch(e) {\n    console.log(e);\n    data = laboratoryDataMockup;\n  }\n  return data;\n}\n\nconst getSurveyData = async () => {\n  const res = await fetch(\n    `${__PROXY}http://nodejs-express-app-yadii.eu-gb.mybluemix.net/getSurveyData`\n  );\n  let data;\n  try {\n    data = await res.json();\n  } catch(e) {\n    console.log(e);\n    data = surveyDataMockup;\n  }\n  return data;\n}\n\nconst __MIN__LOADINGTIME = 2000;\nconst genLazyRoute = async (routeModule, timeMin = __MIN__LOADINGTIME) => {\n  return Promise.all([\n    routeModule,\n    new Promise(resolve => setTimeout(resolve, timeMin))\n  ]).then(([moduleExports]) => moduleExports);\n}\n\n//const Home = lazy(() => genLazyRoute(import('./components/home/home')));\nconst DataTable = lazy(() => genLazyRoute(import('./components/data-table/data-table')));\nconst Survey = lazy(() => genLazyRoute(import('./components/survey/survery')));\n//const Contact = lazy(() => genLazyRoute(import('./components/contact/contact')));\n//const Imprint = lazy(() => genLazyRoute(import('./components/imprint/imprint')));\n\nconst DataLoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker({\n    delay: __MIN__LOADINGTIME,\n  });\n  return promiseInProgress && <Loader />;\n}\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        laboratory: {},\n        survey: {},\n      },\n    }\n  }\n\n  async componentDidMount() {\n    const laboratory = await trackPromise(getLaboratoryData());\n    const survey = await trackPromise(getSurveyData());\n    this.setState({\n      data: { laboratory, survey }\n    });\n    console.log('Data recieved from server');\n  }\n\n  render() {\n    const { data } = this.state,\n          { laboratory, survey } = data,\n          timestamps = Object.keys(laboratory),\n          latestData = laboratory[timestamps[timestamps.length - 1]];\n    \n    return(\n      <Suspense fallback={<Loader />}>\n        <div className=\"app\">\n          <DataLoadingIndicator />\n          <Navigation />\n          <Router>\n            {Object.keys(laboratory).length > 0 &&\n              <Dashboard path=\"/\" laboratory={laboratory} survey={survey} />\n            }\n            {latestData &&\n              <DataTable path=\"/table\" dataset={latestData} />\n            }\n            <Survey path=\"/survey\" />\n          </Router>\n        </div>\n      </Suspense>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst MainLoader = () => {\r\n  return(\r\n    <div className=\"loader-wrapper\">\r\n      <div className=\"loader-title\">CORONAhub</div>\r\n      <div className=\"loader\">\r\n        {[...Array(25).keys()].map((key) => <div key={key}></div>)}\r\n      </div>\r\n\t  </div>\r\n  );\r\n}\r\n\r\nexport const CircularLoader = () => {\r\n  return(\r\n    <div className=\"circular-loader\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainLoader;\r\n"],"sourceRoot":""}