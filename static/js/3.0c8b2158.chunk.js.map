{"version":3,"sources":["components/data-table/data-table.js"],"names":["DataTable","onClickProp","e","prop","target","dataset","state","sortProp","sortAscending","setState","onClicktDirection","parentNode","country","province","confirmed","recovered","deaths","props","this","sort","params","ascending","a","b","sortBy","className","TableHead","selected","sortDirections","columns","title","map","d","i","Row","key","datapoint","Component","c","cls","clsIcon","data-prop","onClick","SortingArrowsIcon","width","height","viewBox","transform"],"mappings":"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","file":"static/js/3.0c8b2158.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport './data-table.css';\r\n\r\nconst sortBy = (params) => {\r\n  const {\r\n    prop,\r\n    ascending = true,\r\n  } = params;\r\n  return (a, b) => {\r\n    a = a[prop];\r\n    b = b[prop];\r\n    if(a === b) {\r\n      return 0;\r\n    }\r\n    // empty and null values get sorted after anything else\r\n    else if(a === '' || a === null) {\r\n      return 1;\r\n    }\r\n    else if(b === '' || b === null) {\r\n      return -1;\r\n    } else if(ascending) {\r\n      return a < b ? -1 : 1;\r\n    } else { \r\n      return a < b ? 1 : -1;\r\n    }\r\n  }\r\n}\r\n\r\nexport default class DataTable extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      sortProp: 'country',\r\n      sortAscending: {\r\n        country: true,\r\n        province: true,\r\n        confirmed: true,\r\n        recovered: true,\r\n        deaths: true,\r\n      }, \r\n    }\r\n  }\r\n\r\n  onClickProp = (e) => {\r\n    const { prop } = e.target.dataset,\r\n          { sortProp, sortAscending } = this.state;\r\n    if(!!prop) {\r\n      if(prop === sortProp) {\r\n        sortAscending[prop] = !sortAscending[prop];\r\n      }\r\n      this.setState({\r\n        sortProp: prop,\r\n        sortAscending,\r\n      });\r\n    }\r\n  }\r\n\r\n  onClicktDirection = (e) => {\r\n    const { prop } = e.target.parentNode.dataset,\r\n          { sortAscending } = this.state;\r\n    sortAscending[prop] = !sortAscending[prop];\r\n    this.setState({\r\n      sortProp: prop,\r\n      sortAscending });\r\n  }\r\n\r\n  render() {\r\n    const { props, state, onClickProp, onClicktDirection } = this,\r\n          { sortProp, sortAscending } = state,\r\n          dataset = props.dataset.sort(sortBy({\r\n            prop: sortProp,\r\n            ascending: sortAscending[sortProp],\r\n          }));\r\n    \r\n    return(\r\n      <Fragment>\r\n        <div className=\"data-table-hero\"></div>\r\n        <div className=\"data-table-container\">\r\n          <h2>Data table</h2>\r\n          <div className=\"data-table\">\r\n            <table>\r\n              <TableHead\r\n                onClickProp={onClickProp}\r\n                onClicktDirection={onClicktDirection}\r\n                selected={sortProp}\r\n                sortDirections={sortAscending}\r\n                columns={[\r\n                  { title: 'Country / Region', prop: 'country' },\r\n                  { title: 'Province / State', prop: 'province' },\r\n                  { title: 'Confirmed', prop: 'confirmed' },\r\n                  { title: 'Recovered', prop: 'recovered' },\r\n                  { title: 'Deaths', prop: 'deaths' },\r\n                ]}\r\n              />\r\n              <tbody>\r\n                {dataset.map((d, i) => <Row key={i} datapoint={d} />)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst TableHead = (props) => {\r\n  const {\r\n    columns,\r\n    selected,\r\n    onClickProp,\r\n    onClicktDirection,\r\n    sortDirections\r\n  } = props;\r\n  return(\r\n    <thead>\r\n      <tr>\r\n        {columns.map((c, i) => {\r\n          const { title, prop } = c;\r\n          const cls = `data-table-category ${prop === selected ? 'selected' : ''}`;\r\n          const clsIcon = `data-table-category__sort-control ${sortDirections[prop] ? 'ascending' : ''}`;\r\n          return(\r\n            <th key={i} className={cls} data-prop={prop} onClick={onClickProp}>\r\n              {title}\r\n              <span className={clsIcon} onClick={onClicktDirection}>\r\n                <SortingArrowsIcon />\r\n              </span>\r\n            </th>\r\n          );\r\n        })}\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nconst Row = ({ datapoint }) => {\r\n  const {\r\n    country, province, confirmed, recovered, deaths,\r\n  } = datapoint;\r\n  return(\r\n    <tr>\r\n      <td>{country}</td>\r\n      <td>{province}</td>\r\n      <td>{confirmed}</td>\r\n      <td>{recovered}</td>\r\n      <td>{deaths}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nconst SortingArrowsIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 -4 20 35\">\r\n    <path transform=\"translate(-6 -5)\" d=\"M12 0l8 9h-6v15h-4v-15h-6z\"/>\r\n    <path transform=\"translate( 6  5)\" d=\"M12 24l-8-9h6v-15h4v15h6z\"/>\r\n  </svg>\r\n);\r\n"],"sourceRoot":""}