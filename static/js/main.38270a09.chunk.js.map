{"version":3,"sources":["components/discrete-slider/discrete-slider.js","components/navigation/navigation.js","components/data-map/layers-setup.js","components/data-map/data-map.js","theme/theme.js","components/data-panel/data-chart.js","utilities/data-mutations.js","utilities/formatting.js","components/data-panel/data-panel.js","components/loader/loader.js","components/survey/survery.js","App.js","utilities/interfaces.js","serviceWorker.js","index.js"],"names":["identity","x","findClosestPoint1d","x0","set","D","map","Math","abs","indexOf","min","evalSliderMarkerPos","DiscreteSlider","props","onMouseDown","setState","isDragging","onMouseUp","state","availableValues","value","onChange","isSnapped","target","snapRange","option","Number","array","max","formatValue","filter","filterRange","v","i","self","sort","unshift","push","length","this","console","log","startValue","paramsInput","type","onTouchStart","onTouchEnd","range","left","subclsDragging","subclsSnapped","cls","paramsThumb","className","style","paramsThumbAnimation","paramsDisplayValue","display","key","Component","Navigation","handleToggle","isExpanded","handleCollapse","clsNav","clsToggle","onClick","to","activeClassName","MenuIcon","width","height","viewBox","d","HomeIcon","TableIcon","SurveyIcon","ContactIcon","ImprintIcon","circleLayer","id","source","paint","countLayer","layout","DataMap","data","mapStyle","useState","latitude","longitude","zoom","viewport","setViewport","mapStyleURI","onViewportChange","mapboxApiAccessToken","position","bottom","right","theme","base","spacing","typography","font","sans","serif","text","title","breakpoint","xs","sm","md","lg","color","primary","secondary","tertiary","dark","light","infected","recovered","deaths","border","radius","boxShadow","lenghts","navigation","offset","generateDataset","label","Object","values","borderColor","backgroundColor","borderWidth","PingChart","node","chart","confirmed","Chart","labels","keys","datasets","options","elements","point","legend","scales","xAxes","yAxes","ticks","beginAtZero","padding","top","ref","e","__sum","y","__or","__ensureArray","__condenseDataset","prop","dataset","p","reduce","condenseData","r","forEach","t","condenseDataset","__filterPropValuePair","possiblities","includes","pad","num","size","s","__bigIntegerDisplayFormater","Intl","NumberFormat","bigIntegerDisplay","number","format","__percentageDisplayFormater","maximumSignificantDigits","percentageDisplay","DataPanelTiles","heading","DataPanelTile","children","DataPanelControls","onToggleFilters","onToggleCharts","FilterIcon","ArrowLeftIcon","DataPanel","condensedData","condensedDataCurrent","currentTime","chartsExpanded","isDataNotEmpty","confirmedValues","recoveredValues","deathsValues","controlHandlers","clsCharts","Loader","Array","Survey","permuteMapStyles","currentValue","LoadingIndicator","usePromiseTracker","delay","promiseInProgress","App","handleReload","document","location","reload","handleSwitchTheme","handleSetTime","filtered","timestamps","handleSetLive","handleToggleCharts","handleCollapseCharts","handleToggleFilters","filtersExpanded","handleCollapseFilters","handleFilterCountries","filteredRegions","fetched","filterPropValuePair","setTime","unixtime","getLiveData","a","fetch","__PROXY","res","json","survey","registeredRegions","__registeredRegions","datapoint","province","country","Set","region","geoData","features","geodataFeatures","latlng","lat","lng","properties","geometry","coordinates","interfaceOutGeoJSON","path","open","onClose","classNames","modal","center","isMulti","name","defaultValue","date","Date","getDate","getMonth","getFullYear","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.38270a09.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './discrete-slider.css';\r\n\r\nconst identity = (x) => x;\r\n\r\nconst removeDuplicates = (array) => (\r\n  array.filter((v, i, self) => self.indexOf(v) === i)\r\n);\r\n\r\nconst filterRange = (array, min, max) => (\r\n  array.filter((x) => x < max).filter((x) => x > min)\r\n);\r\n\r\nconst findSmallestGap = (set) => (\r\n  // assumes an ordered array without duplicate entries\r\n  Math.min(...set.map((x, i) => (\r\n    i === 0 ? set[set.length - 1] : Math.abs(x - set[i - 1])\r\n  )))\r\n);\r\n\r\nconst findClosestPoint1d = (x0, set) => {\r\n  // assumes a number and an ordered array without duplicate entries\r\n  const D = set.map((x) => Math.abs(x - x0));\r\n  return set[D.indexOf(Math.min(...D))];\r\n}\r\n\r\nconst evalSliderMarkerPos = (x) => (\r\n  // x*100 - c\r\n  // where c = 5*(x - .5) is the correction term,\r\n  // the scaled distance from the mid point.\r\n  // =>\r\n  x*100 - 5*(x - .5)\r\n);\r\n\r\nexport default class DiscreteSlider extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    const {\r\n      max = 0,\r\n      min = 100,\r\n      availableValues = [],\r\n      formatValue = identity,\r\n    } = props;\r\n    this.formatValue = formatValue;\r\n    this.availableValues = filterRange(removeDuplicates(availableValues), min, max).sort();\r\n    this.availableValues.unshift(min);\r\n    this.availableValues.push(max);\r\n    this.snapRange = Math.min(\r\n      (max - min) / 25,\r\n      findSmallestGap(this.availableValues) / 2,\r\n    );\r\n    this.state = {\r\n      value: 0,\r\n      isDragging: false,\r\n      isSnapped: false,\r\n    }\r\n  }\r\n  \r\n  onMouseDown = () => {\r\n    this.setState({ isDragging: true });\r\n  }\r\n  \r\n  onMouseUp = () => {\r\n    const { props, state, availableValues } = this;\r\n    let { value } = state;\r\n    value = findClosestPoint1d(value, availableValues);\r\n    props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isDragging: false,\r\n      isSnapped: true,\r\n    });\r\n  }\r\n  \r\n  onChange = ({ target }) => {\r\n    const { props, availableValues, snapRange } = this;\r\n    let { value } = target,\r\n        isSnapped = false;\r\n    for(const option of availableValues) {\r\n      const D = Math.abs(value - option);\r\n      if(D < snapRange) {\r\n        value = option;\r\n        isSnapped = true;\r\n        value = Number(value);\r\n        props.onChange(value);\r\n        break;\r\n      }\r\n    }\r\n    //value = Number(value);\r\n    //props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isSnapped,\r\n    });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if(this.availableValues.length === 2) {\r\n      console.log('Warning: Select has no available values apart from the edges');\r\n    }\r\n    const { props } = this,\r\n          { min, startValue } = props,\r\n          value = findClosestPoint1d(startValue, this.availableValues) || min;\r\n    props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isSnapped: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      props,\r\n      state,\r\n      availableValues,\r\n      formatValue,\r\n      onChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n    } = this;\r\n    const { min, max } = props;\r\n    const { value, isDragging, isSnapped } = state;\r\n    const paramsInput = {\r\n      type: 'range',\r\n      min,\r\n      max,\r\n      value: value || min,\r\n      onChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n      onTouchStart: onMouseDown,\r\n      onTouchEnd: onMouseUp,\r\n    }\r\n    const range = Math.abs(max - min);\r\n    const left = `${evalSliderMarkerPos((value - min) / range)}%`;\r\n    const subclsDragging = isDragging ? 'dragging' : '';\r\n    const subclsSnapped = isSnapped ? 'snapped' : '';\r\n    const cls = `discrete-slider ${subclsDragging}`;\r\n    const paramsThumb = {\r\n      className: 'discrete-slider__thumb',\r\n      style: { left },\r\n    }\r\n    const paramsThumbAnimation = {\r\n      className: `discrete-slider__thumb-animation ${subclsDragging}`,\r\n      style: { left },\r\n    }\r\n    const paramsDisplayValue = {\r\n      className: `discrete-slider__display-value ${subclsSnapped}`,\r\n      style: {\r\n        display: value <= min + this.snapRange || value >= max - this.snapRange ? 'none' : 'block',\r\n        left,\r\n      }\r\n    }\r\n    return(\r\n      <div className={cls}>\r\n        <input {...paramsInput} />\r\n        <div {...paramsThumb}></div>\r\n        <div {...paramsThumbAnimation}></div>\r\n        <div {...paramsDisplayValue}>\r\n          {formatValue(value)}\r\n        </div>\r\n        <div className=\"discrete-slider__markers\">\r\n          {availableValues.map((v, i) => (\r\n            <div\r\n              key={i}\r\n              className=\"discrete-slider__markers__marker\"\r\n              style={{ left: `${evalSliderMarkerPos((v - min) / range)}%` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport './navigation.css';\r\n\r\nexport default class Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isExpanded: false,\r\n    }\r\n  }\r\n\r\n  handleToggle = () => {\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapse = () => {\r\n    this.setState({\r\n      isExpanded: false,\r\n    });\r\n  }\r\n\r\n  /*\r\n  componentWillUnmount() {\r\n    const { props, handleCollapse } = this,\r\n          { rootNode } = props;\r\n    rootNode.removeEventListener('click', handleCollapse);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { props, handleCollapse } = this,\r\n          { rootNode } = props;\r\n    rootNode.addEventListener('click', handleCollapse);\r\n  }\r\n  */\r\n\r\n  render() {\r\n    const { state, handleToggle } = this,\r\n          { isExpanded } = state,\r\n          clsNav = `navigation ${isExpanded ? 'expanded' : ''}`,\r\n          clsToggle = `navigation-toggle ${isExpanded ? 'expanded' : ''}`;\r\n    return(\r\n      <Fragment>\r\n        <div className={clsToggle} onClick={handleToggle}>\r\n          <MenuIcon />\r\n        </div>\r\n        <nav className={clsNav}>\r\n          <div className=\"navigation__brand\">Corona<span>hub</span></div>\r\n          <ul>\r\n            <li><HomeIcon /><Link to=\"/\" activeClassName='active'>Home</Link></li>\r\n            <li><TableIcon /><Link to=\"/table\" activeClassName='active'>Table</Link></li>\r\n            <li><SurveyIcon /><Link to=\"/survey\" activeClassName='active'>Survey</Link></li>\r\n            <li><ContactIcon /><Link to=\"/contact\" activeClassName='active'>Contact</Link></li>\r\n            <li><ImprintIcon /><Link to=\"/imprint\" activeClassName='active'>Imprint</Link></li>\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst MenuIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\" />\r\n  </svg>\r\n);\r\n\r\nconst HomeIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M21 13v10h-6v-6h-6v6h-6v-10h-3l12-12 12 12h-3zm-1-5.907v-5.093h-3v2.093l3 3z\" />\r\n  </svg>\r\n);\r\n\r\nconst TableIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M20 19h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm16-14v22h-24v-22h24zm-2 6h-20v14h20v-14zm-8 8h-4v4h4v-4zm-6-6h-4v4h4v-4z\" />\r\n  </svg>\r\n);\r\n\r\nconst SurveyIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7 16h10v1h-10v-1zm0-1h10v-1h-10v1zm15-13v22h-20v-22h3c1.229 0 2.18-1.084 3-2h8c.82.916 1.771 2 3 2h3zm-11 1c0 .552.448 1 1 1s1-.448 1-1-.448-1-1-1-1 .448-1 1zm9 1h-4l-2 2h-3.898l-2.102-2h-4v18h16v-18zm-13 9h10v-1h-10v1zm0-2h10v-1h-10v1z\" />\r\n  </svg>\r\n);\r\n\r\nconst ContactIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M0 3v18h24v-18h-24zm21.518 2l-9.518 7.713-9.518-7.713h19.036zm-19.518 14v-11.817l10 8.104 10-8.104v11.817h-20z\" />\r\n  </svg>\r\n);\r\n\r\nconst ImprintIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M20 12.875v5.068c0 2.754-5.789 4.057-9 4.057-3.052 0-9-1.392-9-4.057v-6.294l9 4.863 9-3.637zm-8.083-10.875l-12.917 5.75 12 6.5 11-4.417v7.167h2v-8.25l-12.083-6.75zm13.083 20h-4c.578-1 1-2.5 1-4h2c0 1.516.391 2.859 1 4z\" />\r\n  </svg>\r\n);\r\n","export const circleLayer = {\r\n  id: 'clusters',\r\n  type: 'circle',\r\n  source: 'covid-19',\r\n  paint: {\r\n    'circle-color': [\r\n      'step',\r\n      ['get', 'confirmed'],\r\n      '#03befc', 20,\r\n      '#f1f075', 800,\r\n      '#f28cb1', 5000,\r\n      '#ba1818'\r\n    ],\r\n    'circle-radius': [\r\n      'step',\r\n      ['zoom'], 4, 2, 6, 4, [\r\n        'interpolate',\r\n        ['cubic-bezier', 0, 0.5, 1, 0.5 ],\r\n        ['get', 'confirmed'],\r\n        20,  8,\r\n        5000, 25\r\n      ]\r\n    ],\r\n  }\r\n};\r\n\r\nexport const countLayer = {\r\n  id: 'cluster-count',\r\n  type: 'symbol',\r\n  source: 'covid-19',\r\n  layout: {\r\n    'text-field': ['get', 'confirmed'],\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': ['step', ['zoom'], 0, 4, 11],\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport ReactMapGL, { Source, Layer, NavigationControl } from 'react-map-gl';\r\nimport { circleLayer, countLayer } from './layers-setup';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2lhbm5vdHIiLCJhIjoiY2s3aHFkcDkwMGMzYjNlbzNvMWl4bGFxbyJ9.2p2O5m7aiA6Bn9vjPe7HrQ';\r\n\r\nconst DataMap = ({ data, mapStyle, onClick }) => {\r\n  const [viewport, setViewport] = useState({\r\n    width: '100vw',\r\n    height: '100vh',\r\n    latitude: 45,\r\n    longitude: 10,\r\n    zoom: 4,\r\n  });\r\n\r\n  const mapStyleURI = `mapbox://styles/mapbox/${mapStyle}`;\r\n\r\n  /*\r\n  const clusterParams = {\r\n    cluster: true,\r\n    clusterMaxZoom: 14,\r\n    clusterRadius: 50,\r\n    clusterProperties: { 'cluster_count': ['+', ['case', ['get', 'confirmed'], 1, 0]] },\r\n  }\r\n  */\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      onViewportChange={setViewport}\r\n      mapboxApiAccessToken={MAPBOX_TOKEN}\r\n      mapStyle={mapStyleURI}\r\n      onClick={onClick}\r\n    >\r\n      <Source id=\"covid-19\" type=\"geojson\" data={data}>\r\n        <Layer {...circleLayer} />\r\n        <Layer {...countLayer} />\r\n      </Source>\r\n      <div style={{position: 'absolute', bottom: '45px', right: '20px'}}>\r\n        <NavigationControl />\r\n      </div>\r\n    </ReactMapGL>\r\n  );\r\n}\r\n\r\nexport default DataMap;\r\n","const theme = {\r\n  base: \"16px\",\r\n  spacing: \"1rem\",\r\n  typography: {\r\n    font: {\r\n      sans: 'Jura',\r\n      serif: 'Forum',\r\n    },\r\n    text: \"1rem\",\r\n    title: \"2rem\"\r\n  },\r\n  breakpoint: {\r\n    xs: \"0em\",  /* 0px */\r\n    sm: \"30em\", /* 480px */\r\n    md: \"64em\", /* 1024px */\r\n    lg: \"75em\", /* 1200px */\r\n  },\r\n  color: {\r\n    primary: \"#6d9197\",\r\n    secondary: \"#c4cdc1\",\r\n    tertiary: \"99aead\",\r\n    dark: \"#28364d\",\r\n    light: \"#dee1dd\",\r\n    infected: \"#2f575d\",\r\n    recovered: \"#658b6f\",\r\n    deaths: \"#f8b95f\",\r\n  },\r\n  border: {\r\n    radius: '20px',\r\n    boxShadow: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)',\r\n  },\r\n  lenghts: {\r\n    navigation: {\r\n      offset: '35px',\r\n      height: '90vh',\r\n    },\r\n  }\r\n}\r\n\r\nexport default theme;\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport theme from '../../theme/theme';\r\n\r\nconst generateDataset = (label, data, color) => {\r\n  return({\r\n    label,\r\n    data: Object.values(data),\r\n    borderColor: color,\r\n    backgroundColor: 'transparent',\r\n    borderWidth: 2,\r\n  })\r\n}\r\n\r\nexport default class PingChart extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.node = null;\r\n    this.chart = null;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const { data } = this.props,\r\n          { confirmed, recovered, deaths } = data;\r\n    this.chart = new Chart(this.node, {\r\n      type: 'line',\r\n      data: {\r\n        labels: Object.keys(confirmed),\r\n        datasets: [\r\n          generateDataset('Confirmed', confirmed, theme.color.infected),\r\n          generateDataset('Recovered', recovered, theme.color.recovered),\r\n          generateDataset('Deaths', deaths, theme.color.deaths),\r\n        ]\r\n      },\r\n      options: {\r\n        elements: {\r\n          point: { radius: 0 },\r\n        },\r\n        legend: { display: false },\r\n        scales: {\r\n          xAxes: [{ display: false }],\r\n          yAxes: [{\r\n            display: false,\r\n            ticks: {\r\n              beginAtZero: true,\r\n            }\r\n          }]\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 25,\r\n            right: 25,\r\n            top: 40,\r\n            bottom: 40,\r\n          },\r\n        },\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return <canvas ref={e => this.node = e} />;\r\n  }\r\n}\r\n","const __sum = (x, y) => x + y;\r\nconst __or = (x, y) => x || y;\r\nconst __ensureArray = (x) => {\r\n  if(typeof x !== 'object') {\r\n    x = [x];\r\n  }\r\n  return x;\r\n}\r\nconst __includesArray = (array, possiblities) => (\r\n  !!array ? possiblities.map(p => array.includes(p)).reduce(__or, false) : true\r\n)\r\n\r\n// B.F. TODO: Add tests!\r\n\r\nconst __condenseDataset = (prop, dataset) => (\r\n  !!prop ? dataset.map(p => p[prop]).reduce(__sum, 0) : 0\r\n);\r\n\r\nexport const condenseDataset = (props, dataset) => {\r\n  if(typeof props === 'object') {\r\n    return props.map(p => __condenseDataset(p, dataset)).reduce(__sum, 0);\r\n  } else {\r\n    return __condenseDataset(props, dataset);\r\n  }\r\n}\r\n\r\nexport const condenseData = (props, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = condenseDataset(props, data[t])\r\n  });\r\n  return r;\r\n}\r\n\r\nconst __filterProps = (props, dataset) => {\r\n  props = __ensureArray(props);\r\n  return dataset.map(p => Object.keys(p)\r\n    .filter(key => props.includes(key))\r\n    .reduce((obj, key) => {\r\n      obj[key] = p[key];\r\n      return obj;\r\n    }, {}));\r\n}\r\n\r\nexport const filterProps = (props, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = __filterProps(props, data[t])\r\n  });\r\n  return r;\r\n}\r\n\r\nconst __filterPropValuePair = (props, values, dataset) => (\r\n  dataset.filter(\r\n    p => __includesArray(values, __ensureArray(props).map(x => p[x]))\r\n  )\r\n);\r\n\r\nexport const filterPropValuePair = (props, values, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = __filterPropValuePair(props, values, data[t])\r\n  });\r\n  return r;\r\n}\r\n","export const pad = (num, size) => {\r\n  let s = num + '';\r\n  while(s.length < size) s = '0' + s;\r\n  return s;\r\n}\r\n\r\nconst __bigIntegerDisplayFormater = new Intl.NumberFormat('en-US');\r\n\r\nexport const bigIntegerDisplay = (number) => (\r\n  __bigIntegerDisplayFormater.format(number)\r\n);\r\n\r\nconst __percentageDisplayFormater = new Intl.NumberFormat(\r\n  'en-IN', { maximumSignificantDigits: 3 }\r\n);\r\n\r\nexport const percentageDisplay = (number) => (\r\n  __percentageDisplayFormater.format(number)\r\n);\r\n\r\nexport const dateString = (date) => (\r\n  `${pad(date.getMonth() + 1, 2)}-${pad(date.getDate(), 2)}-${date.getFullYear()}`\r\n);\r\n\r\nexport const dateDisplay = (date) => (\r\n  `${pad(date.getDate(), 2)}.${pad(date.getMonth() + 1, 2)}.${date.getFullYear()}`\r\n);\r\n","import React, { Fragment } from 'react';\r\nimport DataChart from './data-chart';\r\nimport { condenseData } from '../../utilities/data-mutations';\r\nimport { bigIntegerDisplay, percentageDisplay } from '../../utilities/formatting';\r\nimport './data-panel.css';\r\n\r\nconst DataPanel = (props) => {\r\n  const {\r\n    data,\r\n    currentTime,\r\n    chartsExpanded,\r\n    onToggleFilters,\r\n    onToggleCharts,\r\n  } = props;\r\n  const isDataNotEmpty = !!Object.keys(data).length;\r\n  let condensedData, condensedDataCurrent;\r\n  if(isDataNotEmpty) {\r\n    const confirmedValues = condenseData('confirmed', data),\r\n          recoveredValues = condenseData('recovered', data),\r\n          deathsValues = condenseData('deaths', data);\r\n    condensedData = {\r\n      confirmed: {...confirmedValues},\r\n      recovered: {...recoveredValues},\r\n      deaths: {...deathsValues},\r\n    }\r\n    condensedDataCurrent = {\r\n      confirmed: confirmedValues[currentTime],\r\n      recovered: recoveredValues[currentTime],\r\n      deaths: deathsValues[currentTime],\r\n    }\r\n  }\r\n  const controlHandlers = { onToggleFilters, onToggleCharts }\r\n  const clsCharts = `charts-container ${chartsExpanded ? 'expanded' : ''}`\r\n  return(\r\n    <Fragment>\r\n      <div className=\"data-panel\">\r\n        {isDataNotEmpty && <DataPanelTiles {...condensedDataCurrent} />}\r\n        <DataPanelControls {...controlHandlers} />\r\n      </div>\r\n      <div className={clsCharts}>\r\n        {isDataNotEmpty && <DataChart data={condensedData} />}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst DataPanelTiles = ({ confirmed, deaths, recovered }) => {\r\n  return(\r\n    <Fragment>\r\n      <DataPanelTile cls=\"confirmed\" heading=\"Confirmed\">\r\n        {bigIntegerDisplay(confirmed)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"recovered\" heading=\"Recovered\">\r\n        {bigIntegerDisplay(recovered)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"deaths\" heading=\"Deaths\">\r\n        {bigIntegerDisplay(deaths)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"computations\" heading=\"Computations\">\r\n        <div>\r\n          Active cases: {bigIntegerDisplay(confirmed - deaths - recovered)}\r\n        </div>\r\n        <div>\r\n          Recover rate: {`${percentageDisplay(recovered / confirmed * 100)}%`}\r\n        </div>\r\n        <div>\r\n          Mortality rate: {`${percentageDisplay(deaths / confirmed * 100)}%`}\r\n        </div>\r\n      </DataPanelTile>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst DataPanelTile = ({ cls, heading, children }) => {\r\n  cls = `data-panel__tile ${cls}`;\r\n  return(\r\n    <div className={cls}>\r\n      <div className=\"data-panel__tile__heading\">{heading}</div>\r\n      <div className=\"data-panel__tile__content\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DataPanelControls = ({ onToggleFilters, onToggleCharts }) => {\r\n  return(\r\n    <div className=\"data-panel__controls\">\r\n      <span onClick={onToggleFilters}>\r\n        <FilterIcon />\r\n      </span>\r\n      <span onClick={onToggleCharts}>\r\n        <ArrowLeftIcon />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\nconst LiveDataComputations = ({\r\n  confirmed, deaths, recovered, children\r\n}) => {\r\n  return(\r\n    <div className=\"data-panel-computations__block\">\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"data-panel-computations__metric-key\">\r\n          Active cases:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          {bigIntegerDisplay(confirmed - deaths - recovered)}\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"live-data-panel-computations__metric-key\">\r\n          Recover rate:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          {`${percentageDisplay(recovered / confirmed * 100)}%`}\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"data-panel-computations__metric-key\">\r\n          Mortality rate:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          <span className=\"data-panel-computations__fatal\">\r\n            {`${percentageDisplay(deaths / confirmed * 100)}%`}\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__block-description\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nconst FilterIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M1 0l9 15.094v5.906l4 3v-8.906l9-15.094h-22zm18.479 2l-2.981 5h-8.996l-2.981-5h14.958z\" />\r\n  </svg>\r\n);\r\n\r\nconst ArrowLeftIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M24 11.871l-5-4.871v3h-19v4h19v3z\" />\r\n  </svg>\r\n);\r\n\r\nexport default DataPanel;\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n  return(\r\n    <div className=\"loader-wrapper\">\r\n      <div className=\"loader-title\">CORONA hub</div>\r\n      <div className=\"loader\">\r\n        {[...Array(25).keys()].map((key) => <div key={key}></div>)}\r\n      </div>\r\n\t  </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nconst Survey = () => {\r\n  return(\r\n    <div className=\"survey\">\r\n      <h2>Survey</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Survey;\r\n","import React, { Component, Fragment } from 'react';\nimport { usePromiseTracker, trackPromise } from 'react-promise-tracker';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Modal from 'react-responsive-modal';\nimport Select from 'react-select';\nimport DiscreteSlider from './components/discrete-slider/discrete-slider';\nimport Navigation from './components/navigation/navigation';\nimport DataMap from './components/data-map/data-map';\nimport DataPanel from './components/data-panel/data-panel';\nimport Loader from './components/loader/loader';\nimport Survey from './components/survey/survery';\nimport { filterPropValuePair } from './utilities/data-mutations';\n//import { shiftDateBack } from './utilities/datetime';\nimport { dateDisplay } from './utilities/formatting';\nimport { interfaceOutGeoJSON } from './utilities/interfaces';\nimport './App.css';\n\n//import __DATA__MOCKUP from './data-mockup';\n\n// deprecated\n//const __FIRST__DATARECORD = new Date('01-30-2020').getTime();\n\nconst __PROXY = 'https://cors-anywhere.herokuapp.com/';\n\nconst __SATELLITE = 'satellite-v9';\nconst __LIGHTMODE = 'light-v10';\nconst __DARKMODE = 'dark-v10';\nconst __STREETS = 'streets-v11';\n\nconst permuteMapStyles = (currentValue) => {\n  switch(currentValue) {\n    case __SATELLITE:\n      return __LIGHTMODE;\n    case __LIGHTMODE:\n      return __DARKMODE;\n    case __DARKMODE:\n      return __STREETS;\n    case __STREETS:\n      return __SATELLITE;\n    default:\n      console.log(`Sorry, the style '${currentValue}' doesn't exist.`);\n  }\n}\n\nconst LoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker({ delay: 3000 });\n  return(promiseInProgress && <Loader />);  \n}\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mapStyle: __DARKMODE,\n      data: {\n        fetched: {},\n        filtered: {},\n      },\n      survey: {},\n      currentTime: 0,\n      filteredRegions: [],\n      chartsExpanded: false,\n      filtersExpanded: false,\n    }\n    this.registeredRegions = [];\n  }\n\n  handleReload = () => {\n    document.location.reload();\n  }\n\n  handleSwitchTheme = () => {\n    const { mapStyle } = this.state;\n    this.setState({ mapStyle: permuteMapStyles(mapStyle) });\n  }\n\n  handleSetTime = (value) => {\n    const { data: {filtered} } = this.state;\n    const timestamps = Object.keys(filtered);\n    this.setState({ currentTime: Number(value) + Number(timestamps[0]) });\n  }\n\n  handleSetLive = () => {\n    const { data: {filtered} } = this.state;\n    const timestamps = Object.keys(filtered);\n    //evaluate the closest timestamp to current time\n    /*\n    const now = Date.now();\n    const D = timestamps.map(timestamp => Math.abs(timestamp - now));\n    const i = D.indexOf(Math.min(...D));\n    */\n   // or just grab the last recorded timestamp...\n    this.setState({\n      currentTime: timestamps[timestamps.length - 1],\n    });\n  }\n\n  handleToggleCharts = () => {\n    this.setState({\n      chartsExpanded: !this.state.chartsExpanded,\n    });\n  }\n\n  handleCollapseCharts = () => {\n    this.setState({ chartsExpanded: false });\n  }\n\n  handleToggleFilters = () => {\n    this.setState({\n      filtersExpanded: !this.state.filtersExpanded,\n    });\n  }\n\n  handleCollapseFilters = () => {\n    this.setState({ filtersExpanded: false });\n  }\n\n  handleFilterCountries = (filteredRegions) => {\n    this.setState({ filteredRegions });\n    let { data } = this.state;\n    const { fetched } = data;\n    if(!!filteredRegions && filteredRegions.length > 0) {\n      // filteredRegions come as an object { value: ..., label: ... }\n      filteredRegions = filteredRegions.map(r => r.value);\n      data.filtered = filterPropValuePair(['province', 'country'], filteredRegions, fetched);\n    } else {\n      data.filtered = data.fetched;\n    }\n    this.setState({ data });\n  }\n\n  setTime = (unixtime) => {\n    this.setState({\n      currentTime: unixtime,\n    });\n  }\n\n  getLiveData = async () => {\n    // TODO: fetch from backend here\n    const res = await fetch(__PROXY + 'http://nodejs-express-app-yadii.eu-gb.mybluemix.net/getOfficialData');\n    const data = await res.json();\n    //console.log(d);\n    return data;\n  }\n\n  async componentDidMount() {\n    const data = await this.getLiveData();\n    const timestamps = Object.keys(data);\n    const currentTime = Number(timestamps[timestamps.length - 1]);\n    console.log(timestamps);\n    this.setState({\n      data: {\n        fetched: data,\n        filtered: data,\n        currentTime,\n      }\n    });\n    const __registeredRegions = [\n      ...data[currentTime].map(datapoint => datapoint.province).filter(province => !!province),\n      ...data[currentTime].map(datapoint => datapoint.country)\n    ];\n    this.registeredRegions = [...new Set(__registeredRegions)].map(\n      region => ({ value: region, label: region })\n    );\n  }\n\n  render(){\n    const {\n      state,\n      registeredRegions,\n      handleFilterCountries,\n      handleSetTime,\n      handleToggleCharts,\n      handleCollapseCharts,\n      handleToggleFilters,\n      handleCollapseFilters,\n    } = this;\n    const {\n      mapStyle,\n      data: {filtered},\n      //survey,\n      currentTime,\n      filteredRegions,\n      chartsExpanded,\n      filtersExpanded,\n    } = state;\n\n    const timestamps = Object.keys(filtered);\n    const geoData = interfaceOutGeoJSON(filtered[currentTime]);\n\n    return(\n      <Router>\n        <div className=\"app\">\n          <LoadingIndicator />\n          <Navigation />\n          <Switch>\n            <Route path=\"/\">\n              <Modal\n                open={filtersExpanded}\n                onClose={handleCollapseFilters}\n                classNames={{ modal: 'modal-filters' }}\n                center\n              >\n                <h2>Data filters</h2>\n                <div className=\"filter-label\">Country</div>\n                <Select\n                  isMulti\n                  name=\"countries\"\n                  options={registeredRegions}\n                  defaultValue={filteredRegions}\n                  onChange={handleFilterCountries}\n                />\n                <div className=\"filter-label\">Time</div>\n                <DiscreteSlider\n                  min={0}\n                  max={timestamps[timestamps.length - 1] - timestamps[0]}\n                  availableValues={timestamps.map(t => t - timestamps[0])}\n                  startValue={currentTime - timestamps[0]}\n                  onChange={handleSetTime}\n                  formatValue={(v) => dateDisplay(new Date(v + Number(timestamps[0])))}\n                />\n              </Modal>\n              {filtered && <DataPanel\n                data={filtered}\n                currentTime={currentTime}\n                chartsExpanded={chartsExpanded}\n                onToggleFilters={handleToggleFilters}\n                onToggleCharts={handleToggleCharts}\n              />}\n              {geoData && <DataMap\n                data={geoData}\n                mapStyle={mapStyle}\n                onClick={handleCollapseCharts}\n              />}\n            </Route>\n            <Route path=\"/table\">\n              <Fragment />\n            </Route>\n            <Route path=\"/survey\">\n              <Survey />\n            </Route>\n            <Route path=\"/contact\">\n              <Fragment />\n            </Route>\n            <Route path=\"/imprint\">\n              <Fragment />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n","export const interfaceOutGeoJSON = (dataset) => {\r\n  let geoData = {\r\n    type: 'FeatureCollection',\r\n    features: [],\r\n  }\r\n  if(dataset) {\r\n    let geodataFeatures = [];\r\n    for(const point of dataset){\r\n      const {\r\n        province,\r\n        country,\r\n        confirmed,\r\n        recovered,\r\n        deaths,\r\n        latlng,\r\n      } = point;\r\n      const [ lat, lng ] = latlng;\r\n      geodataFeatures.push({\r\n        type: 'Feature',\r\n        properties: {\r\n          province,\r\n          country,\r\n          confirmed: Number(confirmed),\r\n          recovered: Number(recovered),\r\n          deaths: Number(deaths),\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [Number(lng), Number(lat)],\r\n        }\r\n      });\r\n    }\r\n    geoData.features = geodataFeatures;\r\n  }\r\n  return geoData;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}