{"version":3,"sources":["components/survey/survery.js"],"names":["binaryAnswers","value","label","handWashDurations","CoronaSurvey","setMetric","metric","setState","state","cough","fever","symptoms","proximity","washHands","washHandsDuration","washHandsSoap","riskyTravel","symptomaticContact","diagnosedContact","criticalContact","this","className","CoronaSurveyHero","Survey","title","SurveySlide","Question","Answer","onChange","options","Math","random","style","color","role","Component","children","name","option","prevSlide","currentSlide","nextSlide","totalSlides","props","length","SurveyCaroussel","map","c","i","SurveySlideRender","key","slideNumber","onClick","cls"],"mappings":"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","file":"static/js/6.53926752.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport './survey.css';\r\n\r\nconst binaryAnswers = [\r\n  { value: true, label: 'Ja' },\r\n  { value: false, label: 'Nein' }\r\n];\r\n\r\nconst handWashDurations = [\r\n  { value: 1, label: '0-5 Sekunden' },\r\n  { value: 2, label: '5-10 Sekunden' },\r\n  { value: 3, label: '10-15 Sekunden' },\r\n  { value: 4, label: '15-20 Sekunden' },\r\n  { value: 5, label: '>20 Sekunden' }\r\n];\r\n\r\nexport default class CoronaSurvey extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cough: false,\r\n      fever: false,\r\n      symptoms: false,\r\n      proximity: false,\r\n      washHands: false,\r\n      washHandsDuration: 0,\r\n      washHandsSoap: false,\r\n      riskyTravel: false,\r\n      symptomaticContact: false,\r\n      diagnosedContact: false,\r\n      criticalContact: false,\r\n    }\r\n  }\r\n\r\n  setMetric = (metric, { value }) => {\r\n    this.setState({ [metric]: value });\r\n  }\r\n\r\n  render() {\r\n    const { setMetric } = this;\r\n    return(\r\n      <div className=\"corona-survey\">\r\n        <CoronaSurveyHero /> \r\n        <Survey title=\"COVID-19 infection probability assesement\">\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen trockenen Husten?\r\n              <Answer metric=\"cough\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Fieber (>37,9)?\r\n              <Answer metric=\"fever\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben oder hatten Sie in den vergangenen zwei Wochen zus√§tzlich dazu eine oder mehrere der folgenden Symptome?\r\n              (Halskratzen, Fr√∂steln, erh√∂hte Temperatur (>37,5), Atemprobleme, Durchfall, Abgeschlagenheit,\r\n              Glieder- oder Muskelschmerzen, Geruchs- oder Geschmacksverlust, Kopfschmerzen, Schnupfen.)\r\n              <Answer metric=\"symptoms\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie sich in den vergangenen zwei Wochen f√ºr mindestens 5 Minuten in der N√§he zu Personen aufgehalten,\r\n              die geniest oder gehustet haben (z.B. in der U-Bahn, im Bus oder in einem geschlossenen Raum)?\r\n              <Answer metric=\"proximity\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Waschen Sie sich h√§ufig die H√§nde (mind. 3x am Tag)?\r\n              <Answer metric=\"washHands\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              F√ºr wie lange waschen Sie sich die H√§nde?\r\n              <Answer metric=\"washHandsDuration\" options={handWashDurations} onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Verwenden Sie Seife?\r\n              <Answer metric=\"washHandsSoap\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Sind Sie in den vergangenen zwei Wochen in eines dieser Risikogebiete gereist?\r\n              (RKI, Stand 21.3.2020: √Ñgypten, China (Provinz Hubei), Iran, Italien,\r\n              √ñsterreich (Bundesland Tirol), Spanien (Madrid),\r\n              S√ºdkorea (Provinz Gyeongsangbuk-do (Nord-Gyeongsang),\r\n              USA (Bundesstaaten Kalifornien, Washington und New York))\r\n              <Answer metric=\"riskyTravel\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt*\r\n              zu einer Person, die gehustet hat?\r\n              <Answer metric=\"symptomaticContact\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt* zu einer Person,\r\n              die leicht an COVID-19 erkrankt ist\r\n              (labortechnisch festgestellt, ohne Fieber, mit Husten, Halskratzen und/oder ggf. Abgeschlagenheit)?\r\n              <Answer metric=\"diagnosedContact\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt*\r\n              zu einer Person, die schwer an COVID-19 erkrankt ist\r\n              (labortechnisch festgestellt, mit Husten, Fieber und/oder Lungenentz√ºndung)?\r\n              *H√§ndesch√ºtteln, Umarmen, von einem gemeinsamen Teller essen, Gegenst√§nde ber√ºhren,\r\n              die die Infizierte Person auch ber√ºhrt hat, weniger als 1,5 m Abstand.\r\n              <Answer metric=\"criticalContact\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <div className=\"corona-survey__conclusion\">\r\n              <p>\r\n                Vielen Dank f√ºr Ihre Teilnahme!\r\n              </p>\r\n              <p>\r\n                Die Wahrscheinlichkeit einer Infektion betr√§gt:\r\n                &nbsp;\r\n                {`${Math.random()*100}%`}\r\n              </p>\r\n              <p style={{color: 'red'}}>\r\n                ACHTUNG: Das ist (noch) ein zuf√§llig errechneter Wert dieses Prototyps!!!\r\n              </p>\r\n              <p>\r\n                Mit Hilfe der von Ihnen bereitgestellten Daten wird eine\r\n                weitaus differenziertere Betrachtung der Situation\r\n                m√∂glich sein als mit den gemeldeteten Labortests allein.\r\n              </p>\r\n              <p>\r\n                Halten Sie gut durch! <span role=\"img\">üí™</span>\r\n              </p>\r\n            </div>\r\n          </SurveySlide>\r\n        </Survey>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst CoronaSurveyHero = () => <div className=\"corona-survey-hero\"></div>;\r\n\r\nconst Question = ({ children }) => (\r\n  <div className=\"corona-survey__question\">{children}</div>\r\n);\r\n\r\nconst Answer = ({ metric, onChange, options = binaryAnswers }) => (\r\n  <Select\r\n    className=\"corona-survey__answers\"\r\n    name={metric}\r\n    options={options}\r\n    onChange={(option) => { onChange(metric, option) }}\r\n  />\r\n);\r\n\r\n//------------\r\n\r\nconst SurveySlide = ({ children }) => (\r\n  <Fragment>{children}</Fragment>\r\n);\r\n\r\nclass Survey extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      totalSlides: 0,\r\n      currentSlide: 0,\r\n    }\r\n  }\r\n\r\n  prevSlide = () => {\r\n    const { currentSlide } = this.state;\r\n    if(currentSlide > 0) {\r\n      this.setState({ currentSlide: currentSlide - 1 });\r\n    }\r\n  }\r\n\r\n  nextSlide = () => {\r\n    const { totalSlides, currentSlide } = this.state;\r\n    if(currentSlide < totalSlides - 1) {\r\n      this.setState({ currentSlide: currentSlide + 1 });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      totalSlides: this.props.children.length,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { props, state, prevSlide, nextSlide } = this;\r\n    const { title, children } = props;\r\n    const { totalSlides, currentSlide } = state;\r\n    // console.log(totalSlides);\r\n    // TODO: Loading spinner while totalSLides <= 0\r\n    return(\r\n      <Fragment>\r\n        <h2>{title}</h2>\r\n        <div className=\"survey__step\">\r\n          {currentSlide + 1} / <span>{totalSlides}</span>\r\n        </div>\r\n        <SurveyCaroussel>\r\n          {children.map((c, i) => (\r\n            <SurveySlideRender key={i} slideNumber={i} currentSlide={currentSlide}>\r\n              {c.props.children}\r\n            </SurveySlideRender>\r\n          ))}\r\n          <div className=\"survery-caroussel__controls\">\r\n            <button onClick={prevSlide}>Zur√ºck</button>\r\n            <button onClick={nextSlide}>Weiter</button>\r\n          </div>\r\n        </SurveyCaroussel>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst SurveyCaroussel = ({ children }) => (\r\n  <div className=\"survey-caroussel\">{children}</div>\r\n);\r\n\r\nconst SurveySlideRender = ({ slideNumber, currentSlide, children }) => {\r\n  const isVisible = slideNumber === currentSlide;\r\n  const cls = `survey-slide-render ${isVisible ? 'visible': ''}`;\r\n  const clsInner = 'survey-slide-render__inner';\r\n  return <div className={cls}><div className={clsInner}>{children}</div></div>;\r\n};\r\n"],"sourceRoot":""}