{"version":3,"sources":["components/discrete-slider/discrete-slider.js","components/data-map/layers-setup.js","components/data-map/data-map.js","theme/theme.js","components/data-panel/data-chart.js","utilities/data-mutations.js","utilities/formatting.js","components/data-panel/data-panel.js","Dashboard.js","utilities/interfaces.js"],"names":["identity","x","findClosestPoint1d","x0","set","D","map","Math","abs","indexOf","min","evalSliderMarkerPos","DiscreteSlider","props","onMouseDown","setState","isDragging","onMouseUp","state","availableValues","value","onChange","isSnapped","target","snapRange","option","Number","array","max","formatValue","filter","filterRange","v","i","self","sort","unshift","push","length","this","console","log","startValue","paramsInput","type","onTouchStart","onTouchEnd","range","left","subclsDragging","subclsSnapped","cls","paramsThumb","className","style","paramsThumbAnimation","paramsDisplayValue","display","key","Component","circleLayer","id","source","paint","countLayer","layout","DataMap","data","mapStyle","onClick","useState","width","height","latitude","longitude","zoom","viewport","setViewport","mapStyleURI","onViewportChange","mapboxApiAccessToken","position","bottom","right","theme","base","spacing","typography","font","sans","serif","text","title","breakpoint","xs","sm","md","lg","color","primary","secondary","tertiary","dark","light","infected","recovered","deaths","border","radius","boxShadow","lenghts","navigation","offset","generateDataset","label","Object","values","borderColor","backgroundColor","borderWidth","PingChart","node","chart","confirmed","Chart","labels","keys","datasets","options","elements","point","legend","scales","xAxes","yAxes","ticks","beginAtZero","padding","top","ref","e","__sum","y","__or","__ensureArray","__condenseDataset","prop","dataset","p","reduce","condenseData","r","forEach","t","condenseDataset","__filterPropValuePair","possiblities","includes","pad","num","size","s","__bigIntegerDisplayFormater","Intl","NumberFormat","bigIntegerDisplay","number","format","__percentageDisplayFormater","maximumSignificantDigits","percentageDisplay","DataPanelTiles","heading","DataPanelTile","children","DataPanelControls","onToggleFilters","onToggleCharts","FilterIcon","viewBox","d","ArrowLeftIcon","DataPanel","condensedData","condensedDataCurrent","currentTime","chartsExpanded","isDataNotEmpty","confirmedValues","recoveredValues","deathsValues","controlHandlers","clsCharts","permuteMapStyles","currentValue","getLiveData","a","fetch","res","json","Dashboard","handleReload","document","location","reload","handleSwitchTheme","handleSetTime","filtered","timestamps","handleSetLive","handleToggleCharts","handleCollapseCharts","handleToggleFilters","filtersExpanded","handleCollapseFilters","handleFilterCountries","filteredRegions","fetched","filterPropValuePair","setTime","unixtime","survey","registeredRegions","trackPromise","__registeredRegions","datapoint","province","country","Set","region","geoData","features","geodataFeatures","latlng","lat","lng","properties","geometry","coordinates","interfaceOutGeoJSON","open","onClose","classNames","modal","center","isMulti","name","defaultValue","date","Date","getDate","getMonth","getFullYear"],"mappings":"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","file":"static/js/5.5b375a0c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './discrete-slider.css';\r\n\r\nconst identity = (x) => x;\r\n\r\nconst removeDuplicates = (array) => (\r\n  array.filter((v, i, self) => self.indexOf(v) === i)\r\n);\r\n\r\nconst filterRange = (array, min, max) => (\r\n  array.filter((x) => x < max).filter((x) => x > min)\r\n);\r\n\r\nconst findSmallestGap = (set) => (\r\n  // assumes an ordered array without duplicate entries\r\n  Math.min(...set.map((x, i) => (\r\n    i === 0 ? set[set.length - 1] : Math.abs(x - set[i - 1])\r\n  )))\r\n);\r\n\r\nconst findClosestPoint1d = (x0, set) => {\r\n  // assumes a number and an ordered array without duplicate entries\r\n  const D = set.map((x) => Math.abs(x - x0));\r\n  return set[D.indexOf(Math.min(...D))];\r\n}\r\n\r\nconst evalSliderMarkerPos = (x) => (\r\n  // x*100 - c\r\n  // where c = 5*(x - .5) is the correction term,\r\n  // the scaled distance from the mid point.\r\n  // =>\r\n  x*100 - 5*(x - .5)\r\n);\r\n\r\nexport default class DiscreteSlider extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    const {\r\n      max = 0,\r\n      min = 100,\r\n      availableValues = [],\r\n      formatValue = identity,\r\n    } = props;\r\n    this.formatValue = formatValue;\r\n    this.availableValues = filterRange(removeDuplicates(availableValues), min, max).sort();\r\n    this.availableValues.unshift(min);\r\n    this.availableValues.push(max);\r\n    this.snapRange = Math.min(\r\n      (max - min) / 25,\r\n      findSmallestGap(this.availableValues) / 2,\r\n    );\r\n    this.state = {\r\n      value: 0,\r\n      isDragging: false,\r\n      isSnapped: false,\r\n    }\r\n  }\r\n  \r\n  onMouseDown = () => {\r\n    this.setState({ isDragging: true });\r\n  }\r\n  \r\n  onMouseUp = () => {\r\n    const { props, state, availableValues } = this;\r\n    let { value } = state;\r\n    value = findClosestPoint1d(value, availableValues);\r\n    props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isDragging: false,\r\n      isSnapped: true,\r\n    });\r\n  }\r\n  \r\n  onChange = ({ target }) => {\r\n    const { props, availableValues, snapRange } = this;\r\n    let { value } = target,\r\n        isSnapped = false;\r\n    for(const option of availableValues) {\r\n      const D = Math.abs(value - option);\r\n      if(D < snapRange) {\r\n        value = option;\r\n        isSnapped = true;\r\n        value = Number(value);\r\n        props.onChange(value);\r\n        break;\r\n      }\r\n    }\r\n    //value = Number(value);\r\n    //props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isSnapped,\r\n    });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if(this.availableValues.length === 2) {\r\n      console.log('Warning: Select has no available values apart from the edges');\r\n    }\r\n    const { props } = this,\r\n          { min, startValue } = props,\r\n          value = findClosestPoint1d(startValue, this.availableValues) || min;\r\n    props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isSnapped: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      props,\r\n      state,\r\n      availableValues,\r\n      formatValue,\r\n      onChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n    } = this;\r\n    const { min, max } = props;\r\n    const { value, isDragging, isSnapped } = state;\r\n    const paramsInput = {\r\n      type: 'range',\r\n      min,\r\n      max,\r\n      value: value || min,\r\n      onChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n      onTouchStart: onMouseDown,\r\n      onTouchEnd: onMouseUp,\r\n    }\r\n    const range = Math.abs(max - min);\r\n    const left = `${evalSliderMarkerPos((value - min) / range)}%`;\r\n    const subclsDragging = isDragging ? 'dragging' : '';\r\n    const subclsSnapped = isSnapped ? 'snapped' : '';\r\n    const cls = `discrete-slider ${subclsDragging}`;\r\n    const paramsThumb = {\r\n      className: 'discrete-slider__thumb',\r\n      style: { left },\r\n    }\r\n    const paramsThumbAnimation = {\r\n      className: `discrete-slider__thumb-animation ${subclsDragging}`,\r\n      style: { left },\r\n    }\r\n    const paramsDisplayValue = {\r\n      className: `discrete-slider__display-value ${subclsSnapped}`,\r\n      style: {\r\n        display: value <= min + this.snapRange || value >= max - this.snapRange ? 'none' : 'block',\r\n        left,\r\n      }\r\n    }\r\n    return(\r\n      <div className={cls}>\r\n        <input {...paramsInput} />\r\n        <div {...paramsThumb}></div>\r\n        <div {...paramsThumbAnimation}></div>\r\n        <div {...paramsDisplayValue}>\r\n          {formatValue(value)}\r\n        </div>\r\n        <div className=\"discrete-slider__markers\">\r\n          {availableValues.map((v, i) => (\r\n            <div\r\n              key={i}\r\n              className=\"discrete-slider__markers__marker\"\r\n              style={{ left: `${evalSliderMarkerPos((v - min) / range)}%` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const circleLayer = {\r\n  id: 'clusters',\r\n  type: 'circle',\r\n  source: 'covid-19',\r\n  paint: {\r\n    'circle-color': [\r\n      'step',\r\n      ['get', 'confirmed'],\r\n      '#03befc', 20,\r\n      '#f1f075', 800,\r\n      '#f28cb1', 5000,\r\n      '#ba1818'\r\n    ],\r\n    'circle-radius': [\r\n      'step',\r\n      ['zoom'], 4, 2, 6, 4, [\r\n        'interpolate',\r\n        ['cubic-bezier', 0, 0.5, 1, 0.5 ],\r\n        ['get', 'confirmed'],\r\n        20,  8,\r\n        5000, 25\r\n      ]\r\n    ],\r\n  }\r\n};\r\n\r\nexport const countLayer = {\r\n  id: 'cluster-count',\r\n  type: 'symbol',\r\n  source: 'covid-19',\r\n  layout: {\r\n    'text-field': ['get', 'confirmed'],\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': ['step', ['zoom'], 0, 4, 11],\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport ReactMapGL, { Source, Layer, NavigationControl } from 'react-map-gl';\r\nimport { circleLayer, countLayer } from './layers-setup';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2lhbm5vdHIiLCJhIjoiY2s3aHFkcDkwMGMzYjNlbzNvMWl4bGFxbyJ9.2p2O5m7aiA6Bn9vjPe7HrQ';\r\n\r\nconst DataMap = ({ data, mapStyle, onClick }) => {\r\n  const [viewport, setViewport] = useState({\r\n    width: '100vw',\r\n    height: '100vh',\r\n    latitude: 45,\r\n    longitude: 10,\r\n    zoom: 4,\r\n  });\r\n\r\n  const mapStyleURI = `mapbox://styles/mapbox/${mapStyle}`;\r\n\r\n  /*\r\n  const clusterParams = {\r\n    cluster: true,\r\n    clusterMaxZoom: 14,\r\n    clusterRadius: 50,\r\n    clusterProperties: { 'cluster_count': ['+', ['case', ['get', 'confirmed'], 1, 0]] },\r\n  }\r\n  */\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      onViewportChange={setViewport}\r\n      mapboxApiAccessToken={MAPBOX_TOKEN}\r\n      mapStyle={mapStyleURI}\r\n      onClick={onClick}\r\n    >\r\n      <Source id=\"covid-19\" type=\"geojson\" data={data}>\r\n        <Layer {...circleLayer} />\r\n        <Layer {...countLayer} />\r\n      </Source>\r\n      <div style={{position: 'absolute', bottom: '45px', right: '20px'}}>\r\n        <NavigationControl />\r\n      </div>\r\n    </ReactMapGL>\r\n  );\r\n}\r\n\r\nexport default DataMap;\r\n","const theme = {\r\n  base: \"16px\",\r\n  spacing: \"1rem\",\r\n  typography: {\r\n    font: {\r\n      sans: 'Jura',\r\n      serif: 'Forum',\r\n    },\r\n    text: \"1rem\",\r\n    title: \"2rem\"\r\n  },\r\n  breakpoint: {\r\n    xs: \"0em\",  /* 0px */\r\n    sm: \"30em\", /* 480px */\r\n    md: \"64em\", /* 1024px */\r\n    lg: \"75em\", /* 1200px */\r\n  },\r\n  color: {\r\n    primary: \"#6d9197\",\r\n    secondary: \"#c4cdc1\",\r\n    tertiary: \"99aead\",\r\n    dark: \"#28364d\",\r\n    light: \"#dee1dd\",\r\n    infected: \"#2f575d\",\r\n    recovered: \"#658b6f\",\r\n    deaths: \"#f8b95f\",\r\n  },\r\n  border: {\r\n    radius: '20px',\r\n    boxShadow: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)',\r\n  },\r\n  lenghts: {\r\n    navigation: {\r\n      offset: '35px',\r\n      height: '90vh',\r\n    },\r\n  }\r\n}\r\n\r\nexport default theme;\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport theme from '../../theme/theme';\r\n\r\n// TODO: data only til currentTime index\r\nconst generateDataset = (label, data, color) => {\r\n  return({\r\n    label,\r\n    data: Object.values(data),\r\n    borderColor: color,\r\n    backgroundColor: 'transparent',\r\n    borderWidth: 2,\r\n  })\r\n}\r\n\r\nexport default class PingChart extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.node = null;\r\n    this.chart = null;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const { data } = this.props,\r\n          { confirmed, recovered, deaths } = data;\r\n    this.chart = new Chart(this.node, {\r\n      type: 'line',\r\n      data: {\r\n        labels: Object.keys(confirmed),\r\n        datasets: [\r\n          generateDataset('Confirmed', confirmed, theme.color.infected),\r\n          generateDataset('Recovered', recovered, theme.color.recovered),\r\n          generateDataset('Deaths', deaths, theme.color.deaths),\r\n        ]\r\n      },\r\n      options: {\r\n        elements: {\r\n          point: { radius: 0 },\r\n        },\r\n        legend: { display: false },\r\n        scales: {\r\n          xAxes: [{ display: false }],\r\n          yAxes: [{\r\n            display: false,\r\n            ticks: {\r\n              beginAtZero: true,\r\n            }\r\n          }]\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: 25,\r\n            right: 25,\r\n            top: 40,\r\n            bottom: 40,\r\n          },\r\n        },\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return <canvas ref={e => this.node = e} />;\r\n  }\r\n}\r\n","const __sum = (x, y) => x + y;\r\nconst __or = (x, y) => x || y;\r\nconst __ensureArray = (x) => {\r\n  if(typeof x !== 'object') {\r\n    x = [x];\r\n  }\r\n  return x;\r\n}\r\nconst __includesArray = (array, possiblities) => (\r\n  !!array ? possiblities.map(p => array.includes(p)).reduce(__or, false) : true\r\n)\r\n\r\n// B.F. TODO: Add tests!\r\n\r\nconst __condenseDataset = (prop, dataset) => (\r\n  !!prop ? dataset.map(p => p[prop]).reduce(__sum, 0) : 0\r\n);\r\n\r\nexport const condenseDataset = (props, dataset) => {\r\n  if(typeof props === 'object') {\r\n    return props.map(p => __condenseDataset(p, dataset)).reduce(__sum, 0);\r\n  } else {\r\n    return __condenseDataset(props, dataset);\r\n  }\r\n}\r\n\r\nexport const condenseData = (props, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = condenseDataset(props, data[t])\r\n  });\r\n  return r;\r\n}\r\n\r\nconst __filterProps = (props, dataset) => {\r\n  props = __ensureArray(props);\r\n  return dataset.map(p => Object.keys(p)\r\n    .filter(key => props.includes(key))\r\n    .reduce((obj, key) => {\r\n      obj[key] = p[key];\r\n      return obj;\r\n    }, {}));\r\n}\r\n\r\nexport const filterProps = (props, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = __filterProps(props, data[t])\r\n  });\r\n  return r;\r\n}\r\n\r\nconst __filterPropValuePair = (props, values, dataset) => (\r\n  dataset.filter(\r\n    p => __includesArray(values, __ensureArray(props).map(x => p[x]))\r\n  )\r\n);\r\n\r\nexport const filterPropValuePair = (props, values, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = __filterPropValuePair(props, values, data[t])\r\n  });\r\n  return r;\r\n}\r\n","export const pad = (num, size) => {\r\n  let s = num + '';\r\n  while(s.length < size) s = '0' + s;\r\n  return s;\r\n}\r\n\r\nconst __bigIntegerDisplayFormater = new Intl.NumberFormat('en-US');\r\n\r\nexport const bigIntegerDisplay = (number) => (\r\n  __bigIntegerDisplayFormater.format(number)\r\n);\r\n\r\nconst __percentageDisplayFormater = new Intl.NumberFormat(\r\n  'en-IN', { maximumSignificantDigits: 3 }\r\n);\r\n\r\nexport const percentageDisplay = (number) => (\r\n  __percentageDisplayFormater.format(number)\r\n);\r\n\r\nexport const dateString = (date) => (\r\n  `${pad(date.getMonth() + 1, 2)}-${pad(date.getDate(), 2)}-${date.getFullYear()}`\r\n);\r\n\r\nexport const dateDisplay = (date) => (\r\n  `${pad(date.getDate(), 2)}.${pad(date.getMonth() + 1, 2)}.${date.getFullYear()}`\r\n);\r\n","import React, { Fragment } from 'react';\r\nimport DataChart from './data-chart';\r\nimport { condenseData } from '../../utilities/data-mutations';\r\nimport { bigIntegerDisplay, percentageDisplay } from '../../utilities/formatting';\r\nimport './data-panel.css';\r\n\r\nconst DataPanel = (props) => {\r\n  const {\r\n    data,\r\n    currentTime,\r\n    chartsExpanded,\r\n    onToggleFilters,\r\n    onToggleCharts,\r\n  } = props;\r\n  const isDataNotEmpty = !!Object.keys(data).length;\r\n  let condensedData, condensedDataCurrent;\r\n  if(isDataNotEmpty) {\r\n    const confirmedValues = condenseData('confirmed', data),\r\n          recoveredValues = condenseData('recovered', data),\r\n          deathsValues = condenseData('deaths', data);\r\n    condensedData = {\r\n      confirmed: {...confirmedValues},\r\n      recovered: {...recoveredValues},\r\n      deaths: {...deathsValues},\r\n    }\r\n    condensedDataCurrent = {\r\n      confirmed: confirmedValues[currentTime],\r\n      recovered: recoveredValues[currentTime],\r\n      deaths: deathsValues[currentTime],\r\n    }\r\n  }\r\n  const controlHandlers = { onToggleFilters, onToggleCharts }\r\n  const clsCharts = `charts-container ${chartsExpanded ? 'expanded' : ''}`\r\n  return(\r\n    <Fragment>\r\n      <div className=\"data-panel\">\r\n        {isDataNotEmpty && <DataPanelTiles {...condensedDataCurrent} />}\r\n        <DataPanelControls {...controlHandlers} />\r\n      </div>\r\n      <div className={clsCharts}>\r\n        {isDataNotEmpty && <DataChart data={condensedData} />}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst DataPanelTiles = ({ confirmed, deaths, recovered }) => {\r\n  return(\r\n    <Fragment>\r\n      <DataPanelTile cls=\"confirmed\" heading=\"Confirmed\">\r\n        {bigIntegerDisplay(confirmed)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"recovered\" heading=\"Recovered\">\r\n        {bigIntegerDisplay(recovered)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"deaths\" heading=\"Deaths\">\r\n        {bigIntegerDisplay(deaths)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"computations\" heading=\"Computations\">\r\n        <div>\r\n          Active cases: {bigIntegerDisplay(confirmed - deaths - recovered)}\r\n        </div>\r\n        <div>\r\n          Recover rate: {`${percentageDisplay(recovered / confirmed * 100)}%`}\r\n        </div>\r\n        <div>\r\n          Mortality rate: {`${percentageDisplay(deaths / confirmed * 100)}%`}\r\n        </div>\r\n      </DataPanelTile>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst DataPanelTile = ({ cls, heading, children }) => {\r\n  cls = `data-panel__tile ${cls}`;\r\n  return(\r\n    <div className={cls}>\r\n      <div className=\"data-panel__tile__heading\">{heading}</div>\r\n      <div className=\"data-panel__tile__content\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DataPanelControls = ({ onToggleFilters, onToggleCharts }) => {\r\n  return(\r\n    <div className=\"data-panel__controls\">\r\n      <span onClick={onToggleFilters}>\r\n        <FilterIcon />\r\n      </span>\r\n      <span onClick={onToggleCharts}>\r\n        <ArrowLeftIcon />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\nconst LiveDataComputations = ({\r\n  confirmed, deaths, recovered, children\r\n}) => {\r\n  return(\r\n    <div className=\"data-panel-computations__block\">\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"data-panel-computations__metric-key\">\r\n          Active cases:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          {bigIntegerDisplay(confirmed - deaths - recovered)}\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"live-data-panel-computations__metric-key\">\r\n          Recover rate:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          {`${percentageDisplay(recovered / confirmed * 100)}%`}\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"data-panel-computations__metric-key\">\r\n          Mortality rate:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          <span className=\"data-panel-computations__fatal\">\r\n            {`${percentageDisplay(deaths / confirmed * 100)}%`}\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__block-description\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nconst FilterIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M1 0l9 15.094v5.906l4 3v-8.906l9-15.094h-22zm18.479 2l-2.981 5h-8.996l-2.981-5h14.958z\" />\r\n  </svg>\r\n);\r\n\r\nconst ArrowLeftIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M24 11.871l-5-4.871v3h-19v4h19v3z\" />\r\n  </svg>\r\n);\r\n\r\nexport default DataPanel;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { usePromiseTracker, trackPromise } from 'react-promise-tracker';\r\nimport Modal from 'react-responsive-modal';\r\nimport Select from 'react-select';\r\nimport DiscreteSlider from './components/discrete-slider/discrete-slider';\r\nimport DataMap from './components/data-map/data-map';\r\nimport DataPanel from './components/data-panel/data-panel';\r\n//import { CircularLoader } from './components/loader/loader';\r\nimport { filterPropValuePair } from './utilities/data-mutations';\r\nimport { dateDisplay } from './utilities/formatting';\r\nimport { interfaceOutGeoJSON } from './utilities/interfaces';\r\nimport './dashboard.css';\r\n\r\n//import __DATA__MOCKUP from './data-mockup';\r\n\r\n// deprecated\r\n//const __FIRST__DATARECORD = new Date('01-30-2020').getTime();\r\n\r\nconst __PROXY = 'https://cors-anywhere.herokuapp.com/';\r\n\r\nconst __SATELLITE = 'satellite-v9';\r\nconst __LIGHTMODE = 'light-v10';\r\nconst __DARKMODE = 'dark-v10';\r\nconst __STREETS = 'streets-v11';\r\n\r\nconst permuteMapStyles = (currentValue) => {\r\n  switch(currentValue) {\r\n    case __SATELLITE:\r\n      return __LIGHTMODE;\r\n    case __LIGHTMODE:\r\n      return __DARKMODE;\r\n    case __DARKMODE:\r\n      return __STREETS;\r\n    case __STREETS:\r\n      return __SATELLITE;\r\n    default:\r\n      console.log(`Sorry, the style '${currentValue}' doesn't exist.`);\r\n  }\r\n}\r\n\r\nconst getLiveData = async () => {\r\n  const res = await fetch(\r\n    `${__PROXY}http://nodejs-express-app-yadii.eu-gb.mybluemix.net/getOfficialData`\r\n  );\r\n  const data = await res.json();\r\n  return data;\r\n}\r\n\r\n/*\r\nconst LoadingIndicator = () => {\r\n  const { promiseInProgress } = usePromiseTracker({ delay: 250 });\r\n  return(promiseInProgress && <CircularLoader />);  \r\n}\r\n*/\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      mapStyle: __DARKMODE,\r\n      data: {\r\n        fetched: {},\r\n        filtered: {},\r\n      },\r\n      survey: {},\r\n      currentTime: 0,\r\n      filteredRegions: [],\r\n      chartsExpanded: false,\r\n      filtersExpanded: false,\r\n    }\r\n    this.registeredRegions = [];\r\n  }\r\n\r\n  handleReload = () => {\r\n    document.location.reload();\r\n  }\r\n\r\n  handleSwitchTheme = () => {\r\n    const { mapStyle } = this.state;\r\n    this.setState({ mapStyle: permuteMapStyles(mapStyle) });\r\n  }\r\n\r\n  handleSetTime = (value) => {\r\n    const { data: {filtered} } = this.state;\r\n    const timestamps = Object.keys(filtered);\r\n    this.setState({ currentTime: Number(value) + Number(timestamps[0]) });\r\n  }\r\n\r\n  handleSetLive = () => {\r\n    const { data: {filtered} } = this.state;\r\n    const timestamps = Object.keys(filtered);\r\n    //evaluate the closest timestamp to current time\r\n    /*\r\n    const now = Date.now();\r\n    const D = timestamps.map(timestamp => Math.abs(timestamp - now));\r\n    const i = D.indexOf(Math.min(...D));\r\n    */\r\n   // or just grab the last recorded timestamp...\r\n    this.setState({\r\n      currentTime: timestamps[timestamps.length - 1],\r\n    });\r\n  }\r\n\r\n  handleToggleCharts = () => {\r\n    this.setState({\r\n      chartsExpanded: !this.state.chartsExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapseCharts = () => {\r\n    this.setState({ chartsExpanded: false });\r\n  }\r\n\r\n  handleToggleFilters = () => {\r\n    this.setState({\r\n      filtersExpanded: !this.state.filtersExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapseFilters = () => {\r\n    this.setState({ filtersExpanded: false });\r\n  }\r\n\r\n  handleFilterCountries = (filteredRegions) => {\r\n    this.setState({ filteredRegions });\r\n    let { data } = this.state;\r\n    const { fetched } = data;\r\n    if(!!filteredRegions && filteredRegions.length > 0) {\r\n      // filteredRegions come as an object { value: ..., label: ... }\r\n      filteredRegions = filteredRegions.map(r => r.value);\r\n      data.filtered = filterPropValuePair(['province', 'country'], filteredRegions, fetched);\r\n    } else {\r\n      data.filtered = data.fetched;\r\n    }\r\n    this.setState({ data });\r\n  }\r\n\r\n  setTime = (unixtime) => {\r\n    this.setState({\r\n      currentTime: unixtime,\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await trackPromise(getLiveData());\r\n    const timestamps = Object.keys(data);\r\n    const currentTime = Number(timestamps[timestamps.length - 1]);\r\n    this.setState({\r\n      data: {\r\n        fetched: data,\r\n        filtered: data,\r\n        currentTime,\r\n      }\r\n    });\r\n    const __registeredRegions = [\r\n      ...data[currentTime].map(datapoint => datapoint.province).filter(province => !!province),\r\n      ...data[currentTime].map(datapoint => datapoint.country)\r\n    ];\r\n    this.registeredRegions = [...new Set(__registeredRegions)].map(\r\n      region => ({ value: region, label: region })\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      state,\r\n      registeredRegions,\r\n      handleFilterCountries,\r\n      handleSetTime,\r\n      handleToggleCharts,\r\n      handleCollapseCharts,\r\n      handleToggleFilters,\r\n      handleCollapseFilters,\r\n    } = this;\r\n    const {\r\n      mapStyle,\r\n      data: {filtered},\r\n      //survey,\r\n      currentTime,\r\n      filteredRegions,\r\n      chartsExpanded,\r\n      filtersExpanded,\r\n    } = state;\r\n  \r\n    const timestamps = Object.keys(filtered);\r\n    const geoData = interfaceOutGeoJSON(filtered[currentTime]);\r\n    \r\n    return(\r\n      <Fragment>\r\n        <Modal\r\n          open={filtersExpanded}\r\n          onClose={handleCollapseFilters}\r\n          classNames={{ modal: 'modal-filters' }}\r\n          center\r\n        >\r\n          <h2>Data filters</h2>\r\n          <div className=\"filter-label\">Country</div>\r\n          <Select\r\n            isMulti\r\n            name=\"countries\"\r\n            options={registeredRegions}\r\n            defaultValue={filteredRegions}\r\n            onChange={handleFilterCountries}\r\n          />\r\n          <div className=\"filter-label\">Time</div>\r\n          <DiscreteSlider\r\n            min={0}\r\n            max={timestamps[timestamps.length - 1] - timestamps[0]}\r\n            availableValues={timestamps.map(t => t - timestamps[0])}\r\n            startValue={currentTime - timestamps[0]}\r\n            onChange={handleSetTime}\r\n            formatValue={(v) => dateDisplay(new Date(v + Number(timestamps[0])))}\r\n          />\r\n        </Modal>\r\n        {filtered && <DataPanel\r\n          data={filtered}\r\n          currentTime={currentTime}\r\n          chartsExpanded={chartsExpanded}\r\n          onToggleFilters={handleToggleFilters}\r\n          onToggleCharts={handleToggleCharts}\r\n        />}\r\n        {geoData && <DataMap\r\n          data={geoData}\r\n          mapStyle={mapStyle}\r\n          onClick={handleCollapseCharts}\r\n        />}\r\n      </Fragment>\r\n    );\r\n  }\r\n}","export const interfaceOutGeoJSON = (dataset) => {\r\n  let geoData = {\r\n    type: 'FeatureCollection',\r\n    features: [],\r\n  }\r\n  if(dataset) {\r\n    let geodataFeatures = [];\r\n    for(const point of dataset){\r\n      const {\r\n        province,\r\n        country,\r\n        confirmed,\r\n        recovered,\r\n        deaths,\r\n        latlng,\r\n      } = point;\r\n      const [ lat, lng ] = latlng;\r\n      geodataFeatures.push({\r\n        type: 'Feature',\r\n        properties: {\r\n          province,\r\n          country,\r\n          confirmed: Number(confirmed),\r\n          recovered: Number(recovered),\r\n          deaths: Number(deaths),\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [Number(lng), Number(lat)],\r\n        }\r\n      });\r\n    }\r\n    geoData.features = geodataFeatures;\r\n  }\r\n  return geoData;\r\n}\r\n"],"sourceRoot":""}