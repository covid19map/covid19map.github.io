{"version":3,"sources":["components/discrete-slider/discrete-slider.js","components/data-map/layers-setup.js","components/data-map/data-map.js","utilities/formatting.js","theme/theme.js","components/data-panel/data-chart.js","components/loader/loader.js","utilities/data-mutations.js","components/data-panel/data-panel.js","Dashboard.js","utilities/interfaces.js","components/navigation/navigation.js","App.js","serviceWorker.js","index.js"],"names":["identity","x","findClosestPoint1d","x0","set","D","map","Math","abs","indexOf","min","evalSliderMarkerPos","DiscreteSlider","props","onMouseDown","setState","isDragging","onMouseUp","state","availableValues","value","onChange","isSnapped","target","snapRange","option","Number","array","max","formatValue","filter","filterRange","v","i","self","sort","unshift","push","length","this","console","log","startValue","paramsInput","type","onTouchStart","onTouchEnd","range","left","subclsDragging","subclsSnapped","cls","paramsThumb","className","style","paramsThumbAnimation","paramsDisplayValue","display","key","Component","circleLayer","id","source","paint","countLayer","layout","DataMap","container","data","mapStyle","onClick","useState","width","height","latitude","longitude","zoom","viewport","setViewport","mapStyleURI","onViewportChange","mapboxApiAccessToken","position","bottom","right","pad","num","size","s","__bigIntegerDisplayFormater","Intl","NumberFormat","bigIntegerDisplay","number","format","__percentageDisplayFormater","maximumSignificantDigits","percentageDisplay","dateDisplay","date","getDate","getMonth","getFullYear","theme","base","spacing","typography","font","sans","serif","text","title","breakpoint","xs","sm","md","lg","color","primary","secondary","tertiary","dark","light","infected","recovered","deaths","border","radius","boxShadow","lenghts","navigation","offset","generateDataset","label","Object","values","borderColor","backgroundColor","borderWidth","chartSetup","elements","point","legend","scales","xAxes","yAxes","ticks","beginAtZero","padding","top","PingChart","procData","confirmed","labels","keys","t","Date","datasets","redraw","chart","update","node","Chart","options","prevProps","isEqual","ref","e","CircularLoader","MainLoader","Array","__sum","y","__or","__ensureArray","__condenseDataset","prop","dataset","p","reduce","condenseData","r","forEach","condenseDataset","filterOrderedProps","threshhold","fromEntries","entries","__filterPropValuePair","possiblities","includes","DataPanelTiles","heading","DataPanelTile","children","DataPanelControls","onToggleFilters","onToggleCharts","FilterIcon","viewBox","d","ArrowLeftIcon","GithubIcon","DataPanel","condensedDataCurrent","condensedDataConfined","currentTime","chartsExpanded","isDataNotEmpty","confirmedValues","recoveredValues","deathsValues","controlHandlers","clsCharts","href","rel","permuteMapStyles","currentValue","Dashboard","handleReload","document","location","reload","handleSwitchTheme","handleSetTime","filtered","timestamps","handleToggleCharts","handleCollapseCharts","handleToggleFilters","filtersExpanded","handleCollapseFilters","handleFilterCountries","filteredRegions","fetched","filterPropValuePair","setTime","unixtime","survey","registeredRegions","mapNode","__registeredCountries","Set","datapoint","country","region","__registeredProvinces","province","timeBegin","timeEnd","geoData","features","geodataFeatures","latlng","lat","lng","properties","geometry","coordinates","interfaceOutGeoJSON","open","onClose","classNames","modal","overlay","center","isMulti","name","defaultValue","Navigation","handleToggle","isExpanded","handleCollapse","clsNav","clsToggle","to","__setActive","isCurrent","NavList","c","getProps","NavLink","MenuIcon","HomeIcon","TableIcon","SurveyIcon","ContactIcon","ImprintIcon","getRecordedData","a","fetch","res","json","genLazyRoute","routeModule","timeMin","Promise","all","resolve","setTimeout","then","DataTable","lazy","Survey","DataLoadingIndicator","usePromiseTracker","delay","promiseInProgress","App","trackPromise","latestData","fallback","path","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e833edc3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './discrete-slider.css';\r\n\r\nconst identity = (x) => x;\r\n\r\nconst removeDuplicates = (array) => (\r\n  array.filter((v, i, self) => self.indexOf(v) === i)\r\n);\r\n\r\nconst filterRange = (array, min, max) => (\r\n  array.filter((x) => x < max).filter((x) => x > min)\r\n);\r\n\r\nconst findSmallestGap = (set) => (\r\n  // assumes an ordered array without duplicate entries\r\n  Math.min(...set.map((x, i) => (\r\n    i === 0 ? set[set.length - 1] : Math.abs(x - set[i - 1])\r\n  )))\r\n);\r\n\r\nconst findClosestPoint1d = (x0, set) => {\r\n  // assumes a number and an ordered array without duplicate entries\r\n  const D = set.map((x) => Math.abs(x - x0));\r\n  return set[D.indexOf(Math.min(...D))];\r\n}\r\n\r\nconst evalSliderMarkerPos = (x) => (\r\n  // x*100 - c\r\n  // where c = 5*(x - .5) is the correction term,\r\n  // the scaled distance from the mid point.\r\n  // =>\r\n  x*100 - 5*(x - .5)\r\n);\r\n\r\nexport default class DiscreteSlider extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    const {\r\n      max = 0,\r\n      min = 100,\r\n      availableValues = [],\r\n      formatValue = identity,\r\n    } = props;\r\n    this.formatValue = formatValue;\r\n    this.availableValues = filterRange(removeDuplicates(availableValues), min, max).sort();\r\n    this.availableValues.unshift(min);\r\n    this.availableValues.push(max);\r\n    this.snapRange = Math.min(\r\n      (max - min) / 25,\r\n      findSmallestGap(this.availableValues) / 2,\r\n    );\r\n    this.state = {\r\n      value: 0,\r\n      isDragging: false,\r\n      isSnapped: false,\r\n    }\r\n  }\r\n  \r\n  onMouseDown = () => {\r\n    this.setState({ isDragging: true });\r\n  }\r\n  \r\n  onMouseUp = () => {\r\n    const { props, state, availableValues } = this;\r\n    let { value } = state;\r\n    value = findClosestPoint1d(value, availableValues);\r\n    props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isDragging: false,\r\n      isSnapped: true,\r\n    });\r\n  }\r\n  \r\n  onChange = ({ target }) => {\r\n    const { props, availableValues, snapRange } = this;\r\n    let { value } = target,\r\n        isSnapped = false;\r\n    for(const option of availableValues) {\r\n      const D = Math.abs(value - option);\r\n      if(D < snapRange) {\r\n        value = option;\r\n        isSnapped = true;\r\n        value = Number(value);\r\n        props.onChange(value);\r\n        break;\r\n      }\r\n    }\r\n    //value = Number(value);\r\n    //props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isSnapped,\r\n    });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if(this.availableValues.length === 2) {\r\n      console.log('Warning: Select has no available values apart from the edges');\r\n    }\r\n    const { props } = this,\r\n          { min, startValue } = props,\r\n          value = findClosestPoint1d(startValue, this.availableValues) || min;\r\n    props.onChange(value);\r\n    this.setState({\r\n      value,\r\n      isSnapped: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      props,\r\n      state,\r\n      availableValues,\r\n      formatValue,\r\n      onChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n    } = this;\r\n    const { min, max } = props;\r\n    const { value, isDragging, isSnapped } = state;\r\n    const paramsInput = {\r\n      type: 'range',\r\n      min,\r\n      max,\r\n      value: value || min,\r\n      onChange,\r\n      onMouseDown,\r\n      onMouseUp,\r\n      onTouchStart: onMouseDown,\r\n      onTouchEnd: onMouseUp,\r\n    }\r\n    const range = Math.abs(max - min);\r\n    const left = `${evalSliderMarkerPos((value - min) / range)}%`;\r\n    const subclsDragging = isDragging ? 'dragging' : '';\r\n    const subclsSnapped = isSnapped ? 'snapped' : '';\r\n    const cls = `discrete-slider ${subclsDragging}`;\r\n    const paramsThumb = {\r\n      className: 'discrete-slider__thumb',\r\n      style: { left },\r\n    }\r\n    const paramsThumbAnimation = {\r\n      className: `discrete-slider__thumb-animation ${subclsDragging}`,\r\n      style: { left },\r\n    }\r\n    const paramsDisplayValue = {\r\n      className: `discrete-slider__display-value ${subclsSnapped}`,\r\n      style: {\r\n        display: value <= min + this.snapRange || value >= max - this.snapRange ? 'none' : 'block',\r\n        left,\r\n      }\r\n    }\r\n    return(\r\n      <div className={cls}>\r\n        <input {...paramsInput} />\r\n        <div {...paramsThumb}></div>\r\n        <div {...paramsThumbAnimation}></div>\r\n        <div {...paramsDisplayValue}>\r\n          {formatValue(value)}\r\n        </div>\r\n        <div className=\"discrete-slider__markers\">\r\n          {availableValues.map((v, i) => (\r\n            <div\r\n              key={i}\r\n              className=\"discrete-slider__markers__marker\"\r\n              style={{ left: `${evalSliderMarkerPos((v - min) / range)}%` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const circleLayer = {\r\n  id: 'clusters',\r\n  type: 'circle',\r\n  source: 'covid-19',\r\n  paint: {\r\n    'circle-color': [\r\n      'step',\r\n      ['get', 'confirmed'],\r\n      '#03befc', 20,\r\n      '#f1f075', 800,\r\n      '#f28cb1', 5000,\r\n      '#ba1818'\r\n    ],\r\n    'circle-radius': [\r\n      'step',\r\n      ['zoom'], 4, 2, 6, 4, [\r\n        'interpolate',\r\n        ['cubic-bezier', 0, 0.5, 1, 0.5 ],\r\n        ['get', 'confirmed'],\r\n        20,  8,\r\n        5000, 25\r\n      ]\r\n    ],\r\n  }\r\n};\r\n\r\nexport const countLayer = {\r\n  id: 'cluster-count',\r\n  type: 'symbol',\r\n  source: 'covid-19',\r\n  layout: {\r\n    'text-field': ['get', 'confirmed'],\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': ['step', ['zoom'], 0, 4, 11],\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport ReactMapGL, { Source, Layer, NavigationControl } from 'react-map-gl';\r\nimport { circleLayer, countLayer } from './layers-setup';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2lhbm5vdHIiLCJhIjoiY2s3aHFkcDkwMGMzYjNlbzNvMWl4bGFxbyJ9.2p2O5m7aiA6Bn9vjPe7HrQ';\r\n\r\nconst DataMap = ({ container, data, mapStyle, onClick }) => {\r\n  const [viewport, setViewport] = useState({\r\n    width: '100vw',\r\n    height: '100vh',\r\n    latitude: 45,\r\n    longitude: 10,\r\n    zoom: 4,\r\n  });\r\n\r\n  const mapStyleURI = `mapbox://styles/mapbox/${mapStyle}`;\r\n\r\n  /*\r\n  const clusterParams = {\r\n    cluster: true,\r\n    clusterMaxZoom: 14,\r\n    clusterRadius: 50,\r\n    clusterProperties: { 'cluster_count': ['+', ['case', ['get', 'confirmed'], 1, 0]] },\r\n  }\r\n  */\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      container={container}\r\n      onViewportChange={setViewport}\r\n      mapboxApiAccessToken={MAPBOX_TOKEN}\r\n      mapStyle={mapStyleURI}\r\n      onClick={onClick}\r\n    >\r\n      <Source id=\"covid-19\" type=\"geojson\" data={data}>\r\n        <Layer {...circleLayer} />\r\n        <Layer {...countLayer} />\r\n      </Source>\r\n      <div style={{position: 'absolute', bottom: '45px', right: '20px'}}>\r\n        <NavigationControl />\r\n      </div>\r\n    </ReactMapGL>\r\n  );\r\n}\r\n\r\nexport default DataMap;\r\n","export const pad = (num, size) => {\r\n  let s = num + '';\r\n  while(s.length < size) s = '0' + s;\r\n  return s;\r\n}\r\n\r\nconst __bigIntegerDisplayFormater = new Intl.NumberFormat('en-US');\r\n\r\nexport const bigIntegerDisplay = (number) => (\r\n  __bigIntegerDisplayFormater.format(number)\r\n);\r\n\r\nconst __percentageDisplayFormater = new Intl.NumberFormat(\r\n  'en-IN', { maximumSignificantDigits: 3 }\r\n);\r\n\r\nexport const percentageDisplay = (number) => (\r\n  __percentageDisplayFormater.format(number)\r\n);\r\n\r\nexport const dateString = (date) => (\r\n  `${pad(date.getMonth() + 1, 2)}-${pad(date.getDate(), 2)}-${date.getFullYear()}`\r\n);\r\n\r\nexport const dateDisplay = (date) => (\r\n  `${pad(date.getDate(), 2)}.${pad(date.getMonth() + 1, 2)}.${date.getFullYear()}`\r\n);\r\n","const theme = {\r\n  base: \"16px\",\r\n  spacing: \"1rem\",\r\n  typography: {\r\n    font: {\r\n      sans: 'Jura',\r\n      serif: 'Forum',\r\n    },\r\n    text: \"1rem\",\r\n    title: \"2rem\"\r\n  },\r\n  breakpoint: {\r\n    xs: \"0em\",  /* 0px */\r\n    sm: \"30em\", /* 480px */\r\n    md: \"64em\", /* 1024px */\r\n    lg: \"75em\", /* 1200px */\r\n  },\r\n  color: {\r\n    primary: \"#6d9197\",\r\n    secondary: \"#c4cdc1\",\r\n    tertiary: \"99aead\",\r\n    dark: \"#28364d\",\r\n    light: \"#dee1dd\",\r\n    infected: \"#2f575d\",\r\n    recovered: \"#658b6f\",\r\n    deaths: \"#f8b95f\",\r\n  },\r\n  border: {\r\n    radius: '20px',\r\n    boxShadow: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)',\r\n  },\r\n  lenghts: {\r\n    navigation: {\r\n      offset: '35px',\r\n      height: '90vh',\r\n    },\r\n  }\r\n}\r\n\r\nexport default theme;\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { isEqual } from 'lodash';\r\nimport { dateDisplay } from '../../utilities/formatting';\r\nimport theme from '../../theme/theme';\r\n\r\n// TODO: draw only filtered data\r\nconst generateDataset = (label, data, color) => {\r\n  return({\r\n    label,\r\n    data: Object.values(data),\r\n    borderColor: color,\r\n    backgroundColor: 'transparent',\r\n    borderWidth: 2,\r\n  })\r\n}\r\n\r\nconst chartSetup = {\r\n  elements: {\r\n    point: { radius: 0 },\r\n  },\r\n  legend: { display: false },\r\n  scales: {\r\n    xAxes: [{ display: false }],\r\n    yAxes: [{\r\n      display: false,\r\n      ticks: {\r\n        beginAtZero: true,\r\n      }\r\n    }]\r\n  },\r\n  layout: {\r\n    padding: {\r\n      left: 25,\r\n      right: 25,\r\n      top: 40,\r\n      bottom: 40,\r\n    },\r\n  },\r\n}\r\n\r\nexport default class PingChart extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n    }\r\n    this.node = null;\r\n    this.chart = null;\r\n  }\r\n\r\n  procData = () => {\r\n    const { data } = this.props,\r\n          { confirmed, recovered, deaths } = data,\r\n          labels = Object.keys(confirmed).map(t => dateDisplay(new Date(t))),\r\n          datasets = [\r\n            generateDataset('Confirmed', confirmed, theme.color.infected),\r\n            generateDataset('Recovered', recovered, theme.color.recovered),\r\n            generateDataset('Deaths', deaths, theme.color.deaths),\r\n          ];\r\n    return { labels, datasets }\r\n  }\r\n\r\n  redraw = () => {\r\n    const { chart, procData } = this;\r\n    chart.data = procData();\r\n    chart.update();\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const { node, procData } = this;\r\n    this.chart = new Chart(node, {\r\n      type: 'line',\r\n      data: procData(),\r\n      options: chartSetup,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { props, state, redraw } = this;\r\n    if(prevProps !== props && !isEqual(state.data, props.data)) {\r\n      redraw();\r\n      this.setState({\r\n        data: props.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return <canvas ref={e => this.node = e} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst MainLoader = () => {\r\n  return(\r\n    <div className=\"loader-wrapper\">\r\n      <div className=\"loader-title\">CORONAhub</div>\r\n      <div className=\"loader\">\r\n        {[...Array(25).keys()].map((key) => <div key={key}></div>)}\r\n      </div>\r\n\t  </div>\r\n  );\r\n}\r\n\r\nexport const CircularLoader = () => {\r\n  return(\r\n    <div className=\"circular-loader\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainLoader;\r\n","const __sum = (x, y) => x + y;\r\nconst __or = (x, y) => x || y;\r\nconst __ensureArray = (x) => {\r\n  if(typeof x !== 'object') {\r\n    x = [x];\r\n  }\r\n  return x;\r\n}\r\nconst __includesArray = (array, possiblities) => (\r\n  !!array ? possiblities.map(p => array.includes(p)).reduce(__or, false) : true\r\n)\r\n\r\n// TODO: make function names more expressive\r\n// B.F. TODO: Add tests!\r\n\r\nconst __condenseDataset = (prop, dataset) => (\r\n  !!prop ? dataset.map(p => p[prop]).reduce(__sum, 0) : 0\r\n);\r\n\r\nexport const condenseDataset = (props, dataset) => {\r\n  if(typeof props === 'object') {\r\n    return props.map(p => __condenseDataset(p, dataset)).reduce(__sum, 0);\r\n  } else {\r\n    return __condenseDataset(props, dataset);\r\n  }\r\n}\r\n\r\nexport const condenseData = (props, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = condenseDataset(props, data[t])\r\n  });\r\n  return r;\r\n}\r\n\r\nconst __filterProps = (props, dataset) => {\r\n  props = __ensureArray(props);\r\n  return dataset.map(p => Object.keys(p)\r\n    .filter(key => props.includes(key))\r\n    .reduce((obj, key) => {\r\n      obj[key] = p[key];\r\n      return obj;\r\n    }, {}));\r\n}\r\n\r\nexport const filterProps = (props, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = __filterProps(props, data[t])\r\n  });\r\n  return r;\r\n}\r\n\r\nexport const filterOrderedProps = (threshhold, data) => (\r\n  Object.fromEntries(Object.entries(data).filter(x => x[0] <= threshhold))\r\n);\r\n\r\nconst __filterPropValuePair = (props, values, dataset) => (\r\n  dataset.filter(\r\n    p => __includesArray(values, __ensureArray(props).map(x => p[x]))\r\n  )\r\n);\r\n\r\nexport const filterPropValuePair = (props, values, data) => {\r\n  const r = {}\r\n  Object.keys(data).forEach(t => {\r\n    r[t] = __filterPropValuePair(props, values, data[t])\r\n  });\r\n  return r;\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport DataChart from './data-chart';\r\nimport { CircularLoader } from '../loader/loader';\r\nimport { condenseData, filterOrderedProps } from '../../utilities/data-mutations';\r\nimport { bigIntegerDisplay, percentageDisplay } from '../../utilities/formatting';\r\nimport './data-panel.css';\r\n\r\nconst DataPanel = (props) => {\r\n  const {\r\n    data,\r\n    currentTime,\r\n    chartsExpanded,\r\n    onToggleFilters,\r\n    onToggleCharts,\r\n  } = props;\r\n  const isDataNotEmpty = !!Object.keys(data).length;\r\n  let condensedDataCurrent, condensedDataConfined;\r\n  if(isDataNotEmpty) {\r\n    const confirmedValues = condenseData('confirmed', data),\r\n          recoveredValues = condenseData('recovered', data),\r\n          deathsValues = condenseData('deaths', data);\r\n    condensedDataCurrent = {\r\n      confirmed: confirmedValues[currentTime],\r\n      recovered: recoveredValues[currentTime],\r\n      deaths: deathsValues[currentTime],\r\n    }\r\n    condensedDataConfined = {\r\n      confirmed: filterOrderedProps(currentTime, confirmedValues),\r\n      recovered: filterOrderedProps(currentTime, recoveredValues),\r\n      deaths: filterOrderedProps(currentTime, deathsValues),\r\n    };\r\n  }\r\n  const controlHandlers = { onToggleFilters, onToggleCharts }\r\n  const clsCharts = `charts-container ${chartsExpanded ? 'expanded' : ''}`\r\n  return(\r\n    <Fragment>\r\n      <div className=\"data-panel\">\r\n        {isDataNotEmpty ?\r\n          <Fragment>\r\n            <DataPanelTiles {...condensedDataCurrent} />\r\n            <DataPanelControls {...controlHandlers} />\r\n          </Fragment>\r\n          :\r\n          <CircularLoader />\r\n        }\r\n      </div>\r\n      <div className={clsCharts}>\r\n        <div className=\"charts-container__heading\">\r\n          <h2>Data chart</h2>\r\n          <h3>(Cases over time)</h3>\r\n        </div>\r\n        {isDataNotEmpty && <DataChart data={condensedDataConfined} />}\r\n        <div className=\"charts-container__source\">\r\n          Data sources: Johns Hopkins University CSSE\r\n          <a href=\"https://github.com/CSSEGISandData/COVID-19\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <GithubIcon />\r\n            repository\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst DataPanelTiles = ({ confirmed, deaths, recovered }) => {\r\n  return(\r\n    <Fragment>\r\n      <DataPanelTile cls=\"confirmed\" heading=\"Confirmed\">\r\n        {bigIntegerDisplay(confirmed)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"recovered\" heading=\"Recovered\">\r\n        {bigIntegerDisplay(recovered)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"deaths\" heading=\"Deaths\">\r\n        {bigIntegerDisplay(deaths)}\r\n      </DataPanelTile>\r\n      <DataPanelTile cls=\"computations\" heading=\"Computations\">\r\n        <div>\r\n          Active cases: {bigIntegerDisplay(confirmed - deaths - recovered)}\r\n        </div>\r\n        <div>\r\n          Recovery rate: {`${percentageDisplay(recovered / confirmed * 100)}%`}\r\n        </div>\r\n        <div>\r\n          Mortality rate: {`${percentageDisplay(deaths / confirmed * 100)}%`}\r\n        </div>\r\n      </DataPanelTile>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst DataPanelTile = ({ cls, heading, children }) => {\r\n  cls = `data-panel__tile ${cls}`;\r\n  return(\r\n    <div className={cls}>\r\n      <div className=\"data-panel__tile__heading\">{heading}</div>\r\n      <div className=\"data-panel__tile__content\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DataPanelControls = ({ onToggleFilters, onToggleCharts }) => {\r\n  return(\r\n    <div className=\"data-panel__controls\">\r\n      <span onClick={onToggleFilters}>\r\n        <FilterIcon />\r\n      </span>\r\n      <span onClick={onToggleCharts}>\r\n        <ArrowLeftIcon />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\nconst LiveDataComputations = ({\r\n  confirmed, deaths, recovered, children\r\n}) => {\r\n  return(\r\n    <div className=\"data-panel-computations__block\">\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"data-panel-computations__metric-key\">\r\n          Active cases:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          {bigIntegerDisplay(confirmed - deaths - recovered)}\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"live-data-panel-computations__metric-key\">\r\n          Recover rate:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          {`${percentageDisplay(recovered / confirmed * 100)}%`}\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__metric\">\r\n        <span className=\"data-panel-computations__metric-key\">\r\n          Mortality rate:&nbsp;\r\n        </span>\r\n        <span className=\"data-panel-computations__metric-value\">\r\n          <span className=\"data-panel-computations__fatal\">\r\n            {`${percentageDisplay(deaths / confirmed * 100)}%`}\r\n          </span>\r\n        </span>\r\n      </div>\r\n      <div className=\"data-panel-computations__block-description\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nconst FilterIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M1 0l9 15.094v5.906l4 3v-8.906l9-15.094h-22zm18.479 2l-2.981 5h-8.996l-2.981-5h14.958z\" />\r\n  </svg>\r\n);\r\n\r\nconst ArrowLeftIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M24 11.871l-5-4.871v3h-19v4h19v3z\" />\r\n  </svg>\r\n);\r\n\r\nconst GithubIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n  </svg>\r\n)\r\n\r\nexport default DataPanel;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport Select from 'react-select';\r\nimport DiscreteSlider from './components/discrete-slider/discrete-slider';\r\nimport DataMap from './components/data-map/data-map';\r\nimport DataPanel from './components/data-panel/data-panel';\r\nimport { filterPropValuePair } from './utilities/data-mutations';\r\nimport { dateDisplay } from './utilities/formatting';\r\nimport { interfaceOutGeoJSON } from './utilities/interfaces';\r\nimport './dashboard.css';\r\n\r\n//import __DATA__MOCKUP from './data-mockup';\r\n\r\nconst __SATELLITE = 'satellite-v9';\r\nconst __LIGHTMODE = 'light-v10';\r\nconst __DARKMODE = 'dark-v10';\r\nconst __STREETS = 'streets-v11';\r\n\r\nconst permuteMapStyles = (currentValue) => {\r\n  switch(currentValue) {\r\n    case __SATELLITE:\r\n      return __LIGHTMODE;\r\n    case __LIGHTMODE:\r\n      return __DARKMODE;\r\n    case __DARKMODE:\r\n      return __STREETS;\r\n    case __STREETS:\r\n      return __SATELLITE;\r\n    default:\r\n      console.log(`Sorry, the style '${currentValue}' doesn't exist.`);\r\n  }\r\n}\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      mapStyle: __DARKMODE,\r\n      data: {\r\n        fetched: {},\r\n        filtered: {},\r\n      },\r\n      survey: {},\r\n      currentTime: 0,\r\n      filteredRegions: [],\r\n      chartsExpanded: false,\r\n      filtersExpanded: false,\r\n    }\r\n    this.registeredRegions = [];\r\n    this.mapNode = null;\r\n  }\r\n\r\n  handleReload = () => {\r\n    document.location.reload();\r\n  }\r\n\r\n  handleSwitchTheme = () => {\r\n    const { mapStyle } = this.state;\r\n    this.setState({ mapStyle: permuteMapStyles(mapStyle) });\r\n  }\r\n\r\n  handleSetTime = (value) => {\r\n    const { data: {filtered} } = this.state;\r\n    const timestamps = Object.keys(filtered);\r\n    this.setState({ currentTime: Number(value) + Number(timestamps[0]) });\r\n  }\r\n\r\n  // Not in use yet\r\n  /*\r\n  handleSetLive = () => {\r\n    const { data: {filtered} } = this.state;\r\n    const timestamps = Object.keys(filtered);\r\n    // evaluate the closest timestamp to current time\r\n    //const now = Date.now();\r\n    //const D = timestamps.map(timestamp => Math.abs(timestamp - now));\r\n    //const i = D.indexOf(Math.min(...D));\r\n    // or just grab the last recorded timestamp...\r\n    this.setState({\r\n      currentTime: timestamps[timestamps.length - 1],\r\n    });\r\n  }\r\n  */\r\n\r\n  handleToggleCharts = () => {\r\n    this.setState({\r\n      chartsExpanded: !this.state.chartsExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapseCharts = () => {\r\n    this.setState({ chartsExpanded: false });\r\n  }\r\n\r\n  handleToggleFilters = () => {\r\n    this.setState({\r\n      filtersExpanded: !this.state.filtersExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapseFilters = () => {\r\n    this.setState({ filtersExpanded: false });\r\n  }\r\n\r\n  handleFilterCountries = (filteredRegions) => {\r\n    this.setState({ filteredRegions });\r\n    let { data } = this.state;\r\n    const { fetched } = data;\r\n    if(!!filteredRegions && filteredRegions.length > 0) {\r\n      // filtered regions come as an object { value: ..., label: ... }\r\n      filteredRegions = filteredRegions.map(r => r.value);\r\n      data.filtered = filterPropValuePair(['province', 'country'], filteredRegions, fetched);\r\n    } else {\r\n      data.filtered = data.fetched;\r\n    }\r\n    this.setState({ data });\r\n  }\r\n\r\n  setTime = (unixtime) => {\r\n    this.setState({\r\n      currentTime: unixtime,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { data } = this.props;\r\n    const timestamps = Object.keys(data);\r\n    const currentTime = Number(timestamps[timestamps.length - 1]);\r\n    this.setState({\r\n      data: {\r\n        fetched: data,\r\n        filtered: data,\r\n      },\r\n      currentTime,\r\n    });\r\n    // Register all possible countries and regions\r\n    // While eliminating double entries and sort alphabetically\r\n    const __registeredCountries = [\r\n      ...new Set(data[currentTime].map(datapoint => datapoint.country).sort())\r\n    ].map(\r\n      region => ({ value: region, label: region })\r\n    );\r\n    const __registeredProvinces = data[currentTime].map(\r\n      datapoint => datapoint.province\r\n    ).filter(\r\n      province => !!province\r\n    ).sort().map(\r\n      region => ({ value: region, label: region })\r\n    );\r\n    this.registeredRegions = [\r\n      {\r\n        label: \"Countries\",\r\n        options: __registeredCountries\r\n      },\r\n      {\r\n        label: \"Provinces / States\",\r\n        options: __registeredProvinces\r\n      },\r\n    ];\r\n  }\r\n\r\n  render(){\r\n    const {\r\n      state,\r\n      mapNode,\r\n      registeredRegions,\r\n      handleFilterCountries,\r\n      handleSetTime,\r\n      handleToggleCharts,\r\n      handleCollapseCharts,\r\n      handleToggleFilters,\r\n      handleCollapseFilters,\r\n    } = this;\r\n    const {\r\n      mapStyle,\r\n      data: {filtered},\r\n      //survey,\r\n      currentTime,\r\n      filteredRegions,\r\n      chartsExpanded,\r\n      filtersExpanded,\r\n    } = state;\r\n  \r\n    const timestamps = Object.keys(filtered);\r\n    const timeBegin = Number(timestamps[0]);\r\n    const timeEnd = Number(timestamps[timestamps.length - 1]);\r\n    const geoData = interfaceOutGeoJSON(filtered[currentTime]);\r\n    \r\n    return(\r\n      <Fragment>\r\n        {filtered && <DataPanel\r\n          data={filtered}\r\n          currentTime={currentTime}\r\n          chartsExpanded={chartsExpanded}\r\n          onToggleFilters={handleToggleFilters}\r\n          onToggleCharts={handleToggleCharts}\r\n        />}\r\n        <div className=\"data-map-container\" ref={e => this.mapNode = e}>\r\n          {geoData && <DataMap\r\n            data={geoData}\r\n            container={mapNode}\r\n            mapStyle={mapStyle}\r\n            onClick={handleCollapseCharts}\r\n          />}\r\n        </div>\r\n        <Modal\r\n          open={filtersExpanded}\r\n          onClose={handleCollapseFilters}\r\n          classNames={{\r\n            modal: 'modal-filters',\r\n            overlay: 'modal-filters-overlay'\r\n          }}\r\n          center\r\n        >\r\n          <h2>Data filters</h2>\r\n          <div className=\"filter-label\">Region</div>\r\n          <Select\r\n            isMulti\r\n            name=\"countries\"\r\n            options={registeredRegions}\r\n            defaultValue={filteredRegions}\r\n            onChange={handleFilterCountries}\r\n          />\r\n          <div className=\"filter-label\">Time</div>\r\n          <DiscreteSlider\r\n            min={0}\r\n            max={timeEnd - timeBegin}\r\n            availableValues={timestamps.map(t => t - timeBegin)}\r\n            startValue={currentTime - timeBegin}\r\n            onChange={handleSetTime}\r\n            formatValue={(v) => dateDisplay(new Date(v + Number(timeBegin)))}\r\n          />\r\n        </Modal>\r\n        {!(currentTime === 0 || currentTime === timeEnd || filtersExpanded) &&\r\n          <div className=\"dashboard-display-time\">\r\n            Current time: {dateDisplay(new Date(currentTime))}\r\n          </div>\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}","export const interfaceOutGeoJSON = (dataset) => {\r\n  let geoData = {\r\n    type: 'FeatureCollection',\r\n    features: [],\r\n  }\r\n  if(dataset) {\r\n    let geodataFeatures = [];\r\n    for(const point of dataset){\r\n      const {\r\n        province,\r\n        country,\r\n        confirmed,\r\n        recovered,\r\n        deaths,\r\n        latlng,\r\n      } = point;\r\n      const [ lat, lng ] = latlng;\r\n      geodataFeatures.push({\r\n        type: 'Feature',\r\n        properties: {\r\n          province,\r\n          country,\r\n          confirmed: Number(confirmed),\r\n          recovered: Number(recovered),\r\n          deaths: Number(deaths),\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [Number(lng), Number(lat)],\r\n        }\r\n      });\r\n    }\r\n    geoData.features = geodataFeatures;\r\n  }\r\n  return geoData;\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from \"@reach/router\"\r\nimport './navigation.css';\r\n\r\nexport default class Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isExpanded: false,\r\n    }\r\n  }\r\n\r\n  handleToggle = () => {\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded,\r\n    });\r\n  }\r\n\r\n  handleCollapse = () => {\r\n    this.setState({\r\n      isExpanded: false,\r\n    });\r\n  }\r\n\r\n  /*\r\n  componentWillUnmount() {\r\n    const { props, handleCollapse } = this,\r\n          { rootNode } = props;\r\n    rootNode.removeEventListener('click', handleCollapse);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { props, handleCollapse } = this,\r\n          { rootNode } = props;\r\n    rootNode.addEventListener('click', handleCollapse);\r\n  }\r\n  */\r\n\r\n  render() {\r\n    const { state, handleToggle, handleCollapse } = this,\r\n          { isExpanded } = state,\r\n          clsNav = `navigation ${isExpanded ? 'expanded' : ''}`,\r\n          clsToggle = `navigation-toggle ${isExpanded ? 'expanded' : ''}`;\r\n    return(\r\n      <Fragment>\r\n        <div className={clsToggle} onClick={handleToggle}>\r\n          <MenuIcon />\r\n        </div>\r\n        <nav className={clsNav}>\r\n          <div className=\"navigation__brand\">Corona<span>hub</span></div>\r\n          <NavList onClose={handleCollapse}>\r\n            <NavLink to=\"/\"><HomeIcon /> Home</NavLink>\r\n            <NavLink to=\"/table\"><TableIcon /> Table</NavLink>\r\n            <NavLink to=\"/survey\"><SurveyIcon /> Survey</NavLink>\r\n            <NavLink to=\"/contact\"><ContactIcon /> Contact</NavLink>\r\n            <NavLink to=\"/imprint\"><ImprintIcon /> Imprint</NavLink>\r\n          </NavList>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst __setActive = ({ isCurrent }) => {\r\n  return isCurrent ? { className: \"active\" } : {}\r\n}\r\n\r\nconst NavList = ({ onClose, children }) => {\r\n  return(\r\n    <ul>\r\n      {children.map((c, i) => (\r\n        <Link key={i} to={c.props.to} getProps={__setActive}>\r\n          <li onClick={onClose}>{c.props.children}</li>\r\n        </Link>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst NavLink = ({ children }) => <Fragment>{children}</Fragment>;\r\n\r\nconst MenuIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\" />\r\n  </svg>\r\n);\r\n\r\nconst HomeIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M21 13v10h-6v-6h-6v6h-6v-10h-3l12-12 12 12h-3zm-1-5.907v-5.093h-3v2.093l3 3z\" />\r\n  </svg>\r\n);\r\n\r\nconst TableIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M20 19h-4v-4h4v4zm-6-10h-4v4h4v-4zm6 0h-4v4h4v-4zm-12 6h-4v4h4v-4zm16-14v22h-24v-22h24zm-2 6h-20v14h20v-14zm-8 8h-4v4h4v-4zm-6-6h-4v4h4v-4z\" />\r\n  </svg>\r\n);\r\n\r\nconst SurveyIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M7 16h10v1h-10v-1zm0-1h10v-1h-10v1zm15-13v22h-20v-22h3c1.229 0 2.18-1.084 3-2h8c.82.916 1.771 2 3 2h3zm-11 1c0 .552.448 1 1 1s1-.448 1-1-.448-1-1-1-1 .448-1 1zm9 1h-4l-2 2h-3.898l-2.102-2h-4v18h16v-18zm-13 9h10v-1h-10v1zm0-2h10v-1h-10v1z\" />\r\n  </svg>\r\n);\r\n\r\nconst ContactIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M0 3v18h24v-18h-24zm21.518 2l-9.518 7.713-9.518-7.713h19.036zm-19.518 14v-11.817l10 8.104 10-8.104v11.817h-20z\" />\r\n  </svg>\r\n);\r\n\r\nconst ImprintIcon = () => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M20 12.875v5.068c0 2.754-5.789 4.057-9 4.057-3.052 0-9-1.392-9-4.057v-6.294l9 4.863 9-3.637zm-8.083-10.875l-12.917 5.75 12 6.5 11-4.417v7.167h2v-8.25l-12.083-6.75zm13.083 20h-4c.578-1 1-2.5 1-4h2c0 1.516.391 2.859 1 4z\" />\r\n  </svg>\r\n);\r\n","import React, { Suspense, lazy, Component } from 'react';\nimport { Router } from \"@reach/router\";\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport Dashboard from './Dashboard';\nimport Navigation from './components/navigation/navigation';\nimport Loader from './components/loader/loader';\n\nconst __PROXY = 'https://cors-anywhere.herokuapp.com/';\nconst getRecordedData = async () => {\n  // TODO: is there a better solution for the proxy / CORS situation?\n  const res = await fetch(\n    `${__PROXY}http://nodejs-express-app-yadii.eu-gb.mybluemix.net/getOfficialData`\n  );\n  const data = await res.json();\n  return data;\n}\n\nconst __MIN__LOADINGTIME = 2000;\nconst genLazyRoute = async (routeModule, timeMin = __MIN__LOADINGTIME) => {\n  return Promise.all([\n    routeModule,\n    new Promise(resolve => setTimeout(resolve, timeMin))\n  ]).then(([moduleExports]) => moduleExports);\n}\n\n//const Home = lazy(() => genLazyRoute(import('./components/home/home')));\nconst DataTable = lazy(() => genLazyRoute(import('./components/data-table/data-table')));\nconst Survey = lazy(() => genLazyRoute(import('./components/survey/survery')));\n//const Contact = lazy(() => genLazyRoute(import('./components/contact/contact')));\n//const Imprint = lazy(() => genLazyRoute(import('./components/imprint/imprint')));\n\nconst DataLoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker({\n    delay: __MIN__LOADINGTIME,\n  });\n  return promiseInProgress && <Loader />;\n}\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {},\n    }\n  }\n\n  async componentDidMount() {\n    const data = await trackPromise(getRecordedData());\n    this.setState({ data });\n    console.log('Data recieved from server');\n  }\n\n  render() {\n    const { data } = this.state;\n    const timestamps = Object.keys(data);\n    const latestData = data[timestamps[timestamps.length - 1]];\n    \n    return(\n      <Suspense fallback={<Loader />}>\n        <div className=\"app\">\n          <DataLoadingIndicator />\n          <Navigation />\n          <Router>\n            {Object.keys(data).length > 0 &&\n              <Dashboard path=\"/\" data={data} />\n            }\n            {latestData &&\n              <DataTable path=\"/table\" dataset={latestData} />\n            }\n            <Survey path=\"/survey\" />\n          </Router>\n        </div>\n      </Suspense>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}