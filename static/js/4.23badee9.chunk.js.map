{"version":3,"sources":["components/survey/survery.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["_includesSymptoms","values","symptoms","reduce","acc","val","includes","evalInfectionProbability","metrics","scalar","array","cough","fever","proximity","washHands","washHandsDuration","washHandsSoap","riskyTravel","symptomaticContact","diagnosedContact","criticalContact","soapCoefficient","Number","durationCoefficient","Math","log","g","Array","fill","map","a","binaryAnswers","value","label","handWashDurations","symptomsCovid","CoronaSurvey","setMetric","metric","setState","obj","key","Object","defineProperty","enumerable","configurable","writable","setSymptoms","options","o","state","this","className","title","onChange","multi","closeMenuOnSelect","percentageDisplay","style","color","role","aria-label","Component","CoronaSurveyHero","Question","children","Answer","props","name","isMulti","option","placeholder","SurveySlide","Survey","prevSlide","currentSlide","nextSlide","totalSlides","setTimeout","length","c","i","slideNumber","onClick","SurveyCaroussel","SurveySlideRender","cls"],"mappings":"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","file":"static/js/4.23badee9.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select';\r\n//import { CircularLoader } from '../loader/loader';\r\nimport { percentageDisplay } from '../../utilities/formatting';\r\nimport './survey.css';\r\nimport { CircularLoader } from '../loader/loader';\r\n\r\nconst _scalarMult = (scalar, array) => (\r\n  array.map(a => scalar * a)\r\n);\r\n\r\nconst _includesSymptoms = (values, symptoms) => (\r\n  values.reduce((acc, val) => acc || symptoms.includes(val), false)\r\n);\r\n\r\nconst symptomsMap = (values) => {\r\n  if(_includesSymptoms(values, [\r\n    'breathing-problems', 'high-temperature'\r\n  ])) {\r\n    return .8;\r\n  } else if(_includesSymptoms(values, [\r\n    'sore-throat', 'exhaustion',\r\n  ])) {\r\n    return .6;\r\n  } else if(_includesSymptoms(values, [\r\n    'headache', 'limb-pain', 'chills',\r\n  ])) {\r\n    return .4;\r\n  } else if(_includesSymptoms(values, [\r\n    'sniff', 'diarrhea', 'loss-of-smell',\r\n  ])) {\r\n    return .2;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nconst evalInfectionProbability = (metrics) => {\r\n  const {\r\n    cough,\r\n    fever,\r\n    symptoms,\r\n    proximity,\r\n    washHands,\r\n    washHandsDuration,\r\n    washHandsSoap,\r\n    riskyTravel,\r\n    symptomaticContact,\r\n    diagnosedContact,\r\n    criticalContact,\r\n  } = metrics;\r\n\r\n  const soapCoefficient = washHands ? (1 - .5*Number(washHandsSoap)) : 1,\r\n        durationCoefficient = washHands ? 1 - (.75*Math.log(washHandsDuration + 4) - 1) : 1;\r\n\r\n  const n = 7,\r\n        g = new Array(n).fill(0);\r\n  \r\n  g[0] = Number(cough);\r\n  g[1] = Number(fever);\r\n  g[2] = symptomsMap(symptoms);\r\n  g[3] = .6*Number(proximity);\r\n  g[4] = (.4 - .4*Number(washHands) + .4) * soapCoefficient * durationCoefficient;\r\n  g[5] = .75*Number(riskyTravel);\r\n\r\n  if(symptomaticContact) g[6] = .5;\r\n  if(diagnosedContact) g[6] = .75;\r\n  if(criticalContact) g[6] = 1;\r\n\r\n  return _scalarMult(1 / n, g).reduce((acc, val) => acc + val, 0);\r\n}\r\n\r\nconst binaryAnswers = [\r\n  { value: true, label: 'Ja' },\r\n  { value: false, label: 'Nein' }\r\n];\r\n\r\nconst handWashDurations = [\r\n  { value: 0, label: '0-5 Sekunden' },\r\n  { value: 1, label: '5-10 Sekunden' },\r\n  { value: 2, label: '10-15 Sekunden' },\r\n  { value: 3, label: '15-20 Sekunden' },\r\n  { value: 4, label: '>20 Sekunden' }\r\n];\r\n\r\nconst symptomsCovid = [\r\n  { value: 'sore-throat', label: 'Halskratzen' },\r\n  { value: 'chills', label: 'Frösteln' },\r\n  { value: 'high-temperature', label: 'erhöhte Temperatur (>37,5)' },\r\n  { value: 'breathing-problems', label: 'Atemprobleme' },\r\n  { value: 'exhaustion', label: 'Abgeschlagenheit' },\r\n  { value: 'limb-pain', label: ' Glieder- oder Muskelschmerzen' },\r\n  { value: 'loss-of-smell', label: 'Geruchs- oder Geschmacksverlust' },\r\n  { value: 'diarrhea', label: 'Durchfall' },\r\n  { value: 'headache', label: 'Kopfschmerzen' },\r\n  { value: 'sniff', label: 'Schnupfen' },\r\n];\r\n\r\nexport default class CoronaSurvey extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cough: null,\r\n      fever: null,\r\n      symptoms: [],\r\n      proximity: null,\r\n      washHands: null,\r\n      washHandsDuration: 0,\r\n      washHandsSoap: null,\r\n      riskyTravel: null,\r\n      symptomaticContact: null,\r\n      diagnosedContact: null,\r\n      criticalContact: null,\r\n    }\r\n  }\r\n\r\n  setMetric = (metric, { value }) => {\r\n    this.setState({ [metric]: value });\r\n  }\r\n\r\n  setSymptoms = (metric, options) => {\r\n    if(metric === 'symptoms') {\r\n      this.setState({\r\n        symptoms: !!options ? options.map(o => o.value) : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { state, setMetric, setSymptoms } = this;\r\n    return(\r\n      <div className=\"corona-survey\">\r\n        <CoronaSurveyHero /> \r\n        <Survey title=\"COVID-19 infection probability assesement\">\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen trockenen Husten?\r\n              <Answer metric=\"cough\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Fieber (>37,9)?\r\n              <Answer metric=\"fever\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben oder hatten Sie in den vergangenen zwei Wochen zusätzlich dazu eine oder mehrere der folgenden Symptome?\r\n              Wenn ja, welche?\r\n              <Answer\r\n                metric=\"symptoms\"\r\n                onChange={setSymptoms}\r\n                options={symptomsCovid}\r\n                multi={true}\r\n                closeMenuOnSelect={false}\r\n              />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie sich in den vergangenen zwei Wochen für mindestens 5 Minuten in der Nähe zu Personen aufgehalten,\r\n              die geniest oder gehustet haben (z.B. in der U-Bahn, im Bus oder in einem geschlossenen Raum)?\r\n              <Answer metric=\"proximity\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Waschen Sie sich häufig die Hände (mind. 3x am Tag)?\r\n              <Answer metric=\"washHands\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Für wie lange waschen Sie sich die Hände?\r\n              <Answer\r\n                metric=\"washHandsDuration\"\r\n                options={handWashDurations}\r\n                onChange={setMetric}\r\n              />\r\n            </Question>\r\n            <Question>\r\n              Verwenden Sie Seife?\r\n              <Answer metric=\"washHandsSoap\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Sind Sie in den vergangenen zwei Wochen in eines dieser Risikogebiete gereist?\r\n              (RKI, Stand 21.3.2020: Ägypten, China (Provinz Hubei), Iran, Italien,\r\n              Österreich (Bundesland Tirol), Spanien (Madrid),\r\n              Südkorea (Provinz Gyeongsangbuk-do (Nord-Gyeongsang),\r\n              USA (Bundesstaaten Kalifornien, Washington und New York))\r\n              <Answer metric=\"riskyTravel\" onChange={setMetric} />\r\n            </Question>\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt*\r\n              zu einer Person, die gehustet hat?\r\n              <Answer metric=\"symptomaticContact\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt* zu einer Person,\r\n              die leicht an COVID-19 erkrankt ist\r\n              (labortechnisch festgestellt, ohne Fieber, mit Husten, Halskratzen und/oder ggf. Abgeschlagenheit)?\r\n              <Answer metric=\"diagnosedContact\" onChange={setMetric} />\r\n            </Question>\r\n            <Question>\r\n              Haben Sie aktuell oder hatten Sie in den vergangenen zwei Wochen Kontakt*\r\n              zu einer Person, die schwer an COVID-19 erkrankt ist\r\n              (labortechnisch festgestellt, mit Husten, Fieber und/oder Lungenentzündung)?\r\n              <Answer metric=\"criticalContact\" onChange={setMetric} />\r\n            </Question>\r\n            *Händeschütteln, Umarmen, von einem gemeinsamen Teller essen, Gegenstände berühren,\r\n            die die Infizierte Person auch berührt hat, weniger als 1,5 m Abstand.\r\n          </SurveySlide>\r\n          <SurveySlide>\r\n            <div className=\"corona-survey__conclusion\">\r\n              <p>\r\n                Vielen Dank für Ihre Teilnahme!\r\n              </p>\r\n              <p>\r\n                Die Wahrscheinlichkeit einer Infektion beträgt:\r\n                &nbsp;\r\n                {`${percentageDisplay(evalInfectionProbability(state)*100)}%`}\r\n              </p>\r\n              <p style={{color: 'red'}}>\r\n                ACHTUNG: Dies ist ein Prototyp!\r\n                Der errechnete Wert basiert auf einem\r\n                noch nicht bestätigten Modell.\r\n              </p>\r\n              <p>\r\n                Mit Hilfe der von Ihnen bereitgestellten Daten wird eine\r\n                weitaus differenziertere Betrachtung der Situation\r\n                möglich sein als mit den gemeldeteten Labortests allein.\r\n              </p>\r\n              <p>\r\n                Halten Sie gut durch! <span role=\"img\" aria-label=\"strength\">💪</span>\r\n              </p>\r\n            </div>\r\n          </SurveySlide>\r\n        </Survey>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst CoronaSurveyHero = () => <div className=\"corona-survey-hero\"></div>;\r\n\r\nconst Question = ({ children }) => (\r\n  <div className=\"corona-survey__question\">{children}</div>\r\n);\r\n\r\nconst Answer = (props) => {\r\n  const {\r\n    metric,\r\n    onChange,\r\n    options = binaryAnswers,\r\n    multi = false,\r\n    closeMenuOnSelect = true,\r\n  } = props;\r\n  return(\r\n    <Select\r\n      className=\"corona-survey__answers\"\r\n      name={metric}\r\n      isMulti={multi}\r\n      options={options}\r\n      onChange={(option) => { onChange(metric, option) }}\r\n      closeMenuOnSelect={closeMenuOnSelect}\r\n      placeholder={'Auswahl...'}\r\n    />\r\n  );\r\n}\r\n\r\n//------------\r\n\r\nconst SurveySlide = ({ children }) => (\r\n  <Fragment>{children}</Fragment>\r\n);\r\n\r\nclass Survey extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      totalSlides: 0,\r\n      currentSlide: 0,\r\n    }\r\n  }\r\n\r\n  prevSlide = () => {\r\n    const { currentSlide } = this.state;\r\n    if(currentSlide > 0) {\r\n      this.setState({ currentSlide: currentSlide - 1 });\r\n    }\r\n  }\r\n\r\n  nextSlide = () => {\r\n    const { totalSlides, currentSlide } = this.state;\r\n    if(currentSlide < totalSlides - 1) {\r\n      this.setState({ currentSlide: currentSlide + 1 });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        totalSlides: this.props.children.length,\r\n      });\r\n    }, 1500);\r\n  }\r\n\r\n  render() {\r\n    const { props, state, prevSlide, nextSlide } = this;\r\n    const { title, children } = props;\r\n    const { totalSlides, currentSlide } = state;\r\n    // TODO: Loading spinner while totalSLides <= 0\r\n    return(\r\n      <Fragment>\r\n        {totalSlides > 0 ? <Fragment>\r\n          <h2>{title}</h2>\r\n          <div className=\"survey__step\">\r\n            {currentSlide + 1} / <span>{totalSlides}</span>\r\n          </div>\r\n          <SurveyCaroussel>\r\n            {children.map((c, i) => (\r\n              <SurveySlideRender key={i} slideNumber={i} currentSlide={currentSlide}>\r\n                {c.props.children}\r\n              </SurveySlideRender>\r\n            ))}\r\n            <div className=\"survery-caroussel__controls\">\r\n              <button onClick={prevSlide}>Zurück</button>\r\n              <button onClick={nextSlide}>Weiter</button>\r\n            </div>\r\n          </SurveyCaroussel>\r\n        </Fragment>\r\n        :\r\n        <div className=\"corona-survey-loader-container\"><CircularLoader /></div>\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst SurveyCaroussel = ({ children }) => (\r\n  <div className=\"survey-caroussel\">{children}</div>\r\n);\r\n\r\nconst SurveySlideRender = ({ slideNumber, currentSlide, children }) => {\r\n  const isVisible = slideNumber === currentSlide;\r\n  const cls = `survey-slide-render ${isVisible ? 'visible': ''}`;\r\n  const clsInner = 'survey-slide-render__inner';\r\n  return <div className={cls}><div className={clsInner}>{children}</div></div>;\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}