{"version":3,"sources":["components/data-map/layers-setup.js","components/data-map/data-map.js","components/live-data-panel/live-data-panel.js","components/controls/controls.js","utilities/formatting.js","components/timeline/timeline.js","components/loader/loader.js","utilities/parse-csv.js","utilities/datetime.js","App.js","utilities/interfaces.js","serviceWorker.js","index.js"],"names":["circleLayer","id","type","source","paint","countLayer","layout","DataMap","data","mapStyle","useState","width","height","latitude","longitude","zoom","viewport","setViewport","mapStyleURI","onViewportChange","mapboxApiAccessToken","style","position","bottom","left","LiveDataPanel","confirmed","deaths","recovered","className","Controls","props","onMouseMove","e","target","clientX","clientY","key","dataset","setState","state","this","handleReload","handleSetLive","handleExpandTimeline","styTooltip","top","padding","viewBox","d","data-key","onClick","fillRule","clipRule","Component","pad","num","size","s","length","Object","defineProperty","Array","prototype","value","sb","f","i","o","concat","call","sort","a","b","len","sortBy","TimelineWrapper","cls","children","TimelineNode","timestamp","currentTimestamp","clickParams","pointerEvents","opacity","date","Date","getDate","getMonth","getFullYear","dateDisplay","CloseButton","params","Timeline","timestamps","expanded","selectedDate","handleCollapseTimeline","handleTimeSelect","map","t","Loader","keys","parseCSV","str","arr","quote","row","col","c","cc","nc","shiftDateBack","setDate","__PROXY","LoadingIndicator","usePromiseTracker","delay","promiseInProgress","App","document","location","reload","timelineExpanded","handleThemeToggle","getLiveData","headers","Headers","urlTotal","urlCountries","init","method","mode","cache","requestTotal","Request","requestCountries","trackPromise","fetch","responseTotal","responseCountries","json","dataTotal","dataCountries","console","error","dataLive","total","countries","getArchivedData","url","request","response","text","prevState","dataArchived","String","earliestDate","currentDate","getTime","geoData","features","geodataFeatures","point","provinceState","countryRegion","lastUpdate","lat","long","push","properties","region","Number","geometry","coordinates","interfaceCSSEcurrentGeoJSON","interfaceCSSEdailyGeoJSON","casesTotal","controlsParams","timelineParams","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.60ef9d15.chunk.js","sourcesContent":["export const circleLayer = {\r\n  id: 'clusters',\r\n  type: 'circle',\r\n  source: 'covid-19',\r\n  paint: {\r\n    'circle-color': [\r\n      'step',\r\n      ['get', 'confirmed'],\r\n      '#03befc', 20,\r\n      '#f1f075', 800,\r\n      '#f28cb1', 5000,\r\n      '#ba1818'\r\n    ],\r\n    'circle-radius': [\r\n      'step',\r\n      ['zoom'], 4, 2, 6, 4, [\r\n        'interpolate',\r\n        ['cubic-bezier', 0, 0.5, 1, 0.5 ],\r\n        ['get', 'confirmed'],\r\n        20,  8,\r\n        5000, 25\r\n      ]\r\n    ],\r\n  }\r\n};\r\n\r\nexport const countLayer = {\r\n  id: 'cluster-count',\r\n  type: 'symbol',\r\n  source: 'covid-19',\r\n  layout: {\r\n    'text-field': ['get', 'confirmed'],\r\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n    'text-size': ['step', ['zoom'], 0, 4, 11],\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport ReactMapGL, { Source, Layer, NavigationControl } from 'react-map-gl';\r\nimport { circleLayer, countLayer } from './layers-setup';\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZ2lhbm5vdHIiLCJhIjoiY2s3aHFkcDkwMGMzYjNlbzNvMWl4bGFxbyJ9.2p2O5m7aiA6Bn9vjPe7HrQ';\r\n\r\nconst DataMap = ({ data, mapStyle }) => {\r\n  const [viewport, setViewport] = useState({\r\n    width: '100vw',\r\n    height: '100vh',\r\n    latitude: 45,\r\n    longitude: 10,\r\n    zoom: 4,\r\n  });\r\n\r\n  const mapStyleURI = `mapbox://styles/mapbox/${mapStyle}`;\r\n\r\n  /*\r\n  const clusterParams = {\r\n    cluster: true,\r\n    clusterMaxZoom: 14,\r\n    clusterRadius: 50,\r\n    clusterProperties: { 'cluster_count': ['+', ['case', ['get', 'confirmed'], 1, 0]] },\r\n  }\r\n  */\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      onViewportChange={setViewport}\r\n      mapboxApiAccessToken={MAPBOX_TOKEN}\r\n      mapStyle={mapStyleURI}\r\n    >\r\n      <Source id=\"covid-19\" type=\"geojson\" data={data}>\r\n        <Layer {...circleLayer} />\r\n        <Layer {...countLayer} />\r\n      </Source>\r\n      <div style={{position: 'absolute', bottom: '40px', left: '20px'}}>\r\n        <NavigationControl />\r\n      </div>\r\n    </ReactMapGL>\r\n  );\r\n}\r\n\r\nexport default DataMap;\r\n","import React from 'react';\r\nimport './live-data-panel.css';\r\n\r\nconst LiveDataPanel = ({ data }) => {\r\n  const { confirmed, deaths, recovered } = data;\r\n  return(\r\n    <div className=\"live-data-panel\">\r\n      <div className=\"live-data-panel__sign\">\r\n        <div className=\"blinking-light\"></div>\r\n        Live Data\r\n      </div>\r\n      <div className=\"live-data-panel__tile confirmed\">\r\n        <div className=\"live-data-panel__key\">Confirmed</div>\r\n        <div className=\"live-data-panel__value\">{confirmed}</div>\r\n      </div>\r\n      <div className=\"live-data-panel__tile deaths\">\r\n        <div className=\"live-data-panel__key\">Deaths</div>\r\n        <div className=\"live-data-panel__value\">{deaths}</div>\r\n      </div>\r\n      <div className=\"live-data-panel__tile recovered\">\r\n        <div className=\"live-data-panel__key\">Recovered</div>\r\n        <div className=\"live-data-panel__value\">{recovered}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiveDataPanel;\r\n","import React, { Component, Fragment } from 'react';\r\nimport './controls.css';\r\n\r\nexport default class Controls extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clientX: 0,\r\n      clientY: 0,\r\n    }\r\n  }\r\n\r\n  onMouseMove = (e) => {\r\n    const { target, clientX, clientY } = e;\r\n    const { key } = target.dataset;\r\n    this.setState({ key, clientX, clientY });\r\n  }\r\n\r\n  render() {\r\n    const { props, state, onMouseMove } = this;\r\n    const { handleReload, handleSetLive, handleExpandTimeline } = props;\r\n    const { key, clientX, clientY } = state;\r\n    const styTooltip = { top: clientY + 8, left: clientX + 12, padding: key ? '6px' : '0' }\r\n    return(\r\n      <Fragment>\r\n        <div className=\"control-tooltip\" style={styTooltip}>{key}</div>\r\n        <div className=\"controls\" onMouseMove={onMouseMove}>\r\n          <div className=\"controls__icon\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\" />\r\n            </svg>\r\n          </div>\r\n          <div className=\"controls__button\" data-key=\"Reload\" onClick={handleReload}>\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M20.944 12.979c-.489 4.509-4.306 8.021-8.944 8.021-2.698 0-5.112-1.194-6.763-3.075l1.245-1.633c1.283 1.645 3.276 2.708 5.518 2.708 3.526 0 6.444-2.624 6.923-6.021h-2.923l4-5.25 4 5.25h-3.056zm-15.864-1.979c.487-3.387 3.4-6 6.92-6 2.237 0 4.228 1.059 5.51 2.698l1.244-1.632c-1.65-1.876-4.061-3.066-6.754-3.066-4.632 0-8.443 3.501-8.941 8h-3.059l4 5.25 4-5.25h-2.92z\" />\r\n            </svg>\r\n          </div>\r\n          <div className=\"controls__button\" data-key=\"Back to Live Data\" onClick={handleSetLive}>\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M12.015 7c4.751 0 8.063 3.012 9.504 4.636-1.401 1.837-4.713 5.364-9.504 5.364-4.42 0-7.93-3.536-9.478-5.407 1.493-1.647 4.817-4.593 9.478-4.593zm0-2c-7.569 0-12.015 6.551-12.015 6.551s4.835 7.449 12.015 7.449c7.733 0 11.985-7.449 11.985-7.449s-4.291-6.551-11.985-6.551zm-.015 3c-2.21 0-4 1.791-4 4s1.79 4 4 4c2.209 0 4-1.791 4-4s-1.791-4-4-4zm-.004 3.999c-.564.564-1.479.564-2.044 0s-.565-1.48 0-2.044c.564-.564 1.479-.564 2.044 0s.565 1.479 0 2.044z\" />\r\n            </svg>\r\n          </div>\r\n          <div className=\"controls__button\" data-key=\"Archived Data\" onClick={handleExpandTimeline}>\r\n            <svg width=\"24\" height=\"24\" fillRule=\"evenodd\" clipRule=\"evenodd\">\r\n              <path d=\"M5.829 6c-.412 1.165-1.524 2-2.829 2-1.656 0-3-1.344-3-3s1.344-3 3-3c1.305 0 2.417.835 2.829 2h13.671c2.484 0 4.5 2.016 4.5 4.5s-2.016 4.5-4.5 4.5h-4.671c-.412 1.165-1.524 2-2.829 2-1.305 0-2.417-.835-2.829-2h-4.671c-1.38 0-2.5 1.12-2.5 2.5s1.12 2.5 2.5 2.5h13.671c.412-1.165 1.524-2 2.829-2 1.656 0 3 1.344 3 3s-1.344 3-3 3c-1.305 0-2.417-.835-2.829-2h-13.671c-2.484 0-4.5-2.016-4.5-4.5s2.016-4.5 4.5-4.5h4.671c.412-1.165 1.524-2 2.829-2 1.305 0 2.417.835 2.829 2h4.671c1.38 0 2.5-1.12 2.5-2.5s-1.12-2.5-2.5-2.5h-13.671zm6.171 5c.552 0 1 .448 1 1s-.448 1-1 1-1-.448-1-1 .448-1 1-1z\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n","export const pad = (num, size) => {\r\n  let s = num + '';\r\n  while(s.length < size) s = '0' + s;\r\n  return s;\r\n}\r\n\r\nexport const dateString = (date) => (\r\n  `${pad(date.getMonth() + 1, 2)}-${pad(date.getDate(), 2)}-${date.getFullYear()}`\r\n);\r\n\r\nexport const dateDisplay = (date) => (\r\n  `${pad(date.getDate(), 2)}.${pad(date.getMonth() + 1, 2)}.${date.getFullYear()}`\r\n);\r\n","import React from 'react';\r\nimport { dateDisplay } from '../../utilities/formatting';\r\nimport './timeline.css';\r\n\r\n//Define a custom non-enumerable `sortBy` function using a Schwartzian transform:\r\n(function(){\r\n  if (typeof Object.defineProperty === 'function'){\r\n    try{Object.defineProperty(Array.prototype,'sortBy',{value:sb}); }catch(e){}\r\n  }\r\n  if (!Array.prototype.sortBy) Array.prototype.sortBy = sb;\r\n\r\n  function sb(f){\r\n    for (var i=this.length;i;){\r\n      var o = this[--i];\r\n      this[i] = [].concat(f.call(o,o,i),o);\r\n    }\r\n    this.sort(function(a,b){\r\n      for (var i=0,len=a.length;i<len;++i){\r\n        if (a[i]!=b[i]) return a[i]<b[i]?-1:1;\r\n      }\r\n      return 0;\r\n    });\r\n    for (var i=this.length;i;){\r\n      this[--i]=this[i][this[i].length-1];\r\n    }\r\n    return this;\r\n  }\r\n})();\r\n\r\nconst Timeline = ({\r\n  timestamps,\r\n  expanded,\r\n  selectedDate,\r\n  handleCollapseTimeline,\r\n  handleTimeSelect,\r\n}) => {\r\n  const cls = `timeline ${expanded ? 'expanded' : ''}`;\r\n  return(\r\n    <TimelineWrapper cls={cls}>\r\n      <CloseButton onClick={handleCollapseTimeline} />\r\n      {timestamps.sortBy((d) => (new Date(d))).map((t) => (\r\n        <TimelineNode\r\n          key={t}\r\n          timestamp={t}\r\n          currentTimestamp={selectedDate}\r\n          onClick={handleTimeSelect}\r\n        />\r\n      ))}\r\n    </TimelineWrapper>\r\n  );\r\n}\r\n\r\nconst TimelineWrapper = ({ cls, children }) => {\r\n  return(\r\n    <div className={cls}>{children}</div>\r\n  );\r\n}\r\n\r\nconst TimelineNode = ({\r\n  timestamp, currentTimestamp, onClick\r\n}) => {\r\n  const sty = {\r\n    pointerEvents: 'none',\r\n    opacity: '.5',\r\n  }\r\n  const clickParams = {\r\n    onClick,\r\n    'data-timestamp': timestamp,\r\n    style: timestamp === currentTimestamp ? sty : {},\r\n  }\r\n  const date = new Date(timestamp);\r\n  return(\r\n    <div className=\"timeline__node\" {...clickParams}>\r\n      <div className=\"timeline__node__circle\" {...clickParams}></div>\r\n      <div className=\"timeline__node__timestamp\" {...clickParams}>\r\n        {dateDisplay(date)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CloseButton = ({ onClick }) => {\r\n  const params = {\r\n    className: 'close-button',\r\n    onClick,\r\n  }\r\n  return(\r\n    <div {...params}>\r\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n        <path d=\"M23.954 21.03l-9.184-9.095 9.092-9.174-2.832-2.807-9.09 9.179-9.176-9.088-2.81 2.81 9.186 9.105-9.095 9.184 2.81 2.81 9.112-9.192 9.18 9.1z\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n  return(\r\n    <div className=\"loader-wrapper\">\r\n      <div className=\"loader-title\">COVID-19 Map</div>\r\n      <div className=\"loader\">\r\n        {[...Array(25).keys()].map((key) => <div key={key}></div>)}\r\n      </div>\r\n\t  </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","const parseCSV = (str) => {\r\n  var arr = [];\r\n  var quote = false;  // true means we're inside a quoted field\r\n  // iterate over each character, keep track of current row and column (of the returned array)\r\n  for (var row = 0, col = 0, c = 0; c < str.length; c++) {\r\n    var cc = str[c], nc = str[c+1];        // current character, next character\r\n    arr[row] = arr[row] || [];             // create a new row if necessary\r\n    arr[row][col] = arr[row][col] || '';   // create a new column (start with empty string) if necessary\r\n    // If the current character is a quotation mark, and we're inside a\r\n    // quoted field, and the next character is also a quotation mark,\r\n    // add a quotation mark to the current column and skip the next character\r\n    if (cc === '\"' && quote && nc === '\"') { arr[row][col] += cc; ++c; continue; }  \r\n    // If it's just one quotation mark, begin/end quoted field\r\n    if (cc === '\"') { quote = !quote; continue; }\r\n    // If it's a comma and we're not in a quoted field, move on to the next column\r\n    if (cc === ',' && !quote) { ++col; continue; }\r\n    // If it's a newline (CRLF) and we're not in a quoted field, skip the next character\r\n    // and move on to the next row and move to column 0 of that new row\r\n    if (cc === '\\r' && nc === '\\n' && !quote) { ++row; col = 0; ++c; continue; }\r\n    // If it's a newline (LF or CR) and we're not in a quoted field,\r\n    // move on to the next row and move to column 0 of that new row\r\n    if (cc === '\\n' && !quote) { ++row; col = 0; continue; }\r\n    if (cc === '\\r' && !quote) { ++row; col = 0; continue; }\r\n    // Otherwise, append the current character to the current column\r\n    arr[row][col] += cc;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport default parseCSV;\r\n","export const shiftDateBack = (date) => {\r\n  date.setDate(date.getDate() - 1);\r\n}\r\n","import React, { Component } from 'react';\nimport { usePromiseTracker, trackPromise } from 'react-promise-tracker';\nimport DataMap from './components/data-map/data-map';\nimport LiveDataPanel from './components/live-data-panel/live-data-panel';\nimport Controls from './components/controls/controls';\nimport Timeline from './components/timeline/timeline';\nimport Loader from './components/loader/loader';\nimport parseCSV from './utilities/parse-csv';\nimport { shiftDateBack } from './utilities/datetime';\nimport { dateString } from './utilities/formatting';\nimport {\n  interfaceCSSEcurrentGeoJSON,\n  interfaceCSSEdailyGeoJSON,\n} from './utilities/interfaces';\n\nconst __PROXY = 'https://cors-anywhere.herokuapp.com/';\nconst __SATELLITE = 'satellite-v9';\n//const __LIGHTMODE = 'light-v10';\nconst __DARKMODE = 'dark-v10';\n//const __STREETS = 'streets-v11';\n\nconst LoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker({ delay: 2500 });\n  return(promiseInProgress && <Loader />);  \n}\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedDate: 'current',\n      dataArchived: {},\n      dataLive: {\n        total: {\n          confirmed: { value: 0 },\n          deaths: { value: 0 },\n          recovered: { value: 0 },\n        },\n        countries: [],\n      },\n      mapStyle: __DARKMODE,\n      timelineExpanded: false,\n    }\n  }\n\n  handleReload = () => {\n    document.location.reload();\n  }\n\n  handleSetLive = () => {\n    this.setState({\n      selectedDate: 'current',\n      timelineExpanded: false,\n    });\n  }\n\n  handleThemeToggle = () => {\n    let { mapStyle } = this.state;\n    mapStyle = mapStyle === __SATELLITE ? __DARKMODE : __SATELLITE;\n    this.setState({ mapStyle });\n  }\n\n  handleExpandTimeline = () => {\n    this.setState({ timelineExpanded: true });\n  }\n\n  handleCollapseTimeline = () => {\n    this.setState({ timelineExpanded: false });\n  }\n\n  handleTimeSelect = (e) => {\n    const { timestamp } = e.target.dataset;\n    this.setState({ selectedDate: timestamp });\n  }\n\n  getLiveData = async () => {\n    const headers = new Headers({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    });\n    const method = 'GET',\n          mode = 'cors',\n          type = 'json',\n          cache = 'default',\n          urlTotal = `${__PROXY}https://covid19.mathdro.id/api`,\n          urlCountries = `${__PROXY}https://covid19.mathdro.id/api/deaths`;\n    const init = {\n      headers,\n      method,\n      mode,\n      type,\n      cache,\n    }\n    const requestTotal = new Request(urlTotal, init);\n    const requestCountries = new Request(urlCountries, init);\n    const responseTotal = await trackPromise(fetch(requestTotal, init));\n    const responseCountries = await trackPromise(fetch(requestCountries, init));\n    let dataTotal, dataCountries;\n    try {\n      dataTotal = await responseTotal.json();\n      dataCountries = await responseCountries.json();\n    } catch(e) {\n      console.error(e);\n    }\n    if(!!dataTotal && !!dataCountries) {\n      this.setState({\n        dataLive: {\n          total: dataTotal,\n          countries: dataCountries,\n        },\n      });\n    }\n  }\n\n  getArchivedData = async (date) => {\n    const headers = new Headers(),\n          method = 'GET',\n          mode = 'cors',\n          type = 'text/csv',\n          cache = 'default',\n          url = `${__PROXY}https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/${date}.csv`;\n    const init = {\n      headers,\n      method,\n      mode,\n      type,\n      cache,\n    }\n    const request = new Request(url, init);\n    const response = await trackPromise(fetch(request, init));\n    let data = null;\n    try {\n      data = await response.text();\n    } catch(e) {\n      console.error(e);\n    }\n    if(!!data) {\n      this.setState((prevState) => ({\n        dataArchived: {\n          ...prevState.dataArchived,\n          [date]: parseCSV(String(data)),\n        },\n      }));\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      //02-29-2020 until 01-22-2020 wrong or missing geometric info\n      const earliestDate = new Date('03-01-2020');\n      let currentDate = new Date();\n      shiftDateBack(currentDate);\n      while(currentDate.getTime() >= earliestDate.getTime()) {\n        this.getArchivedData(dateString(currentDate));\n        shiftDateBack(currentDate);\n      }\n      this.getLiveData();\n      // Refresh the live data every 10 seconds (inefficient)\n      /*\n      setInterval(async () => {\n        this.getLiveData();\n      }, 10000);\n      */\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render(){\n    const {\n      handleReload,\n      handleSetLive,\n      handleThemeToggle,\n      handleExpandTimeline,\n      handleCollapseTimeline,\n      handleTimeSelect,\n      state,\n    } = this;\n    const {\n      selectedDate,\n      dataLive,\n      dataArchived,\n      mapStyle,\n      timelineExpanded,\n    } = state;\n\n    let geoData;\n    if(selectedDate === 'current') {\n      geoData = interfaceCSSEcurrentGeoJSON(dataLive.countries);\n    } else {\n      geoData = interfaceCSSEdailyGeoJSON(dataArchived[selectedDate]);\n    }\n\n    const { confirmed, deaths, recovered } = dataLive.total;\n    const casesTotal = {\n      confirmed: confirmed.value,\n      deaths: deaths.value,\n      recovered: recovered.value,\n    }\n\n    const controlsParams = {\n      handleReload,\n      handleSetLive,\n      handleExpandTimeline,\n    }\n\n    const timelineParams = {\n      timestamps: Object.keys(dataArchived),\n      expanded: timelineExpanded,\n      selectedDate,\n      handleCollapseTimeline,\n      handleTimeSelect,\n    }\n\n    return(\n      <div className=\"app\">\n        <LoadingIndicator />\n        <Controls {...controlsParams} />\n        <Timeline {...timelineParams} />\n        <LiveDataPanel data={casesTotal} />\n        {geoData && <DataMap data={geoData} mapStyle={mapStyle} />}\n      </div>\n    );\n  }\n}\n","export const interfaceCSSEdailyGeoJSON = (dataset) => {\r\n  let geoData = {\r\n    type: 'FeatureCollection',\r\n    features: [],\r\n  }\r\n  if(dataset) {\r\n    let geodataFeatures = [];\r\n    for(const row of dataset){\r\n      if(row[0] !== 'Province/State') {\r\n        const date = new Date(row[2]);\r\n        geodataFeatures.push({\r\n          type: 'Feature',\r\n          properties: {\r\n            state: row[0],\r\n            region: row[1],\r\n            timestamp: Number(date.getTime()),\r\n            confirmed: Number(row[3]),\r\n            deaths: Number(row[4]),\r\n            recovered: Number(row[5]),\r\n          },\r\n          geometry: {\r\n            type: 'Point',\r\n            coordinates: [Number(row[7]), Number(row[6])],\r\n          }\r\n        });\r\n      }\r\n      geoData.features = geodataFeatures;\r\n    }\r\n    return geoData;\r\n  }\r\n}\r\n\r\nexport const interfaceCSSEcurrentGeoJSON = (dataset) => {\r\n  let geoData = {\r\n    type: 'FeatureCollection',\r\n    features: [],\r\n  }\r\n  if(dataset) {\r\n    let geodataFeatures = [];\r\n    for(const point of dataset){\r\n      const {\r\n        provinceState,\r\n        countryRegion,\r\n        lastUpdate,\r\n        confirmed,\r\n        deaths,\r\n        recovered,\r\n        lat,\r\n        long,\r\n      } = point;\r\n      geodataFeatures.push({\r\n        type: 'Feature',\r\n        properties: {\r\n          state: provinceState,\r\n          region: countryRegion,\r\n          timestamp: Number(lastUpdate),\r\n          confirmed: Number(confirmed),\r\n          deaths: Number(deaths),\r\n          recovered: Number(recovered),\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [Number(long), Number(lat)],\r\n        }\r\n      });\r\n      geoData.features = geodataFeatures;\r\n    }\r\n    return geoData;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}